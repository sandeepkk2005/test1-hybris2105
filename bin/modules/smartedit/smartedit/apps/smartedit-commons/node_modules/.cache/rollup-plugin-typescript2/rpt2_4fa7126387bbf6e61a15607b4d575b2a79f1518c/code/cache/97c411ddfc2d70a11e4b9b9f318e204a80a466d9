{"code":"import { __decorate, __metadata } from \"tslib\";\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpUtils, StatusText } from '@smart/utils';\r\nimport { IAlertService } from 'smarteditcommons/services/interfaces';\r\nimport { LANGUAGE_RESOURCE_URI } from '../../../utils';\r\n/**\r\n * Used for HTTP error code 404 (Not Found) except for an HTML or a language resource. It will display the response.message in an alert message.\r\n */\r\nvar /* @ngInject */ ResourceNotFoundErrorInterceptor = /** @class */ (function () {\r\n    function /* @ngInject */ ResourceNotFoundErrorInterceptor(alertService, httpUtils) {\r\n        this.alertService = alertService;\r\n        this.httpUtils = httpUtils;\r\n    }\r\n    /* @ngInject */ ResourceNotFoundErrorInterceptor.prototype.predicate = function (request, response) {\r\n        return (response.status === 404 &&\r\n            !this.httpUtils.isHTMLRequest(request, response) &&\r\n            !this._isLanguageResourceRequest(request.url));\r\n    };\r\n    /* @ngInject */ ResourceNotFoundErrorInterceptor.prototype.responseError = function (request, response) {\r\n        this.alertService.showDanger({\r\n            message: response.statusText === StatusText.UNKNOW_ERROR\r\n                ? 'se.unknown.request.error'\r\n                : response.message,\r\n            timeout: 10000\r\n        });\r\n        return Promise.reject(response);\r\n    };\r\n    /* @ngInject */ ResourceNotFoundErrorInterceptor.prototype._isLanguageResourceRequest = function (url) {\r\n        var languageResourceRegex = new RegExp(LANGUAGE_RESOURCE_URI.replace(/\\:.*\\//g, '.*/'));\r\n        return languageResourceRegex.test(url);\r\n    };\r\n    /* @ngInject */ ResourceNotFoundErrorInterceptor = __decorate([\r\n        Injectable(),\r\n        __metadata(\"design:paramtypes\", [IAlertService, HttpUtils])\r\n    ], /* @ngInject */ ResourceNotFoundErrorInterceptor);\r\n    return /* @ngInject */ ResourceNotFoundErrorInterceptor;\r\n}());\r\nexport { /* @ngInject */ ResourceNotFoundErrorInterceptor };\r\n//# sourceMappingURL=ResourceNotFoundErrorInterceptor.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/common@8.2.14_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@angular/common/http.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/interfaces/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/utils/index.ts"],"map":"{\"version\":3,\"file\":\"ResourceNotFoundErrorInterceptor.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/services/interceptors/errors/ResourceNotFoundErrorInterceptor.ts\"],\"names\":[],\"mappings\":\";AAIA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,SAAS,EAAyB,UAAU,EAAE,MAAM,cAAc,CAAC;AAC5E,OAAO,EAAE,aAAa,EAAE,MAAM,sCAAsC,CAAC;AACrE,OAAO,EAAE,qBAAqB,EAAE,MAAM,gBAAgB,CAAC;AAEvD;;GAEG;AAEH;IACI,0DAAoB,YAA2B,EAAU,SAAoB;QAAzD,iBAAY,GAAZ,YAAY,CAAe;QAAU,cAAS,GAAT,SAAS,CAAW;IAAG,CAAC;IACjF,oEAAS,GAAT,UAAU,OAAuB,EAAE,QAA2B;QAC1D,OAAO,CACH,QAAQ,CAAC,MAAM,KAAK,GAAG;YACvB,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,OAAO,EAAE,QAAQ,CAAC;YAChD,CAAC,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,GAAG,CAAC,CAChD,CAAC;IACN,CAAC;IACD,wEAAa,GAAb,UAAc,OAAuB,EAAE,QAA2B;QAC9D,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;YACzB,OAAO,EACH,QAAQ,CAAC,UAAU,KAAK,UAAU,CAAC,YAAY;gBAC3C,CAAC,CAAC,0BAA0B;gBAC5B,CAAC,CAAC,QAAQ,CAAC,OAAO;YAC1B,OAAO,EAAE,KAAK;SACjB,CAAC,CAAC;QACH,OAAO,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACpC,CAAC;IAEO,qFAA0B,GAAlC,UAAmC,GAAW;QAC1C,IAAM,qBAAqB,GAAG,IAAI,MAAM,CAAC,qBAAqB,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;QAC1F,OAAO,qBAAqB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC3C,CAAC;IAvBL;QADC,UAAU,EAAE;yCAEyB,aAAa,EAAqB,SAAS;wDAuBhF;IAAD,uDAAC;CAAA,AAxBD,IAwBC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/services/interceptors/errors/ResourceNotFoundErrorInterceptor.d.ts","writeByteOrderMark":false,"text":"import { HttpErrorResponse, HttpRequest } from '@angular/common/http';\r\nimport { HttpUtils, IHttpErrorInterceptor } from '@smart/utils';\r\nimport { IAlertService } from 'smarteditcommons/services/interfaces';\r\n/**\r\n * Used for HTTP error code 404 (Not Found) except for an HTML or a language resource. It will display the response.message in an alert message.\r\n */\r\nexport declare class ResourceNotFoundErrorInterceptor<T = any> implements IHttpErrorInterceptor<T> {\r\n    private alertService;\r\n    private httpUtils;\r\n    constructor(alertService: IAlertService, httpUtils: HttpUtils);\r\n    predicate(request: HttpRequest<T>, response: HttpErrorResponse): boolean;\r\n    responseError(request: HttpRequest<T>, response: HttpErrorResponse): Promise<any>;\r\n    private _isLanguageResourceRequest;\r\n}\r\n"}}

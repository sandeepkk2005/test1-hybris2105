{"code":"import { __decorate, __extends, __metadata, __spreadArrays } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { clone } from 'lodash';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { stringUtils, GatewayProxied, IAnnouncementService, LogService, SeDowngradeService } from 'smarteditcommons';\r\nexport var ANNOUNCEMENT_DEFAULTS = {\r\n    timeout: 5000,\r\n    closeable: true\r\n};\r\nvar /* @ngInject */ AnnouncementService = /** @class */ (function (_super) {\r\n    __extends(/* @ngInject */ AnnouncementService, _super);\r\n    function /* @ngInject */ AnnouncementService(logService) {\r\n        var _this = _super.call(this) || this;\r\n        _this.logService = logService;\r\n        _this.announcements$ = new BehaviorSubject([]);\r\n        return _this;\r\n    }\r\n    /* @ngInject */ AnnouncementService.prototype.showAnnouncement = function (announcementConfig) {\r\n        var _this = this;\r\n        this.validateAnnouncementConfig(announcementConfig);\r\n        var announcement = clone(announcementConfig);\r\n        announcement.id = stringUtils.encode(announcementConfig);\r\n        announcement.timeout =\r\n            !!announcement.timeout && announcement.timeout > 0\r\n                ? announcement.timeout\r\n                : ANNOUNCEMENT_DEFAULTS.timeout;\r\n        if (announcement.timeout > 0) {\r\n            announcement.timer = setTimeout(function () {\r\n                _this._closeAnnouncement(announcement);\r\n            }, announcement.timeout);\r\n        }\r\n        this.announcements$.next(__spreadArrays(this.announcements$.getValue(), [announcement]));\r\n        return Promise.resolve(announcement.id);\r\n    };\r\n    /* @ngInject */ AnnouncementService.prototype.getAnnouncements = function () {\r\n        return this.announcements$.asObservable();\r\n    };\r\n    /* @ngInject */ AnnouncementService.prototype.closeAnnouncement = function (announcementId) {\r\n        var announcement = this.announcements$\r\n            .getValue()\r\n            .find(function (announcementObj) { return announcementObj.id === announcementId; });\r\n        if (announcement) {\r\n            this._closeAnnouncement(announcement);\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n    /* @ngInject */ AnnouncementService.prototype._closeAnnouncement = function (announcement) {\r\n        if (announcement.timer) {\r\n            clearTimeout(announcement.timer);\r\n        }\r\n        var announcements = this.announcements$.getValue();\r\n        var newAnnouncements = announcements.filter(function (announcementObj) { return announcementObj.id !== announcement.id; });\r\n        this.announcements$.next(newAnnouncements);\r\n    };\r\n    /**\r\n     * Validates a given announcement data.\r\n     * An announcement must contain only one of either message, template, or templateUrl property.\r\n     */\r\n    /* @ngInject */ AnnouncementService.prototype.validateAnnouncementConfig = function (announcementConfig) {\r\n        var message = announcementConfig.message, template = announcementConfig.template, templateUrl = announcementConfig.templateUrl, component = announcementConfig.component;\r\n        if (!message && !template && !templateUrl && !component) {\r\n            this.logService.warn('AnnouncementService._validateAnnouncementConfig - announcement must contain at least a message, template, templateUrl or component property', announcementConfig);\r\n        }\r\n        if ((message && (template || templateUrl || component)) ||\r\n            (template && (message || templateUrl || component)) ||\r\n            (templateUrl && (message || template || component)) ||\r\n            (component && (message || template || templateUrl))) {\r\n            throw new Error('AnnouncementService._validateAnnouncementConfig - only one template type is allowed for an announcement: message, template, templateUrl or component');\r\n        }\r\n    };\r\n    /* @ngInject */ AnnouncementService = __decorate([\r\n        SeDowngradeService(IAnnouncementService),\r\n        GatewayProxied('showAnnouncement', 'closeAnnouncement'),\r\n        Injectable(),\r\n        __metadata(\"design:paramtypes\", [LogService])\r\n    ], /* @ngInject */ AnnouncementService);\r\n    return /* @ngInject */ AnnouncementService;\r\n}(IAnnouncementService));\r\nexport { /* @ngInject */ AnnouncementService };\r\n//# sourceMappingURL=AnnouncementServiceOuter.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types/lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/rxjs@6.5.4/node_modules/rxjs/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"AnnouncementServiceOuter.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/announcement/AnnouncementServiceOuter.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/services/announcement/AnnouncementServiceOuter.d.ts","writeByteOrderMark":false,"text":"import { Observable } from 'rxjs';\r\nimport { IAnnouncementConfig, IAnnouncementService, LogService } from 'smarteditcommons';\r\nexport interface IAnnouncement extends IAnnouncementConfig {\r\n    timer?: number;\r\n    id: string;\r\n}\r\nexport declare const ANNOUNCEMENT_DEFAULTS: {\r\n    timeout: number;\r\n    closeable: boolean;\r\n};\r\nexport declare class AnnouncementService extends IAnnouncementService {\r\n    private logService;\r\n    private announcements$;\r\n    constructor(logService: LogService);\r\n    showAnnouncement(announcementConfig: IAnnouncementConfig): Promise<string>;\r\n    getAnnouncements(): Observable<IAnnouncement[]>;\r\n    closeAnnouncement(announcementId: string): Promise<void>;\r\n    private _closeAnnouncement;\r\n    /**\r\n     * Validates a given announcement data.\r\n     * An announcement must contain only one of either message, template, or templateUrl property.\r\n     */\r\n    private validateAnnouncementConfig;\r\n}\r\n"}}

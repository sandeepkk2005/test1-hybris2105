{"code":"import { __awaiter, __decorate, __generator, __metadata } from \"tslib\";\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core';\r\nimport { IPageService, DEFAULT_SYNCHRONIZATION_POLLING as SYNCHRONIZATION_POLLING } from 'cmscommons';\r\nimport { CrossFrameEventService, EVENTS, SeDowngradeComponent, SystemEventService } from 'smarteditcommons';\r\nimport { WORKFLOW_REFRESH_EVENT } from '../../constants';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"PageDisplayStatusComponent\", {\r\n    selector: 'se-page-display-status',\r\n    template: \"<ng-container *ngIf=\\\"showLastSyncTime; else pageStatus\\\"><se-tooltip [triggers]=\\\"['click']\\\" [placement]=\\\"'left'\\\" [isChevronVisible]=\\\"true\\\"><ng-container se-tooltip-trigger *ngTemplateOutlet=\\\"pageStatus\\\"></ng-container><div se-tooltip-body class=\\\"popover-tooltip\\\"><ng-container *ngIf=\\\"hasBeenSynchedBefore(); else notPublished\\\"><span [translate]=\\\"'se.cms.page.displaystatus.lastpublished.date'\\\"></span> <span>&ngsp;{{ lastSynchedDate | date: 'M/d/yy h:mm a' }}</span></ng-container><ng-template #notPublished><span [translate]=\\\"'se.cms.page.displaystatus.not.published'\\\"></span></ng-template></div></se-tooltip></ng-container><ng-template #pageStatus><se-page-status [uuid]=\\\"page?.uuid\\\" [displayStatus]=\\\"page?.displayStatus\\\"></se-page-status></ng-template>\",\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n});\r\nvar /* @ngInject */ PageDisplayStatusComponent = /** @class */ (function () {\r\n    function /* @ngInject */ PageDisplayStatusComponent(pageService, crossFrameEventService, systemEventService, cdr) {\r\n        this.pageService = pageService;\r\n        this.crossFrameEventService = crossFrameEventService;\r\n        this.systemEventService = systemEventService;\r\n        this.cdr = cdr;\r\n        this.showLastSyncTime = true;\r\n    }\r\n    /* @ngInject */ PageDisplayStatusComponent.prototype.ngOnInit = function () {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var pageUuid;\r\n            var _this = this;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        this.unRegPageSyncEvent = this.crossFrameEventService.subscribe(SYNCHRONIZATION_POLLING.FAST_FETCH, function (_eventId, eventData) { return _this.updateLastSynchedDate(eventData); });\r\n                        this.unRegPageUpdatedEvent = this.crossFrameEventService.subscribe(EVENTS.PAGE_UPDATED, function (_eventId, eventData) {\r\n                            return _this.updatePageInfo((eventData === null || eventData === void 0 ? void 0 : eventData.uuid) || null);\r\n                        });\r\n                        pageUuid = ((_a = this.cmsPage) === null || _a === void 0 ? void 0 : _a.uuid) || null;\r\n                        return [4 /*yield*/, this.initPageInfo(pageUuid)];\r\n                    case 1:\r\n                        _b.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ PageDisplayStatusComponent.prototype.ngOnDestroy = function () {\r\n        this.unRegPageSyncEvent();\r\n        this.unRegPageUpdatedEvent();\r\n    };\r\n    /* @ngInject */ PageDisplayStatusComponent.prototype.hasBeenSynchedBefore = function () {\r\n        return this.lastSynchedDate !== undefined;\r\n    };\r\n    /* @ngInject */ PageDisplayStatusComponent.prototype.initPageInfo = function (pageUuid) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this;\r\n                        return [4 /*yield*/, (pageUuid ? this.cmsPage : this.pageService.getCurrentPageInfo())];\r\n                    case 1:\r\n                        _a.page = _b.sent();\r\n                        this.cdr.detectChanges();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ PageDisplayStatusComponent.prototype.updateLastSynchedDate = function (syncStatus) {\r\n        if (this.canUpdateLastSynchedDate(syncStatus.itemId)) {\r\n            this.lastSynchedDate = syncStatus.lastSyncStatus;\r\n            this.cdr.detectChanges();\r\n        }\r\n    };\r\n    /* @ngInject */ PageDisplayStatusComponent.prototype.updatePageInfo = function (updatedPageUuid) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var displayStatusPrevious, _b;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        if (!this.canUpdatePageInfo(updatedPageUuid)) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        displayStatusPrevious = (_a = this.page) === null || _a === void 0 ? void 0 : _a.displayStatus;\r\n                        _b = this;\r\n                        return [4 /*yield*/, this.pageService.getCurrentPageInfo()];\r\n                    case 1:\r\n                        _b.page = _c.sent();\r\n                        if (!!displayStatusPrevious && this.page.displayStatus === 'DRAFT') {\r\n                            this.systemEventService.publish(WORKFLOW_REFRESH_EVENT);\r\n                        }\r\n                        this.cdr.detectChanges();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ PageDisplayStatusComponent.prototype.canUpdateLastSynchedDate = function (syncStatusItemId) {\r\n        return this.page && this.page.uuid === syncStatusItemId;\r\n    };\r\n    /* @ngInject */ PageDisplayStatusComponent.prototype.canUpdatePageInfo = function (cmsPageUuidToUpdate) {\r\n        return !cmsPageUuidToUpdate || (this.page && this.page.uuid === cmsPageUuidToUpdate);\r\n    };\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], /* @ngInject */ PageDisplayStatusComponent.prototype, \"cmsPage\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], /* @ngInject */ PageDisplayStatusComponent.prototype, \"showLastSyncTime\", void 0);\r\n    /* @ngInject */ PageDisplayStatusComponent = __decorate([\r\n        SeDowngradeComponent(),\r\n        Component({\r\n            selector: 'se-page-display-status',\r\n            template: \"<ng-container *ngIf=\\\"showLastSyncTime; else pageStatus\\\"><se-tooltip [triggers]=\\\"['click']\\\" [placement]=\\\"'left'\\\" [isChevronVisible]=\\\"true\\\"><ng-container se-tooltip-trigger *ngTemplateOutlet=\\\"pageStatus\\\"></ng-container><div se-tooltip-body class=\\\"popover-tooltip\\\"><ng-container *ngIf=\\\"hasBeenSynchedBefore(); else notPublished\\\"><span [translate]=\\\"'se.cms.page.displaystatus.lastpublished.date'\\\"></span> <span>&ngsp;{{ lastSynchedDate | date: 'M/d/yy h:mm a' }}</span></ng-container><ng-template #notPublished><span [translate]=\\\"'se.cms.page.displaystatus.not.published'\\\"></span></ng-template></div></se-tooltip></ng-container><ng-template #pageStatus><se-page-status [uuid]=\\\"page?.uuid\\\" [displayStatus]=\\\"page?.displayStatus\\\"></se-page-status></ng-template>\",\r\n            changeDetection: ChangeDetectionStrategy.OnPush\r\n        }),\r\n        __metadata(\"design:paramtypes\", [IPageService,\r\n            CrossFrameEventService,\r\n            SystemEventService,\r\n            ChangeDetectorRef])\r\n    ], /* @ngInject */ PageDisplayStatusComponent);\r\n    return /* @ngInject */ PageDisplayStatusComponent;\r\n}());\r\nexport { /* @ngInject */ PageDisplayStatusComponent };\r\n//# sourceMappingURL=PageDisplayStatusComponent.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/workflow/constants.ts"],"map":"{\"version\":3,\"file\":\"PageDisplayStatusComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/components/workflow/components/pageDisplayStatus/PageDisplayStatusComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/components/workflow/components/pageDisplayStatus/PageDisplayStatusComponent.d.ts","writeByteOrderMark":false,"text":"import { ChangeDetectorRef, OnDestroy, OnInit } from '@angular/core';\r\nimport { ICMSPage, IPageService } from 'cmscommons';\r\nimport { CrossFrameEventService, SystemEventService } from 'smarteditcommons';\r\nexport declare class PageDisplayStatusComponent implements OnInit, OnDestroy {\r\n    private pageService;\r\n    private crossFrameEventService;\r\n    private systemEventService;\r\n    private cdr;\r\n    cmsPage?: ICMSPage;\r\n    showLastSyncTime: boolean;\r\n    page: ICMSPage;\r\n    lastSynchedDate: number;\r\n    private unRegPageSyncEvent;\r\n    private unRegPageUpdatedEvent;\r\n    constructor(pageService: IPageService, crossFrameEventService: CrossFrameEventService, systemEventService: SystemEventService, cdr: ChangeDetectorRef);\r\n    ngOnInit(): Promise<void>;\r\n    ngOnDestroy(): void;\r\n    hasBeenSynchedBefore(): boolean;\r\n    private initPageInfo;\r\n    private updateLastSynchedDate;\r\n    private updatePageInfo;\r\n    private canUpdateLastSynchedDate;\r\n    private canUpdatePageInfo;\r\n}\r\n"}}

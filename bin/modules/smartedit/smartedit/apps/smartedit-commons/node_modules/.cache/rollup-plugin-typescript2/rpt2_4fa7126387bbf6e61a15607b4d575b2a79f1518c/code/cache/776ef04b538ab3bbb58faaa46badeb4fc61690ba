{"code":"import { __decorate, __metadata, __param } from \"tslib\";\r\nimport { forwardRef, Component, EventEmitter, Inject, Input, Output, Type } from '@angular/core';\r\nimport { isEqual } from 'lodash';\r\nimport { SeDowngradeComponent } from '../../di';\r\nimport { TREE_NODE } from '../treeModule';\r\nimport { EditableListNodeItem } from './EditableListNodeItem';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"EditableListDefaultItem\", {\r\n    selector: 'se-editable-list-default-item',\r\n    template: \"\\n        <div>\\n            <span>{{ node.uid }}</span>\\n            <se-dropdown-menu\\n                *ngIf=\\\"parent.editable\\\"\\n                [dropdownItems]=\\\"parent.getDropdownItems()\\\"\\n                [selectedItem]=\\\"node\\\"\\n                class=\\\"pull-right se-tree-node__actions--more-menu\\\"\\n            ></se-dropdown-menu>\\n        </div>\\n    \"\r\n});\r\nvar EditableListDefaultItem = /** @class */ (function () {\r\n    function EditableListDefaultItem(parent, node) {\r\n        this.parent = parent;\r\n        this.node = node;\r\n    }\r\n    EditableListDefaultItem = __decorate([\r\n        Component({\r\n            selector: 'se-editable-list-default-item',\r\n            template: \"\\n        <div>\\n            <span>{{ node.uid }}</span>\\n            <se-dropdown-menu\\n                *ngIf=\\\"parent.editable\\\"\\n                [dropdownItems]=\\\"parent.getDropdownItems()\\\"\\n                [selectedItem]=\\\"node\\\"\\n                class=\\\"pull-right se-tree-node__actions--more-menu\\\"\\n            ></se-dropdown-menu>\\n        </div>\\n    \"\r\n        }),\r\n        __param(0, Inject(forwardRef(function () { return EditableListComponent; }))),\r\n        __param(1, Inject(TREE_NODE)),\r\n        __metadata(\"design:paramtypes\", [EditableListComponent, Object])\r\n    ], EditableListDefaultItem);\r\n    return EditableListDefaultItem;\r\n}());\r\nexport { EditableListDefaultItem };\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"EditableListComponent\", {\r\n    selector: 'se-editable-list',\r\n    template: \"<div [ngClass]=\\\"{ 'y-editable-list-disabled': !editable, 'se-editable-list-disabled': !editable }\\\"><se-tree (onTreeUpdated)=\\\"handleTreeUpdated($event)\\\" [removeDefaultTemplate]=\\\"true\\\" [rootNodeUid]=\\\"rootId\\\" [nodeTemplateUrl]=\\\"itemTemplateUrl\\\" [nodeComponent]=\\\"itemComponent\\\" [nodeActions]=\\\"actions\\\" [dragOptions]=\\\"dragOptions\\\" [showAsList]=\\\"true\\\"></se-tree></div>\"\r\n});\r\nvar /* @ngInject */ EditableListComponent = /** @class */ (function () {\r\n    function /* @ngInject */ EditableListComponent() {\r\n        this.refreshChange = new EventEmitter();\r\n        this.itemsChange = new EventEmitter();\r\n        this.dragOptions = {};\r\n        this.itemsOld = [];\r\n    }\r\n    /* @ngInject */ EditableListComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this._enableDragAndDrop = function () {\r\n            _this.dragOptions.allowDropCallback = function (event) {\r\n                return event.sourceNode.parentUid === _this.rootId;\r\n            };\r\n        };\r\n        this.actions = this.getTreeActions();\r\n        this.refreshChange.emit(function () { return _this.actions.refreshList(); });\r\n        if (!this.itemTemplateUrl && !this.itemComponent) {\r\n            this.itemComponent = EditableListDefaultItem;\r\n        }\r\n        this.rootId = 'root' + this.id;\r\n        if (this.editable === undefined) {\r\n            this.editable = true;\r\n        }\r\n        if (this.editable === true) {\r\n            this._enableDragAndDrop();\r\n        }\r\n    };\r\n    /* @ngInject */ EditableListComponent.prototype.handleTreeUpdated = function (items) {\r\n        if (this.hasItemsChanged(this.itemsOld, items)) {\r\n            this.itemsOld = items;\r\n            this.itemsChange.emit(items);\r\n            this.actions.performUpdate();\r\n        }\r\n    };\r\n    /* @ngInject */ EditableListComponent.prototype.getDropdownItems = function () {\r\n        var _this = this;\r\n        return [\r\n            {\r\n                key: 'se.ydropdownmenu.remove',\r\n                callback: function (handle) {\r\n                    _this.actions.removeItem(handle);\r\n                }\r\n            },\r\n            {\r\n                key: 'se.ydropdownmenu.move.up',\r\n                condition: function (handle) {\r\n                    return _this.actions.isMoveUpAllowed(handle);\r\n                },\r\n                callback: function (handle) {\r\n                    _this.actions.moveUp(handle);\r\n                }\r\n            },\r\n            {\r\n                key: 'se.ydropdownmenu.move.down',\r\n                condition: function (handle) {\r\n                    return _this.actions.isMoveDownAllowed(handle);\r\n                },\r\n                callback: function (handle) {\r\n                    _this.actions.moveDown(handle);\r\n                }\r\n            }\r\n        ];\r\n    };\r\n    /* @ngInject */ EditableListComponent.prototype.hasItemsChanged = function (oldItems, newItems) {\r\n        var oldUids = oldItems.map(function (_a) {\r\n            var uid = _a.uid;\r\n            return uid;\r\n        });\r\n        var newUids = newItems.map(function (_a) {\r\n            var uid = _a.uid;\r\n            return uid;\r\n        });\r\n        return !isEqual(oldUids, newUids);\r\n    };\r\n    /* @ngInject */ EditableListComponent.prototype.getTreeActions = function () {\r\n        var _this = this;\r\n        var items = this.getDropdownItems();\r\n        return {\r\n            fetchData: function (treeService, nodeData) {\r\n                var nodeItems = _this.items.map(function (dto) { return new EditableListNodeItem(dto); });\r\n                nodeItems.forEach(function (item) {\r\n                    if (item.id && !item.uid) {\r\n                        item.uid = item.id;\r\n                    }\r\n                    item.setParent(nodeData);\r\n                });\r\n                nodeData.removeAllNodes().addNodes(nodeItems);\r\n                treeService.update();\r\n                return Promise.resolve(nodeData);\r\n            },\r\n            getDropdownItems: function () { return items; },\r\n            removeItem: function (treeService, nodeData) {\r\n                nodeData.parent.removeNode(nodeData);\r\n                treeService.update();\r\n            },\r\n            moveUp: function (treeService, nodeData) {\r\n                treeService.rearrange(nodeData, treeService.root, nodeData.position - 1);\r\n            },\r\n            moveDown: function (treeService, nodeData) {\r\n                treeService.rearrange(nodeData, treeService.root, nodeData.position + 1);\r\n            },\r\n            isMoveUpAllowed: function (treeService, nodeData) {\r\n                return nodeData.position > 0;\r\n            },\r\n            isMoveDownAllowed: function (treeService, nodeData) {\r\n                return treeService.root.nodes.length !== nodeData.position + 1;\r\n            },\r\n            performUpdate: function (treeService) {\r\n                if (_this.onChange) {\r\n                    _this.onChange();\r\n                }\r\n            },\r\n            refreshList: function (treeService) {\r\n                this.fetchData(treeService.root);\r\n            }\r\n        };\r\n    };\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Function)\r\n    ], /* @ngInject */ EditableListComponent.prototype, \"refresh\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Array)\r\n    ], /* @ngInject */ EditableListComponent.prototype, \"items\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Function)\r\n    ], /* @ngInject */ EditableListComponent.prototype, \"onChange\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], /* @ngInject */ EditableListComponent.prototype, \"itemTemplateUrl\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Type)\r\n    ], /* @ngInject */ EditableListComponent.prototype, \"itemComponent\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], /* @ngInject */ EditableListComponent.prototype, \"editable\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], /* @ngInject */ EditableListComponent.prototype, \"id\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], /* @ngInject */ EditableListComponent.prototype, \"refreshChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], /* @ngInject */ EditableListComponent.prototype, \"itemsChange\", void 0);\r\n    /* @ngInject */ EditableListComponent = __decorate([\r\n        SeDowngradeComponent(),\r\n        Component({\r\n            selector: 'se-editable-list',\r\n            template: \"<div [ngClass]=\\\"{ 'y-editable-list-disabled': !editable, 'se-editable-list-disabled': !editable }\\\"><se-tree (onTreeUpdated)=\\\"handleTreeUpdated($event)\\\" [removeDefaultTemplate]=\\\"true\\\" [rootNodeUid]=\\\"rootId\\\" [nodeTemplateUrl]=\\\"itemTemplateUrl\\\" [nodeComponent]=\\\"itemComponent\\\" [nodeActions]=\\\"actions\\\" [dragOptions]=\\\"dragOptions\\\" [showAsList]=\\\"true\\\"></se-tree></div>\"\r\n        })\r\n    ], /* @ngInject */ EditableListComponent);\r\n    return /* @ngInject */ EditableListComponent;\r\n}());\r\nexport { /* @ngInject */ EditableListComponent };\r\n//# sourceMappingURL=EditableListComponent.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types/lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/di/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/dropdown/dropdownMenu/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/treeModule/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/list/EditableListNodeItem.ts"],"map":"{\"version\":3,\"file\":\"EditableListComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/list/EditableListComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/components/list/EditableListComponent.d.ts","writeByteOrderMark":false,"text":"import { EventEmitter, Type } from '@angular/core';\r\nimport { IDropdownMenuItem } from '../dropdown/dropdownMenu';\r\nimport { ITreeNodeItem, TreeDragAndDropOptions, TreeNodeActions } from '../treeModule';\r\nimport { EditableListNodeItem, EditableListNodeItemDTO } from './EditableListNodeItem';\r\nexport declare class EditableListDefaultItem {\r\n    parent: EditableListComponent;\r\n    node: ITreeNodeItem<EditableListNodeItem>;\r\n    constructor(parent: EditableListComponent, node: ITreeNodeItem<EditableListNodeItem>);\r\n}\r\nexport declare class EditableListComponent {\r\n    refresh: () => void;\r\n    items: EditableListNodeItemDTO[];\r\n    onChange: () => void;\r\n    itemTemplateUrl: string;\r\n    itemComponent: Type<any>;\r\n    editable: boolean;\r\n    id: string;\r\n    refreshChange: EventEmitter<() => void>;\r\n    itemsChange: EventEmitter<ITreeNodeItem<EditableListNodeItem>[]>;\r\n    dragOptions: TreeDragAndDropOptions<EditableListNodeItem>;\r\n    actions: TreeNodeActions<EditableListNodeItem>;\r\n    rootId: string;\r\n    private itemsOld;\r\n    private _enableDragAndDrop;\r\n    ngOnInit(): void;\r\n    handleTreeUpdated(items: ITreeNodeItem<EditableListNodeItem>[]): void;\r\n    getDropdownItems(): IDropdownMenuItem[];\r\n    private hasItemsChanged;\r\n    private getTreeActions;\r\n}\r\n"}}

{"code":"import { commonNgZone } from './common-ng-zone';\r\n/**\r\n * @ngdoc service\r\n * @name @smartutils.services:WindowUtils\r\n *\r\n * @description\r\n * A collection of utility methods for windows.\r\n */\r\nvar WindowUtils = /** @class */ (function () {\r\n    function WindowUtils(ngZone) {\r\n        var _this = this;\r\n        this.ngZone = ngZone;\r\n        /**\r\n         * @ngdoc method\r\n         * @name @smartutils.services:WindowUtils#isIframe\r\n         * @methodOf @smartutils.services:WindowUtils\r\n         * @description\r\n         * <b>isIframe</b> will check if the current document is in an iFrame.\r\n         * @returns {boolean} true if the current document is in an iFrame.\r\n         */\r\n        this.isIframe = function () { return _this.getWindow().top !== _this.getWindow(); };\r\n        this.ngZone = this.ngZone || commonNgZone;\r\n    }\r\n    WindowUtils.prototype.getWindow = function () {\r\n        return window;\r\n    };\r\n    /**\r\n     * @ngdoc method\r\n     * @name @smartutils.services:WindowUtils#runTimeoutOutsideAngular\r\n     * @methodOf @smartutils.services:WindowUtils\r\n     *\r\n     * @description\r\n     * Runs a given timeout outside Angular and attaches its callback to Angular\r\n     * this is usefull in order not to be blocking from an e2e stand point\r\n     *\r\n     * @param {string} callback argument less callback to execute when timeout.\r\n     * @param {number} timeout the delay in milliseconds until timeout\r\n     */\r\n    WindowUtils.prototype.runTimeoutOutsideAngular = function (callback, timeout) {\r\n        var ngZone = this.ngZone;\r\n        if (ngZone !== undefined) {\r\n            return ngZone.runOutsideAngular(function () { return setTimeout(function () { return ngZone.run(callback); }, timeout); });\r\n        }\r\n        else {\r\n            throw new Error('this instance of WindowUtils has not been instantiated through Angular 7 DI');\r\n        }\r\n    };\r\n    /**\r\n     * @ngdoc method\r\n     * @name @smartutils.services:WindowUtils#runIntervalOutsideAngular\r\n     * @methodOf @smartutils.services:WindowUtils\r\n     *\r\n     * @description\r\n     * Runs a given interval outside Angular and attaches its callback to Angular\r\n     * this is usefull in order not to be blocking from an e2e stand point\r\n     *\r\n     * @param {string} callback argument less callback to execute when timeout.\r\n     * @param {number} timeout the delay in milliseconds until timeout\r\n     */\r\n    WindowUtils.prototype.runIntervalOutsideAngular = function (callback, timeout) {\r\n        var ngZone = this.ngZone;\r\n        if (ngZone === undefined) {\r\n            throw new Error('this instance of WindowUtils has not been instantiated through Angular 7 DI');\r\n        }\r\n        return ngZone.runOutsideAngular(function () { return setInterval(function () { return ngZone.run(callback); }, timeout); });\r\n    };\r\n    WindowUtils.SMARTEDIT_IFRAME_ID = 'ySmartEditFrame';\r\n    return WindowUtils;\r\n}());\r\nexport { WindowUtils };\r\nexport var windowUtils = new WindowUtils();\r\n//# sourceMappingURL=window-utils.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/utils/common-ng-zone.ts"],"map":"{\"version\":3,\"file\":\"window-utils.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/utils/window-utils.ts\"],\"names\":[],\"mappings\":\"AAQA,OAAO,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAC;AAShD;;;;;;GAMG;AACH;IAGI,qBAAoB,MAAe;QAAnC,iBAEC;QAFmB,WAAM,GAAN,MAAM,CAAS;QAQnC;;;;;;;WAOG;QACH,aAAQ,GAAG,cAAe,OAAA,KAAI,CAAC,SAAS,EAAE,CAAC,GAAG,KAAK,KAAI,CAAC,SAAS,EAAE,EAAzC,CAAyC,CAAC;QAfhE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,YAAY,CAAC;IAC9C,CAAC;IAED,+BAAS,GAAT;QACI,OAAO,MAAM,CAAC;IAClB,CAAC;IAYD;;;;;;;;;;;OAWG;IACH,8CAAwB,GAAxB,UAAyB,QAAoB,EAAE,OAAgB;QAC3D,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3B,IAAI,MAAM,KAAK,SAAS,EAAE;YACtB,OAAO,MAAM,CAAC,iBAAiB,CAC3B,cAAM,OAAC,UAAU,CAAC,cAAM,OAAA,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,EAApB,CAAoB,EAAE,OAAO,CAAuB,EAAtE,CAAsE,CAC/E,CAAC;SACL;aAAM;YACH,MAAM,IAAI,KAAK,CACX,6EAA6E,CAChF,CAAC;SACL;IACL,CAAC;IAED;;;;;;;;;;;OAWG;IACH,+CAAyB,GAAzB,UAA0B,QAAoB,EAAE,OAAgB;QAC5D,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3B,IAAI,MAAM,KAAK,SAAS,EAAE;YACtB,MAAM,IAAI,KAAK,CACX,6EAA6E,CAChF,CAAC;SACL;QACD,OAAO,MAAM,CAAC,iBAAiB,CAC3B,cAAM,OAAC,WAAW,CAAC,cAAM,OAAA,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,EAApB,CAAoB,EAAE,OAAO,CAAuB,EAAvE,CAAuE,CAChF,CAAC;IACN,CAAC;IAnEM,+BAAmB,GAAG,iBAAiB,CAAC;IAoEnD,kBAAC;CAAA,AArED,IAqEC;SArEY,WAAW;AAuExB,MAAM,CAAC,IAAM,WAAW,GAAG,IAAI,WAAW,EAAE,CAAC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/utils/window-utils.d.ts","writeByteOrderMark":false,"text":"/**\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n * @module smartutils\r\n */\r\nimport { NgZone } from '@angular/core';\r\ndeclare global {\r\n    interface Window {\r\n        Zone: any;\r\n        __karma__: any;\r\n    }\r\n}\r\n/**\r\n * @ngdoc service\r\n * @name @smartutils.services:WindowUtils\r\n *\r\n * @description\r\n * A collection of utility methods for windows.\r\n */\r\nexport declare class WindowUtils {\r\n    private ngZone?;\r\n    static SMARTEDIT_IFRAME_ID: string;\r\n    constructor(ngZone?: NgZone);\r\n    getWindow(): Window;\r\n    /**\r\n     * @ngdoc method\r\n     * @name @smartutils.services:WindowUtils#isIframe\r\n     * @methodOf @smartutils.services:WindowUtils\r\n     * @description\r\n     * <b>isIframe</b> will check if the current document is in an iFrame.\r\n     * @returns {boolean} true if the current document is in an iFrame.\r\n     */\r\n    isIframe: () => boolean;\r\n    /**\r\n     * @ngdoc method\r\n     * @name @smartutils.services:WindowUtils#runTimeoutOutsideAngular\r\n     * @methodOf @smartutils.services:WindowUtils\r\n     *\r\n     * @description\r\n     * Runs a given timeout outside Angular and attaches its callback to Angular\r\n     * this is usefull in order not to be blocking from an e2e stand point\r\n     *\r\n     * @param {string} callback argument less callback to execute when timeout.\r\n     * @param {number} timeout the delay in milliseconds until timeout\r\n     */\r\n    runTimeoutOutsideAngular(callback: () => void, timeout?: number): number;\r\n    /**\r\n     * @ngdoc method\r\n     * @name @smartutils.services:WindowUtils#runIntervalOutsideAngular\r\n     * @methodOf @smartutils.services:WindowUtils\r\n     *\r\n     * @description\r\n     * Runs a given interval outside Angular and attaches its callback to Angular\r\n     * this is usefull in order not to be blocking from an e2e stand point\r\n     *\r\n     * @param {string} callback argument less callback to execute when timeout.\r\n     * @param {number} timeout the delay in milliseconds until timeout\r\n     */\r\n    runIntervalOutsideAngular(callback: () => void, timeout?: number): number;\r\n}\r\nexport declare const windowUtils: WindowUtils;\r\n"}}

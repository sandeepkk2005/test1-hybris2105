{"code":"import { __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { Component, HostListener } from '@angular/core';\r\nimport { CMSITEMS_UPDATE_EVENT, TYPES_RESOURCE_URI } from 'cmscommons';\r\nimport { from as fromPromise } from 'rxjs';\r\nimport { stringUtils, CrossFrameEventService, CONTEXT_SITE_ID, FundamentalModalButtonAction, FundamentalModalButtonStyle, FundamentalModalManagerService, GENERIC_EDITOR_UNRELATED_VALIDATION_MESSAGES_EVENT, IConfirmationModalService, SeDowngradeComponent, SystemEventService } from 'smarteditcommons';\r\nimport { CMS_LINK_TO_RELOAD_STRUCTURE_EVENT_ID } from '../../constants';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"GenericEditorModalComponent\", {\r\n    selector: 'se-generic-editor-modal',\r\n    template: \"\\n        <se-message\\n            class=\\\"se-ge-modal--messages\\\"\\n            *ngIf=\\\"showDisclaimer\\\"\\n            type=\\\"info\\\"\\n            messageId=\\\"VisibilityTab.DisplayComponentOffDisclaimer\\\"\\n        >\\n            <ng-container se-message-description>\\n                {{ 'se.cms.editortabset.visibilitytab.disclaimer' | translate }}\\n            </ng-container>\\n        </se-message>\\n\\n        <ng-container *ngIf=\\\"data && data.messages\\\">\\n            <se-message\\n                class=\\\"se-ge-modal--messages\\\"\\n                *ngFor=\\\"let msg of data.messages; let i = index\\\"\\n                [type]=\\\"msg.type\\\"\\n                messageId=\\\"generic-editor-model-message-{{ i }}\\\"\\n            >\\n                <ng-container se-message-description> {{ msg.message }} </ng-container>\\n            </se-message>\\n        </ng-container>\\n\\n        <se-generic-editor\\n            *ngIf=\\\"isSetupCompleted\\\"\\n            [id]=\\\"genericEditorId\\\"\\n            [smarteditComponentId]=\\\"data.componentUuid\\\"\\n            [smarteditComponentType]=\\\"data.componentType\\\"\\n            [structure]=\\\"structure\\\"\\n            [structureApi]=\\\"structureApi\\\"\\n            [content]=\\\"data.content\\\"\\n            [contentApi]=\\\"contentApi\\\"\\n            [(submit)]=\\\"controls.submit\\\"\\n            [(reset)]=\\\"controls.reset\\\"\\n            [(isDirty)]=\\\"controls.isDirty\\\"\\n            [editorStackId]=\\\"editorStackId\\\"\\n            (getApi)=\\\"getApi($event)\\\"\\n        >\\n        </se-generic-editor>\\n    \"\r\n});\r\nvar /* @ngInject */ GenericEditorModalComponent = /** @class */ (function () {\r\n    function /* @ngInject */ GenericEditorModalComponent(modalManager, confirmationModalService, crossFrameEventService, systemEventService) {\r\n        this.modalManager = modalManager;\r\n        this.confirmationModalService = confirmationModalService;\r\n        this.crossFrameEventService = crossFrameEventService;\r\n        this.systemEventService = systemEventService;\r\n        this.data = {};\r\n        this.controls = {};\r\n        this.genericEditorId = stringUtils.generateIdentifier();\r\n        this.showDisclaimer = false;\r\n        this.STRUCTURE_API_BASE_URL = TYPES_RESOURCE_URI + \"?code=:smarteditComponentType&mode=:structureApiMode\";\r\n        this.isSetupCompleted = false;\r\n        this.isReset = false;\r\n        this.isEscapeInProgress = false;\r\n    }\r\n    /* @ngInject */ GenericEditorModalComponent.prototype.onEscapeDown = function () {\r\n        if (this.isEscapeInProgress) {\r\n            return;\r\n        }\r\n        this.onEscapeClicked();\r\n    };\r\n    /* @ngInject */ GenericEditorModalComponent.prototype.getApi = function (genericEditorAPI) {\r\n        this.controls.genericEditorAPI = genericEditorAPI;\r\n        if (this.data.targetedQualifier) {\r\n            genericEditorAPI.switchToTabContainingQualifier(this.data.targetedQualifier);\r\n        }\r\n        if (this.data.initialDirty) {\r\n            genericEditorAPI.considerFormDirty();\r\n        }\r\n    };\r\n    /* @ngInject */ GenericEditorModalComponent.prototype.onSave = function () {\r\n        var _this = this;\r\n        return this.controls.submit().then(function (item) {\r\n            _this.crossFrameEventService.publish(CMSITEMS_UPDATE_EVENT);\r\n            if (_this.saveCallback) {\r\n                _this.saveCallback(item);\r\n            }\r\n            _this.removeEventListeners();\r\n            return item;\r\n        });\r\n    };\r\n    /* @ngInject */ GenericEditorModalComponent.prototype.onCancel = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.genericEditorIsDirty() && !_this.isReset) {\r\n                _this.confirmationModalService.confirm({\r\n                    description: 'se.editor.cancel.confirm'\r\n                }).then(function () {\r\n                    _this.controls.reset().then(function () {\r\n                        _this.markAsReset();\r\n                        _this.removeEventListeners();\r\n                        resolve();\r\n                    }, function () {\r\n                        reject();\r\n                    });\r\n                    _this.crossFrameEventService.publish('GENERIC_EDITOR_CANCEL', {\r\n                        confirmed: true\r\n                    });\r\n                }, function () {\r\n                    reject();\r\n                    _this.crossFrameEventService.publish('GENERIC_EDITOR_CANCEL', {\r\n                        confirmed: false\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                _this.removeEventListeners();\r\n                resolve();\r\n            }\r\n        });\r\n    };\r\n    /* @ngInject */ GenericEditorModalComponent.prototype.setup = function () {\r\n        var _this = this;\r\n        this.structure = this.data.structure;\r\n        if (!this.structure) {\r\n            this.structureApi = this.getStructureApiByMode('DEFAULT');\r\n            if (this.isGenericEditorInReadOnlyMode()) {\r\n                this.structureApi = this.applyReadOnlyModeToStructureApiUrl(this.structureApi);\r\n            }\r\n        }\r\n        else if (this.isGenericEditorInReadOnlyMode()) {\r\n            this.structure = this.makeStructureReadOnly(this.structure);\r\n        }\r\n        this.changeStructureEventListener = this.systemEventService.subscribe(CMS_LINK_TO_RELOAD_STRUCTURE_EVENT_ID, function (event, data) { return _this.onChangeStructureEvent(event, data); });\r\n        this.unrelatedValidationErrorsEvent = this.systemEventService.subscribe(GENERIC_EDITOR_UNRELATED_VALIDATION_MESSAGES_EVENT, function (event, data) {\r\n            return _this.onUnrelatedErrors(event, data);\r\n        });\r\n        this.contentApi =\r\n            this.data.contentApi || \"/cmswebservices/v1/sites/\" + CONTEXT_SITE_ID + \"/cmsitems\";\r\n        this.modalManager.setDismissCallback(function () { return _this.onCancel(); });\r\n        this.modalManager.addButtons([\r\n            {\r\n                id: 'cancel',\r\n                label: this.data.cancelLabel || 'se.cms.component.confirmation.modal.cancel',\r\n                style: FundamentalModalButtonStyle.Default,\r\n                action: FundamentalModalButtonAction.Dismiss,\r\n                callback: function () { return fromPromise(_this.onCancel()); }\r\n            },\r\n            {\r\n                id: 'save',\r\n                label: this.data.saveLabel || 'se.cms.component.confirmation.modal.save',\r\n                style: FundamentalModalButtonStyle.Primary,\r\n                action: FundamentalModalButtonAction.Close,\r\n                callback: function () {\r\n                    return fromPromise(_this.onSave());\r\n                },\r\n                disabledFn: function () {\r\n                    return (_this.controls.genericEditorAPI &&\r\n                        _this.controls.genericEditorAPI.isSubmitDisabled()) ||\r\n                        _this.isGenericEditorInReadOnlyMode();\r\n                }\r\n            }\r\n        ]);\r\n        this.isSetupCompleted = true;\r\n    };\r\n    /**\r\n     * Method makes each attribute of the structure non editable.\r\n     */\r\n    /* @ngInject */ GenericEditorModalComponent.prototype.makeStructureReadOnly = function (structure) {\r\n        structure.attributes = structure.attributes || [];\r\n        structure.attributes.forEach(function (element) {\r\n            element.editable = false;\r\n        });\r\n        return structure;\r\n    };\r\n    /**\r\n     * Method verifies whether the generic editor is in read only mode or not.\r\n     * Returns TRUE if the generic editor is in read only mode, FALSE otherwise.\r\n     */\r\n    /* @ngInject */ GenericEditorModalComponent.prototype.isGenericEditorInReadOnlyMode = function () {\r\n        return !!this.data.readOnlyMode;\r\n    };\r\n    /**\r\n     * Method returns generic editor content object.\r\n     */\r\n    /* @ngInject */ GenericEditorModalComponent.prototype.getGenericEditorContent = function () {\r\n        return this.controls.genericEditorAPI && this.controls.genericEditorAPI.getContent();\r\n    };\r\n    /**\r\n     * Method verifies whether the generic editor is in dirty state or not.\r\n     * Returns TRUE if the generic editor is in dirty state, FALSE otherwise.\r\n     */\r\n    /* @ngInject */ GenericEditorModalComponent.prototype.genericEditorIsDirty = function () {\r\n        return this.controls.isDirty && this.controls.isDirty();\r\n    };\r\n    /* @ngInject */ GenericEditorModalComponent.prototype.onChangeStructureEvent = function (eventId, payload) {\r\n        // Structure is reloaded only for the Generic Editor that owns the component where this event came from.\r\n        // This is done to avoid contaminating editors in a nested set-up.\r\n        if (this.genericEditorId === payload.editorId) {\r\n            if (payload.structureApiMode) {\r\n                this.structure = null;\r\n                this.structureApi = this.getStructureApiByMode(payload.structureApiMode);\r\n            }\r\n            else if (payload.structure) {\r\n                this.structureApi = null;\r\n                this.structure = payload.structure;\r\n            }\r\n            this.data.content = payload.content;\r\n        }\r\n    };\r\n    /* @ngInject */ GenericEditorModalComponent.prototype.onUnrelatedErrors = function (eventId, eventData) {\r\n        if (eventData.sourceGenericEditorId === this.data.componentUuid && this.errorCallback) {\r\n            this.errorCallback(eventData.messages, this);\r\n        }\r\n    };\r\n    /**\r\n     * Converts the structure api url to read only mode. All fields return in read only mode will not be editable.\r\n     */\r\n    /* @ngInject */ GenericEditorModalComponent.prototype.applyReadOnlyModeToStructureApiUrl = function (structureApiUrl) {\r\n        return structureApiUrl + \"&readOnly=true\";\r\n    };\r\n    /* @ngInject */ GenericEditorModalComponent.prototype.getStructureApiByMode = function (structureApiMode) {\r\n        return this.STRUCTURE_API_BASE_URL.replace(/:structureApiMode/gi, structureApiMode);\r\n    };\r\n    /* @ngInject */ GenericEditorModalComponent.prototype.removeEventListeners = function () {\r\n        this.unrelatedValidationErrorsEvent();\r\n        this.changeStructureEventListener();\r\n    };\r\n    /* @ngInject */ GenericEditorModalComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.modalManager.getModalData().subscribe(function (config) {\r\n            _this.data = config.data;\r\n            _this.saveCallback = config.saveCallback;\r\n            _this.errorCallback = config.errorCallback;\r\n            _this.editorStackId = config.data.editorStackId;\r\n            if (!_this.isSetupCompleted) {\r\n                _this.setup();\r\n            }\r\n        });\r\n    };\r\n    /* @ngInject */ GenericEditorModalComponent.prototype.markAsReset = function () {\r\n        this.isReset = true;\r\n    };\r\n    /* @ngInject */ GenericEditorModalComponent.prototype.onEscapeClicked = function () {\r\n        var _this = this;\r\n        this.isEscapeInProgress = true;\r\n        this.onCancel()\r\n            .then(function () { return _this.modalManager.dismiss(); })\r\n            .finally(function () {\r\n            _this.isEscapeInProgress = false;\r\n        });\r\n    };\r\n    __decorate([\r\n        HostListener('document:keyup.escape'),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", []),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], /* @ngInject */ GenericEditorModalComponent.prototype, \"onEscapeDown\", null);\r\n    /* @ngInject */ GenericEditorModalComponent = __decorate([\r\n        SeDowngradeComponent(),\r\n        Component({\r\n            selector: 'se-generic-editor-modal',\r\n            template: \"\\n        <se-message\\n            class=\\\"se-ge-modal--messages\\\"\\n            *ngIf=\\\"showDisclaimer\\\"\\n            type=\\\"info\\\"\\n            messageId=\\\"VisibilityTab.DisplayComponentOffDisclaimer\\\"\\n        >\\n            <ng-container se-message-description>\\n                {{ 'se.cms.editortabset.visibilitytab.disclaimer' | translate }}\\n            </ng-container>\\n        </se-message>\\n\\n        <ng-container *ngIf=\\\"data && data.messages\\\">\\n            <se-message\\n                class=\\\"se-ge-modal--messages\\\"\\n                *ngFor=\\\"let msg of data.messages; let i = index\\\"\\n                [type]=\\\"msg.type\\\"\\n                messageId=\\\"generic-editor-model-message-{{ i }}\\\"\\n            >\\n                <ng-container se-message-description> {{ msg.message }} </ng-container>\\n            </se-message>\\n        </ng-container>\\n\\n        <se-generic-editor\\n            *ngIf=\\\"isSetupCompleted\\\"\\n            [id]=\\\"genericEditorId\\\"\\n            [smarteditComponentId]=\\\"data.componentUuid\\\"\\n            [smarteditComponentType]=\\\"data.componentType\\\"\\n            [structure]=\\\"structure\\\"\\n            [structureApi]=\\\"structureApi\\\"\\n            [content]=\\\"data.content\\\"\\n            [contentApi]=\\\"contentApi\\\"\\n            [(submit)]=\\\"controls.submit\\\"\\n            [(reset)]=\\\"controls.reset\\\"\\n            [(isDirty)]=\\\"controls.isDirty\\\"\\n            [editorStackId]=\\\"editorStackId\\\"\\n            (getApi)=\\\"getApi($event)\\\"\\n        >\\n        </se-generic-editor>\\n    \"\r\n        }),\r\n        __metadata(\"design:paramtypes\", [FundamentalModalManagerService,\r\n            IConfirmationModalService,\r\n            CrossFrameEventService,\r\n            SystemEventService])\r\n    ], /* @ngInject */ GenericEditorModalComponent);\r\n    return /* @ngInject */ GenericEditorModalComponent;\r\n}());\r\nexport { /* @ngInject */ GenericEditorModalComponent };\r\n//# sourceMappingURL=GenericEditorModalComponent.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/rxjs@6.5.4/node_modules/rxjs/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/constants.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/services/GenericEditorModalService.ts"],"map":"{\"version\":3,\"file\":\"GenericEditorModalComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/components/GenericEditorModalComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/services/components/GenericEditorModalComponent.d.ts","writeByteOrderMark":false,"text":"import { IGenericEditorModalServiceComponent } from 'cmscommons';\r\nimport { CrossFrameEventService, FundamentalModalManagerService, GenericEditorAPI, GenericEditorOnSubmitResponse, GenericEditorStructure, IConfirmationModalService, Payload, SystemEventService } from 'smarteditcommons';\r\nexport interface GenericEditorModalComponentControls {\r\n    isDirty: () => boolean;\r\n    reset: () => Promise<void>;\r\n    submit: () => Promise<GenericEditorOnSubmitResponse>;\r\n    genericEditorAPI: GenericEditorAPI;\r\n}\r\nexport interface GenericEditorUnrelatedErrorMessage {\r\n    message: string;\r\n    subject: string;\r\n}\r\nexport interface GenericEditorUnrelatedErrorEvent {\r\n    sourceGenericEditorId: string;\r\n    messages: GenericEditorUnrelatedErrorMessage[];\r\n}\r\nexport interface StructureChangeEvent {\r\n    content: Payload;\r\n    structureApiMode: string;\r\n    structure: GenericEditorStructure;\r\n    editorId: string;\r\n}\r\nexport declare class GenericEditorModalComponent {\r\n    private modalManager;\r\n    private confirmationModalService;\r\n    private crossFrameEventService;\r\n    private systemEventService;\r\n    data: IGenericEditorModalServiceComponent;\r\n    controls: GenericEditorModalComponentControls;\r\n    editorStackId: string;\r\n    genericEditorId: string;\r\n    structure: GenericEditorStructure;\r\n    structureApi: string;\r\n    contentApi: string;\r\n    showDisclaimer: boolean;\r\n    private readonly STRUCTURE_API_BASE_URL;\r\n    private saveCallback;\r\n    private errorCallback;\r\n    private changeStructureEventListener;\r\n    private unrelatedValidationErrorsEvent;\r\n    private isSetupCompleted;\r\n    private isReset;\r\n    private isEscapeInProgress;\r\n    constructor(modalManager: FundamentalModalManagerService, confirmationModalService: IConfirmationModalService, crossFrameEventService: CrossFrameEventService, systemEventService: SystemEventService);\r\n    onEscapeDown(): void;\r\n    getApi(genericEditorAPI: GenericEditorAPI): void;\r\n    onSave(): Promise<GenericEditorOnSubmitResponse>;\r\n    onCancel(): Promise<void>;\r\n    setup(): void;\r\n    /**\r\n     * Method makes each attribute of the structure non editable.\r\n     */\r\n    makeStructureReadOnly(structure: GenericEditorStructure): GenericEditorStructure;\r\n    /**\r\n     * Method verifies whether the generic editor is in read only mode or not.\r\n     * Returns TRUE if the generic editor is in read only mode, FALSE otherwise.\r\n     */\r\n    isGenericEditorInReadOnlyMode(): boolean;\r\n    /**\r\n     * Method returns generic editor content object.\r\n     */\r\n    getGenericEditorContent(): Payload;\r\n    /**\r\n     * Method verifies whether the generic editor is in dirty state or not.\r\n     * Returns TRUE if the generic editor is in dirty state, FALSE otherwise.\r\n     */\r\n    genericEditorIsDirty(): boolean;\r\n    onChangeStructureEvent(eventId: string, payload: StructureChangeEvent): void;\r\n    onUnrelatedErrors(eventId: string, eventData: GenericEditorUnrelatedErrorEvent): void;\r\n    /**\r\n     * Converts the structure api url to read only mode. All fields return in read only mode will not be editable.\r\n     */\r\n    applyReadOnlyModeToStructureApiUrl(structureApiUrl: string): string;\r\n    getStructureApiByMode(structureApiMode: string): string;\r\n    removeEventListeners(): void;\r\n    ngOnInit(): void;\r\n    private markAsReset;\r\n    private onEscapeClicked;\r\n}\r\n"}}

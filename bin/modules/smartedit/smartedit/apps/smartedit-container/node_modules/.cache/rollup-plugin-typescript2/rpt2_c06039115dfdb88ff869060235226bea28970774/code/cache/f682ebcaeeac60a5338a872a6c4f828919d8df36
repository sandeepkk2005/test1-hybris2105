{"code":"import { __assign, __decorate, __extends, __metadata, __param } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { Inject, Injectable, SecurityContext } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { AlertConfig, AlertService as FundamentalAlertService } from '@fundamental-ngx/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport * as lodash from 'lodash';\r\nimport { ALERT_CONFIG_DEFAULTS_TOKEN, ALERT_SERVICE_TOKEN, BaseAlertFactory, IAlertServiceType, LogService, SeDowngradeService } from 'smarteditcommons';\r\nimport { AlertTemplateComponent } from './AlertTemplateComponent';\r\nvar /* @ngInject */ AlertFactory = /** @class */ (function (_super) {\r\n    __extends(/* @ngInject */ AlertFactory, _super);\r\n    function /* @ngInject */ AlertFactory(logService, domSanitizer, fundamentalAlertService, translateService, ALERT_CONFIG_DEFAULTS) {\r\n        var _this = _super.call(this, fundamentalAlertService, translateService, ALERT_CONFIG_DEFAULTS) || this;\r\n        _this.logService = logService;\r\n        _this.domSanitizer = domSanitizer;\r\n        return _this;\r\n    }\r\n    /* @ngInject */ AlertFactory.prototype.createAlert = function (alertConf) {\r\n        alertConf = this.getAlertConfigFromStringOrConfig(alertConf);\r\n        return _super.prototype.createAlert.call(this, alertConf);\r\n    };\r\n    /* @ngInject */ AlertFactory.prototype.createInfo = function (alertConf) {\r\n        alertConf = this.getAlertConfigFromStringOrConfig(alertConf);\r\n        alertConf.type = IAlertServiceType.INFO;\r\n        return _super.prototype.createInfo.call(this, alertConf);\r\n    };\r\n    /* @ngInject */ AlertFactory.prototype.createDanger = function (alertConf) {\r\n        alertConf = this.getAlertConfigFromStringOrConfig(alertConf);\r\n        alertConf.type = IAlertServiceType.DANGER;\r\n        return _super.prototype.createDanger.call(this, alertConf);\r\n    };\r\n    /* @ngInject */ AlertFactory.prototype.createWarning = function (alertConf) {\r\n        alertConf = this.getAlertConfigFromStringOrConfig(alertConf);\r\n        alertConf.type = IAlertServiceType.WARNING;\r\n        return _super.prototype.createWarning.call(this, alertConf);\r\n    };\r\n    /* @ngInject */ AlertFactory.prototype.createSuccess = function (alertConf) {\r\n        alertConf = this.getAlertConfigFromStringOrConfig(alertConf);\r\n        alertConf.type = IAlertServiceType.SUCCESS;\r\n        return _super.prototype.createSuccess.call(this, alertConf);\r\n    };\r\n    /**\r\n     * Accepts message string or config object\r\n     * Will convert a str param to { message: str }\r\n     */\r\n    /* @ngInject */ AlertFactory.prototype.getAlertConfigFromStringOrConfig = function (strOrConf) {\r\n        if (typeof strOrConf === 'string') {\r\n            return {\r\n                message: strOrConf\r\n            };\r\n        }\r\n        var config = strOrConf;\r\n        if (this.isFundamentalAlertConfig(config)) {\r\n            return __assign({}, config);\r\n        }\r\n        return this.validateAndGetAlertConfigFromLegacyConfig(config);\r\n    };\r\n    /* @ngInject */ AlertFactory.prototype.isFundamentalAlertConfig = function (config) {\r\n        var legacyConfig = {\r\n            template: undefined,\r\n            templateUrl: undefined,\r\n            closeable: undefined,\r\n            timeout: undefined,\r\n            successful: undefined\r\n        };\r\n        var hasInvalidKey = Object.keys(config).some(function (key) {\r\n            return legacyConfig.hasOwnProperty(key);\r\n        });\r\n        return !hasInvalidKey;\r\n    };\r\n    /* @ngInject */ AlertFactory.prototype.validateAndGetAlertConfigFromLegacyConfig = function (alertConf) {\r\n        this.validateLegacyAlertConfig(alertConf);\r\n        this.sanitizeTemplates(alertConf);\r\n        return this.getAlertConfigFromLegacyConfig(alertConf);\r\n    };\r\n    /* @ngInject */ AlertFactory.prototype.getAlertConfigFromLegacyConfig = function (alertConf) {\r\n        var config = {\r\n            message: alertConf.message,\r\n            messagePlaceholders: alertConf.messagePlaceholders,\r\n            dismissible: alertConf.closeable,\r\n            type: alertConf.type,\r\n            id: alertConf.id,\r\n            duration: alertConf.timeout\r\n        };\r\n        if (alertConf.template || alertConf.templateUrl) {\r\n            config.component = AlertTemplateComponent;\r\n            config.data = {\r\n                template: alertConf.template,\r\n                templateUrl: alertConf.templateUrl\r\n            };\r\n            if (alertConf.controller) {\r\n                config.data.controller = {\r\n                    alias: '$alertInjectedCtrl',\r\n                    value: alertConf.controller\r\n                };\r\n            }\r\n        }\r\n        return config;\r\n    };\r\n    /* @ngInject */ AlertFactory.prototype.validateLegacyAlertConfig = function (alertConf) {\r\n        this.fixLegacyAlert(alertConf);\r\n        if (!alertConf.message && !alertConf.template && !alertConf.templateUrl) {\r\n            this.logService.warn('alertService._validateAlertConfig - alert must contain at least a message, template, or templateUrl property', alertConf);\r\n        }\r\n        if (alertConf.messagePlaceholders && !lodash.isObject(alertConf.messagePlaceholders)) {\r\n            throw new Error('alertService._validateAlertConfig - property messagePlaceholders should be an object');\r\n        }\r\n        if ((alertConf.message && (alertConf.template || alertConf.templateUrl)) ||\r\n            (alertConf.template && (alertConf.message || alertConf.templateUrl)) ||\r\n            (alertConf.templateUrl && (alertConf.message || alertConf.template))) {\r\n            throw new Error('alertService._validateAlertConfig - only one template type is allowed for the alert: message, template, or templateUrl');\r\n        }\r\n    };\r\n    /* @ngInject */ AlertFactory.prototype.sanitizeTemplates = function (alertConf) {\r\n        if (alertConf.message) {\r\n            alertConf.message = this.domSanitizer.sanitize(SecurityContext.HTML, alertConf.message);\r\n        }\r\n    };\r\n    /**\r\n     * @deprecated\r\n     * Deprecated since 1905\r\n     */\r\n    /* @ngInject */ AlertFactory.prototype.fixLegacyAlert = function (legacyAlertConf) {\r\n        if (legacyAlertConf.successful) {\r\n            if (legacyAlertConf.type) {\r\n                this.logService.warn('alertService validation warning: alert contains both legacy successful ' +\r\n                    'property and an alert type for alert: ', legacyAlertConf);\r\n            }\r\n            else {\r\n                if (typeof legacyAlertConf.successful !== 'boolean') {\r\n                    this.logService.warn('alertService validation warning: legacyAlertConf.successful not a boolean value for alert: ', legacyAlertConf);\r\n                }\r\n                legacyAlertConf.type = legacyAlertConf.successful\r\n                    ? IAlertServiceType.SUCCESS\r\n                    : IAlertServiceType.DANGER;\r\n            }\r\n            delete legacyAlertConf.successful;\r\n        }\r\n    };\r\n    /* @ngInject */ AlertFactory = __decorate([\r\n        SeDowngradeService(),\r\n        Injectable(),\r\n        __param(2, Inject(ALERT_SERVICE_TOKEN)),\r\n        __param(4, Inject(ALERT_CONFIG_DEFAULTS_TOKEN)),\r\n        __metadata(\"design:paramtypes\", [LogService,\r\n            DomSanitizer,\r\n            FundamentalAlertService,\r\n            TranslateService,\r\n            AlertConfig])\r\n    ], /* @ngInject */ AlertFactory);\r\n    return /* @ngInject */ AlertFactory;\r\n}(BaseAlertFactory));\r\nexport { /* @ngInject */ AlertFactory };\r\n//# sourceMappingURL=AlertFactory.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/platform-browser@8.2.14_ecb0ad61817e3ede6ce462931a5e5041/node_modules/@angular/platform-browser/platform-browser.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@fundamental-ngx/core@0.13.2_9a9a80bb6ff375d99f90188f858ebbd5/node_modules/@fundamental-ngx/core/fundamental-ngx-core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@ngx-translate/core@11.0.1_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@ngx-translate/core/ngx-translate-core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types/lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/src/services/alerts/AlertTemplateComponent.ts"],"map":"{\"version\":3,\"file\":\"AlertFactory.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/alerts/AlertFactory.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/services/alerts/AlertFactory.d.ts","writeByteOrderMark":false,"text":"import { DomSanitizer } from '@angular/platform-browser';\r\nimport { AlertConfig, AlertService as FundamentalAlertService } from '@fundamental-ngx/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Alert, BaseAlertFactory, IAlertConfig, IAlertConfigLegacy, LogService } from 'smarteditcommons';\r\nexport declare class AlertFactory extends BaseAlertFactory {\r\n    private logService;\r\n    private domSanitizer;\r\n    constructor(logService: LogService, domSanitizer: DomSanitizer, fundamentalAlertService: FundamentalAlertService, translateService: TranslateService, ALERT_CONFIG_DEFAULTS: AlertConfig);\r\n    createAlert(alertConf: string | IAlertConfigLegacy | IAlertConfig): Alert;\r\n    createInfo(alertConf: string | IAlertConfigLegacy | IAlertConfig): Alert;\r\n    createDanger(alertConf: string | IAlertConfigLegacy | IAlertConfig): Alert;\r\n    createWarning(alertConf: string | IAlertConfigLegacy | IAlertConfig): Alert;\r\n    createSuccess(alertConf: string | IAlertConfigLegacy | IAlertConfig): Alert;\r\n    /**\r\n     * Accepts message string or config object\r\n     * Will convert a str param to { message: str }\r\n     */\r\n    getAlertConfigFromStringOrConfig(strOrConf: string | IAlertConfigLegacy | IAlertConfig): IAlertConfigLegacy | IAlertConfig;\r\n    private isFundamentalAlertConfig;\r\n    private validateAndGetAlertConfigFromLegacyConfig;\r\n    private getAlertConfigFromLegacyConfig;\r\n    private validateLegacyAlertConfig;\r\n    private sanitizeTemplates;\r\n    /**\r\n     * @deprecated\r\n     * Deprecated since 1905\r\n     */\r\n    private fixLegacyAlert;\r\n}\r\n"}}

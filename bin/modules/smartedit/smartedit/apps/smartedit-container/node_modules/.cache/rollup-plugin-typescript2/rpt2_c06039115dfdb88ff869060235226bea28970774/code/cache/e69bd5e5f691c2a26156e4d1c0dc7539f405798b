{"code":"import { __decorate, __extends, __metadata, __param } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { GatewayProxied, INotificationMouseLeaveDetectionService, SeDowngradeService, WindowUtils } from 'smarteditcommons';\r\n/**\r\n * This service makes it possible to track the mouse position to detect when it leaves the notification panel.\r\n * It is solely meant to be used with the notificationService.\r\n */\r\n/** @internal */\r\nvar /* @ngInject */ NotificationMouseLeaveDetectionService = /** @class */ (function (_super) {\r\n    __extends(/* @ngInject */ NotificationMouseLeaveDetectionService, _super);\r\n    function /* @ngInject */ NotificationMouseLeaveDetectionService(document, windowUtils) {\r\n        var _this = _super.call(this) || this;\r\n        _this.document = document;\r\n        _this.windowUtils = windowUtils;\r\n        _this.notificationPanelBounds = null;\r\n        _this.mouseLeaveCallback = null;\r\n        /*\r\n         * We need to bind the function in order for it to execute within the service's\r\n         * scope and store it to be able to un-register the listener.\r\n         */\r\n        _this._onMouseMove = _this._onMouseMove.bind(_this);\r\n        return _this;\r\n    }\r\n    /* @ngInject */ NotificationMouseLeaveDetectionService.prototype.startDetection = function (outerBounds, innerBounds, callback) {\r\n        this.validateBounds(outerBounds);\r\n        if (!callback) {\r\n            throw new Error('Callback function is required');\r\n        }\r\n        this.notificationPanelBounds = outerBounds;\r\n        this.mouseLeaveCallback = callback;\r\n        this.document.addEventListener('mousemove', this._onMouseMove);\r\n        if (innerBounds) {\r\n            this.validateBounds(innerBounds);\r\n            this._remoteStartDetection(innerBounds);\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n    /* @ngInject */ NotificationMouseLeaveDetectionService.prototype.stopDetection = function () {\r\n        this.document.removeEventListener('mousemove', this._onMouseMove);\r\n        this.notificationPanelBounds = null;\r\n        this.mouseLeaveCallback = null;\r\n        if (this.windowUtils.getGatewayTargetFrame()) {\r\n            this._remoteStopDetection();\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n    /* @ngInject */ NotificationMouseLeaveDetectionService.prototype._callCallback = function () {\r\n        this._getCallback().then(function (callback) {\r\n            if (callback) {\r\n                callback();\r\n            }\r\n        });\r\n        return Promise.resolve();\r\n    };\r\n    /* @ngInject */ NotificationMouseLeaveDetectionService.prototype._getBounds = function () {\r\n        return Promise.resolve(this.notificationPanelBounds);\r\n    };\r\n    /* @ngInject */ NotificationMouseLeaveDetectionService.prototype._getCallback = function () {\r\n        return Promise.resolve(this.mouseLeaveCallback);\r\n    };\r\n    /* @ngInject */ NotificationMouseLeaveDetectionService.prototype.validateBounds = function (bounds) {\r\n        if (!bounds) {\r\n            throw new Error('Bounds are required for mouse leave detection');\r\n        }\r\n        if (!bounds.hasOwnProperty('x')) {\r\n            throw new Error('Bounds must contain the x coordinate');\r\n        }\r\n        if (!bounds.hasOwnProperty('y')) {\r\n            throw new Error('Bounds must contain the y coordinate');\r\n        }\r\n        if (!bounds.hasOwnProperty('width')) {\r\n            throw new Error('Bounds must contain the width dimension');\r\n        }\r\n        if (!bounds.hasOwnProperty('height')) {\r\n            throw new Error('Bounds must contain the height dimension');\r\n        }\r\n    };\r\n    /* @ngInject */ NotificationMouseLeaveDetectionService = __decorate([\r\n        SeDowngradeService(INotificationMouseLeaveDetectionService),\r\n        GatewayProxied('stopDetection', '_remoteStartDetection', '_remoteStopDetection', '_callCallback'),\r\n        Injectable(),\r\n        __param(0, Inject(DOCUMENT)),\r\n        __metadata(\"design:paramtypes\", [Document, WindowUtils])\r\n    ], /* @ngInject */ NotificationMouseLeaveDetectionService);\r\n    return /* @ngInject */ NotificationMouseLeaveDetectionService;\r\n}(INotificationMouseLeaveDetectionService));\r\nexport { /* @ngInject */ NotificationMouseLeaveDetectionService };\r\n//# sourceMappingURL=NotificationMouseLeaveDetectionServiceOuter.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/common@8.2.14_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@angular/common/common.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"NotificationMouseLeaveDetectionServiceOuter.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/notifications/NotificationMouseLeaveDetectionServiceOuter.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/services/notifications/NotificationMouseLeaveDetectionServiceOuter.d.ts","writeByteOrderMark":false,"text":"import { IBound, INotificationMouseLeaveDetectionService, WindowUtils } from 'smarteditcommons';\r\n/**\r\n * This service makes it possible to track the mouse position to detect when it leaves the notification panel.\r\n * It is solely meant to be used with the notificationService.\r\n */\r\n/** @internal */\r\nexport declare class NotificationMouseLeaveDetectionService extends INotificationMouseLeaveDetectionService {\r\n    private document;\r\n    private windowUtils;\r\n    private notificationPanelBounds;\r\n    private mouseLeaveCallback;\r\n    constructor(document: Document, windowUtils: WindowUtils);\r\n    startDetection(outerBounds: IBound, innerBounds: IBound, callback: () => any): Promise<void>;\r\n    stopDetection(): Promise<void>;\r\n    protected _callCallback(): Promise<void>;\r\n    protected _getBounds(): Promise<IBound>;\r\n    protected _getCallback(): Promise<() => void>;\r\n    private validateBounds;\r\n}\r\n"}}

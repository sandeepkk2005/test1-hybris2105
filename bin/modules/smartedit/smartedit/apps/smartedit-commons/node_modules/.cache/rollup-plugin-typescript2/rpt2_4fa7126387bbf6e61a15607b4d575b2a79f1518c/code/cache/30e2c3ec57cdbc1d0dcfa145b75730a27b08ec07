{"code":"import { __decorate } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport * as lodash from 'lodash';\r\nimport { SeComponent } from '../../di';\r\nimport { COLLAPSIBLE_DEFAULT_CONFIGURATION } from '../collapsible';\r\n/* forbiddenNameSpaces angular.module:false */\r\n/**\r\n * This object defines injectable Angular constants that store the default configuration and CSS class names used in the controller to define the rendering and animation of the collapsible container.\r\n */\r\nexport var COLLAPSIBLE_CONTAINER_CONSTANTS = {\r\n    /**\r\n     * A JSON object defining the configuration applied by default to each collapsible container.\r\n     *\r\n     * @param expandedByDefault Specifies if the collapsible container is expanded by default.\r\n     * @param iconAlignment Specifies if the expand-collapse icon is to be displayed to the left or to the right of the container header.\r\n     * @param iconVisible Specifies if the expand-collapse icon is to be rendered.\r\n     */\r\n    DEFAULT_CONFIGURATION: COLLAPSIBLE_DEFAULT_CONFIGURATION,\r\n    /**\r\n     * A classname allowing for the display of a CSS-based icon positioned to the left of the collapsible container's header\r\n     */\r\n    ICON_LEFT: 'icon-left',\r\n    /**\r\n     * A classname allowing for the display of a CSS-based icon positioned to the right of the collapsible container's header\r\n     */\r\n    ICON_RIGHT: 'icon-right'\r\n};\r\n/**\r\n * # Module\r\n *\r\n * **Deprecated since 2005, use {@link CollapsibleContainerModule}.**\r\n *\r\n * This module defines the collapsible container Angular component and its associated constants and controller.\r\n *\r\n * ## Requires\r\n * - ui.bootstrap\r\n * - yLoDashModule\r\n *\r\n * ## Basic Implementation\r\n *\r\n * To define a new collapsible container, you must make some basic modifications to your Angular module and controller, as well\r\n * as to your HTML template. You can also customize the rendering of your collapsible container in your controller.\r\n *\r\n * ### Angular Module\r\n *\r\n * You must add the smarteditCommonsModule as a dependency to your Angular module.\r\n *\r\n *      angular.module('yourApp', ['smarteditCommonsModule']) { ... }\r\n *\r\n * ### HTML template\r\n *\r\n * To include HTML content in the collapsible panel, you must embed it within a `<y-collapsible-container> </y-collapsible-container>` tag.<br />\r\n *\r\n *    <y-collapsible-container>\r\n *       <header>\r\n *           Your title here\r\n *       </header>\r\n *      <content>\r\n *           Your content here\r\n *       </content>\r\n *    </y-collapsible-container>\r\n *\r\n * ### Angular Controller\r\n *\r\n * Within your Angular controller, you can define configurations which will get applied on the collapsible container.\r\n *\r\n *      angular.module('yourApp', ['sliderPanelModule'])\r\n *        .controller('yourController', function() {\r\n *                 ...\r\n *                 this.configuration = { ... };\r\n *                 ...\r\n *      });\r\n *\r\n * The configurations are passed and applied to the collapsible container through the binded variable 'configuration'\r\n *\r\n *      <y-collapsible-container data-configuration=\"$yourCtrl.configuration\">\r\n *        ...\r\n *      </y-collapsible-container>\r\n *\r\n *\r\n * # Component\r\n *\r\n * **Deprecated since 2005, use {@link CollapsibleContainerComponent}.**\r\n *\r\n * The component allows for the dynamic display of any HTML content on a collapsible container.\r\n *\r\n * ### Parameters\r\n *\r\n * `configuration` - See {@link CollapsibleContainerConfig}\r\n *\r\n * `getApi` - Exposes the collapsible container's api object\r\n *\r\n * @deprecated\r\n */\r\nvar /* @ngInject */ YCollapsibleContainerComponent = /** @class */ (function () {\r\n    function /* @ngInject */ YCollapsibleContainerComponent() {\r\n        var _this = this;\r\n        this.isExpanded = true;\r\n        this.api = {\r\n            isExpanded: function () { return _this.isExpanded; }\r\n        };\r\n    }\r\n    /* @ngInject */ YCollapsibleContainerComponent.prototype.$onInit = function () {\r\n        this.configuration = lodash.defaultsDeep(this.configuration, COLLAPSIBLE_CONTAINER_CONSTANTS.DEFAULT_CONFIGURATION);\r\n        this.isExpanded = this.configuration.expandedByDefault\r\n            ? this.configuration.expandedByDefault\r\n            : false;\r\n        if (typeof this.getApi === 'function') {\r\n            this.getApi({\r\n                $api: this.api\r\n            });\r\n        }\r\n    };\r\n    /* @ngInject */ YCollapsibleContainerComponent.prototype.getIconRelatedClassname = function () {\r\n        if (this.configuration.iconVisible) {\r\n            var key = \"ICON_\" + this.configuration.iconAlignment.toUpperCase();\r\n            return COLLAPSIBLE_CONTAINER_CONSTANTS[key];\r\n        }\r\n        return '';\r\n    };\r\n    /* @ngInject */ YCollapsibleContainerComponent = __decorate([\r\n        SeComponent({\r\n            selector: 'y-collapsible-container',\r\n            templateUrl: 'yCollapsibleContainer.html',\r\n            transclude: {\r\n                'collapsible-container-content': 'content',\r\n                'collapsible-container-title': '?header'\r\n            },\r\n            inputs: ['configuration', 'getApi:&']\r\n        })\r\n    ], /* @ngInject */ YCollapsibleContainerComponent);\r\n    return /* @ngInject */ YCollapsibleContainerComponent;\r\n}());\r\nexport { /* @ngInject */ YCollapsibleContainerComponent };\r\n//# sourceMappingURL=yCollapsibleContainer.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types/lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/di/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/collapsible/index.ts"],"map":"{\"version\":3,\"file\":\"yCollapsibleContainer.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/yCollapsibleContainer/yCollapsibleContainer.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,KAAK,MAAM,MAAM,QAAQ,CAAC;AACjC,OAAO,EAAE,WAAW,EAAE,MAAM,UAAU,CAAC;AACvC,OAAO,EAGH,iCAAiC,EACpC,MAAM,gBAAgB,CAAC;AACxB,8CAA8C;AAE9C;;GAEG;AACH,MAAM,CAAC,IAAM,+BAA+B,GAAG;IAC3C;;;;;;OAMG;IACH,qBAAqB,EAAE,iCAAiC;IAExD;;OAEG;IACH,SAAS,EAAE,WAAW;IAEtB;;OAEG;IACH,UAAU,EAAE,YAAY;CAC3B,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkEG;AAUH;IAAA;QAAA,iBAmCC;QAlCU,eAAU,GAAG,IAAI,CAAC;QAIjB,QAAG,GAA4B;YACnC,UAAU,EAAE,cAAM,OAAA,KAAI,CAAC,UAAU,EAAf,CAAe;SACpC,CAAC;IA4BN,CAAC;IA1BU,gEAAO,GAAd;QACI,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,YAAY,CACpC,IAAI,CAAC,aAAa,EAClB,+BAA+B,CAAC,qBAAqB,CACxD,CAAC;QAEF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB;YAClD,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,iBAAiB;YACtC,CAAC,CAAC,KAAK,CAAC;QAEZ,IAAI,OAAO,IAAI,CAAC,MAAM,KAAK,UAAU,EAAE;YACnC,IAAI,CAAC,MAAM,CAAC;gBACR,IAAI,EAAE,IAAI,CAAC,GAAG;aACjB,CAAC,CAAC;SACN;IACL,CAAC;IAEM,gFAAuB,GAA9B;QACI,IAAI,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE;YAChC,IAAM,GAAG,GAAG,UAAQ,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,WAAW,EAAI,CAAC;YAErE,OAAO,+BAA+B,CAAC,GAAiC,CAAC,CAAC;SAC7E;QAED,OAAO,EAAE,CAAC;IACd,CAAC;IAlCL;QATC,WAAW,CAAC;YACT,QAAQ,EAAE,yBAAyB;YACnC,WAAW,EAAE,4BAA4B;YACzC,UAAU,EAAE;gBACR,+BAA+B,EAAE,SAAS;gBAC1C,6BAA6B,EAAE,SAAS;aAC3C;YACD,MAAM,EAAE,CAAC,eAAe,EAAE,UAAU,CAAC;SACxC,CAAC;sDAoCD;IAAD,qDAAC;CAAA,AAnCD,IAmCC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/components/yCollapsibleContainer/yCollapsibleContainer.d.ts","writeByteOrderMark":false,"text":"import { CollapsibleContainerConfig } from '../collapsible';\r\n/**\r\n * This object defines injectable Angular constants that store the default configuration and CSS class names used in the controller to define the rendering and animation of the collapsible container.\r\n */\r\nexport declare const COLLAPSIBLE_CONTAINER_CONSTANTS: {\r\n    /**\r\n     * A JSON object defining the configuration applied by default to each collapsible container.\r\n     *\r\n     * @param expandedByDefault Specifies if the collapsible container is expanded by default.\r\n     * @param iconAlignment Specifies if the expand-collapse icon is to be displayed to the left or to the right of the container header.\r\n     * @param iconVisible Specifies if the expand-collapse icon is to be rendered.\r\n     */\r\n    DEFAULT_CONFIGURATION: CollapsibleContainerConfig;\r\n    /**\r\n     * A classname allowing for the display of a CSS-based icon positioned to the left of the collapsible container's header\r\n     */\r\n    ICON_LEFT: string;\r\n    /**\r\n     * A classname allowing for the display of a CSS-based icon positioned to the right of the collapsible container's header\r\n     */\r\n    ICON_RIGHT: string;\r\n};\r\n/**\r\n * # Module\r\n *\r\n * **Deprecated since 2005, use {@link CollapsibleContainerModule}.**\r\n *\r\n * This module defines the collapsible container Angular component and its associated constants and controller.\r\n *\r\n * ## Requires\r\n * - ui.bootstrap\r\n * - yLoDashModule\r\n *\r\n * ## Basic Implementation\r\n *\r\n * To define a new collapsible container, you must make some basic modifications to your Angular module and controller, as well\r\n * as to your HTML template. You can also customize the rendering of your collapsible container in your controller.\r\n *\r\n * ### Angular Module\r\n *\r\n * You must add the smarteditCommonsModule as a dependency to your Angular module.\r\n *\r\n *      angular.module('yourApp', ['smarteditCommonsModule']) { ... }\r\n *\r\n * ### HTML template\r\n *\r\n * To include HTML content in the collapsible panel, you must embed it within a `<y-collapsible-container> </y-collapsible-container>` tag.<br />\r\n *\r\n *    <y-collapsible-container>\r\n *       <header>\r\n *           Your title here\r\n *       </header>\r\n *      <content>\r\n *           Your content here\r\n *       </content>\r\n *    </y-collapsible-container>\r\n *\r\n * ### Angular Controller\r\n *\r\n * Within your Angular controller, you can define configurations which will get applied on the collapsible container.\r\n *\r\n *      angular.module('yourApp', ['sliderPanelModule'])\r\n *        .controller('yourController', function() {\r\n *                 ...\r\n *                 this.configuration = { ... };\r\n *                 ...\r\n *      });\r\n *\r\n * The configurations are passed and applied to the collapsible container through the binded variable 'configuration'\r\n *\r\n *      <y-collapsible-container data-configuration=\"$yourCtrl.configuration\">\r\n *        ...\r\n *      </y-collapsible-container>\r\n *\r\n *\r\n * # Component\r\n *\r\n * **Deprecated since 2005, use {@link CollapsibleContainerComponent}.**\r\n *\r\n * The component allows for the dynamic display of any HTML content on a collapsible container.\r\n *\r\n * ### Parameters\r\n *\r\n * `configuration` - See {@link CollapsibleContainerConfig}\r\n *\r\n * `getApi` - Exposes the collapsible container's api object\r\n *\r\n * @deprecated\r\n */\r\nexport declare class YCollapsibleContainerComponent {\r\n    isExpanded: boolean;\r\n    private configuration;\r\n    private getApi;\r\n    private api;\r\n    $onInit(): void;\r\n    getIconRelatedClassname(): string;\r\n}\r\n"}}

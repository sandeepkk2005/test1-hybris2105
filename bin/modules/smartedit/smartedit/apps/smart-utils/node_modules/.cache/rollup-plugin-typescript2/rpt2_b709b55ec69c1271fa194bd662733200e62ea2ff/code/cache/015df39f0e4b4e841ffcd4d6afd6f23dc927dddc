{"code":"import { __awaiter, __decorate, __generator, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { FileMimeTypeService } from '../file-mime-type';\r\nimport { FileValidatorFactory } from '../file-validator-factory';\r\nexport var FILE_VALIDATION_CONFIG = {\r\n    /** A list of file types supported by the platform. */\r\n    ACCEPTED_FILE_TYPES: ['jpeg', 'jpg', 'gif', 'bmp', 'tiff', 'tif', 'png'],\r\n    /** The maximum size, in bytes, for an uploaded file. */\r\n    MAX_FILE_SIZE_IN_BYTES: 20 * 1024 * 1024,\r\n    /** A map of all the internationalization keys used by the file validation service. */\r\n    I18N_KEYS: {\r\n        FILE_TYPE_INVALID: 'se.upload.file.type.invalid',\r\n        FILE_SIZE_INVALID: 'se.upload.file.size.invalid'\r\n    }\r\n};\r\n/**\r\n * Validates if a specified file meets the required file type and file size constraints of SAP Hybris Commerce.\r\n */\r\nvar FileValidationService = /** @class */ (function () {\r\n    function FileValidationService(fileMimeTypeService, fileValidatorFactory) {\r\n        this.fileMimeTypeService = fileMimeTypeService;\r\n        this.fileValidatorFactory = fileValidatorFactory;\r\n        this.validators = [\r\n            {\r\n                subject: 'size',\r\n                message: FILE_VALIDATION_CONFIG.I18N_KEYS.FILE_SIZE_INVALID,\r\n                validate: function (size) {\r\n                    return size <= FILE_VALIDATION_CONFIG.MAX_FILE_SIZE_IN_BYTES;\r\n                }\r\n            }\r\n        ];\r\n    }\r\n    /**\r\n     * Transforms the supported file types into a comma separated list of file type extensions.\r\n     *\r\n     * @returns A comma-separated list of supported file type extensions\r\n     */\r\n    FileValidationService.prototype.buildAcceptedFileTypesList = function () {\r\n        return FILE_VALIDATION_CONFIG.ACCEPTED_FILE_TYPES.map(function (fileType) { return \".\" + fileType; }).join(',');\r\n    };\r\n    /**\r\n     * Validates the specified file object against custom validator and its mimetype.\r\n     * It appends the errors to the error context array provided or it creates a new error context array.\r\n     *\r\n     * @param file The web API file object to be validated.\r\n     * @param context The contextual error array to append the errors to. It is an output parameter.\r\n     * @returns A promise that resolves if the file is valid otherwise it rejects with a list of errors.\r\n     */\r\n    FileValidationService.prototype.validate = function (file, errorsContext) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        this.fileValidatorFactory.build(this.validators).validate(file, errorsContext);\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        _b.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.fileMimeTypeService.isFileMimeTypeValid(file)];\r\n                    case 2:\r\n                        _b.sent();\r\n                        if (errorsContext.length > 0) {\r\n                            return [2 /*return*/, Promise.reject(errorsContext)];\r\n                        }\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        _a = _b.sent();\r\n                        errorsContext.push({\r\n                            subject: 'type',\r\n                            message: FILE_VALIDATION_CONFIG.I18N_KEYS.FILE_TYPE_INVALID\r\n                        });\r\n                        return [2 /*return*/, Promise.reject(errorsContext)];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    FileValidationService = __decorate([\r\n        Injectable(),\r\n        __metadata(\"design:paramtypes\", [FileMimeTypeService,\r\n            FileValidatorFactory])\r\n    ], FileValidationService);\r\n    return FileValidationService;\r\n}());\r\nexport { FileValidationService };\r\n//# sourceMappingURL=file-validation.service.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/services/file-mime-type/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/services/file-validator-factory/index.ts"],"map":"{\"version\":3,\"file\":\"file-validation.service.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/file-validation/file-validation.service.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,mBAAmB,EAAE,MAAM,mBAAmB,CAAC;AACxD,OAAO,EACH,oBAAoB,EAGvB,MAAM,2BAA2B,CAAC;AAEnC,MAAM,CAAC,IAAM,sBAAsB,GAAG;IAClC,sDAAsD;IACtD,mBAAmB,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC;IACxE,wDAAwD;IACxD,sBAAsB,EAAE,EAAE,GAAG,IAAI,GAAG,IAAI;IACxC,sFAAsF;IACtF,SAAS,EAAE;QACP,iBAAiB,EAAE,6BAA6B;QAChD,iBAAiB,EAAE,6BAA6B;KACnD;CACJ,CAAC;AAEF;;GAEG;AAEH;IAUI,+BACY,mBAAwC,EACxC,oBAA0C;QAD1C,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,yBAAoB,GAApB,oBAAoB,CAAsB;QAX9C,eAAU,GAA8B;YAC5C;gBACI,OAAO,EAAE,MAAM;gBACf,OAAO,EAAE,sBAAsB,CAAC,SAAS,CAAC,iBAAiB;gBAC3D,QAAQ,EAAE,UAAC,IAAY;oBACnB,OAAA,IAAI,IAAI,sBAAsB,CAAC,sBAAsB;gBAArD,CAAqD;aAC5D;SACJ,CAAC;IAKC,CAAC;IAEJ;;;;OAIG;IACI,0DAA0B,GAAjC;QACI,OAAO,sBAAsB,CAAC,mBAAmB,CAAC,GAAG,CAAC,UAAC,QAAQ,IAAK,OAAA,MAAI,QAAU,EAAd,CAAc,CAAC,CAAC,IAAI,CACpF,GAAG,CACN,CAAC;IACN,CAAC;IAED;;;;;;;OAOG;IACU,wCAAQ,GAArB,UACI,IAAU,EACV,aAA6B;;;;;;wBAE7B,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;;;;wBAE3E,qBAAM,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAA;;wBAAxD,SAAwD,CAAC;wBACzD,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;4BAC1B,sBAAO,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC,EAAC;yBACxC;;;;wBAED,aAAa,CAAC,IAAI,CAAC;4BACf,OAAO,EAAE,MAAM;4BACf,OAAO,EAAE,sBAAsB,CAAC,SAAS,CAAC,iBAAiB;yBAC9D,CAAC,CAAC;wBACH,sBAAO,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC,EAAC;;;;;KAE5C;IAnDQ,qBAAqB;QADjC,UAAU,EAAE;yCAYwB,mBAAmB;YAClB,oBAAoB;OAZ7C,qBAAqB,CAoDjC;IAAD,4BAAC;CAAA,AApDD,IAoDC;SApDY,qBAAqB\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/services/file-validation/file-validation.service.d.ts","writeByteOrderMark":false,"text":"import { FileMimeTypeService } from '../file-mime-type';\r\nimport { FileValidatorFactory, ErrorContext } from '../file-validator-factory';\r\nexport declare const FILE_VALIDATION_CONFIG: {\r\n    /** A list of file types supported by the platform. */\r\n    ACCEPTED_FILE_TYPES: string[];\r\n    /** The maximum size, in bytes, for an uploaded file. */\r\n    MAX_FILE_SIZE_IN_BYTES: number;\r\n    /** A map of all the internationalization keys used by the file validation service. */\r\n    I18N_KEYS: {\r\n        FILE_TYPE_INVALID: string;\r\n        FILE_SIZE_INVALID: string;\r\n    };\r\n};\r\n/**\r\n * Validates if a specified file meets the required file type and file size constraints of SAP Hybris Commerce.\r\n */\r\nexport declare class FileValidationService {\r\n    private fileMimeTypeService;\r\n    private fileValidatorFactory;\r\n    private validators;\r\n    constructor(fileMimeTypeService: FileMimeTypeService, fileValidatorFactory: FileValidatorFactory);\r\n    /**\r\n     * Transforms the supported file types into a comma separated list of file type extensions.\r\n     *\r\n     * @returns A comma-separated list of supported file type extensions\r\n     */\r\n    buildAcceptedFileTypesList(): string;\r\n    /**\r\n     * Validates the specified file object against custom validator and its mimetype.\r\n     * It appends the errors to the error context array provided or it creates a new error context array.\r\n     *\r\n     * @param file The web API file object to be validated.\r\n     * @param context The contextual error array to append the errors to. It is an output parameter.\r\n     * @returns A promise that resolves if the file is valid otherwise it rejects with a list of errors.\r\n     */\r\n    validate(file: File, errorsContext: ErrorContext[]): Promise<ErrorContext[] | void>;\r\n}\r\n"}}

{"code":"var ISettingsService = /** @class */ (function () {\r\n    function ISettingsService() {\r\n    }\r\n    ISettingsService.prototype.load = function () {\r\n        'proxyFunction';\r\n        return Promise.resolve({ key: '' });\r\n    };\r\n    ISettingsService.prototype.get = function (key) {\r\n        'proxyFunction';\r\n        return Promise.resolve('');\r\n    };\r\n    ISettingsService.prototype.getBoolean = function (key) {\r\n        'proxyFunction';\r\n        return Promise.resolve(true);\r\n    };\r\n    ISettingsService.prototype.getStringList = function (key) {\r\n        'proxyFunction';\r\n        return Promise.resolve([]);\r\n    };\r\n    return ISettingsService;\r\n}());\r\nexport { ISettingsService };\r\n//# sourceMappingURL=i-settings-service.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/dtos/index.ts"],"map":"{\"version\":3,\"file\":\"i-settings-service.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/interfaces/i-settings-service.ts\"],\"names\":[],\"mappings\":\"AASA;IAAA;IAoBA,CAAC;IAnBG,+BAAI,GAAJ;QACI,eAAe,CAAC;QAChB,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC;IACxC,CAAC;IAED,8BAAG,GAAH,UAAI,GAAW;QACX,eAAe,CAAC;QAChB,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC/B,CAAC;IAED,qCAAU,GAAV,UAAW,GAAW;QAClB,eAAe,CAAC;QAChB,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAED,wCAAa,GAAb,UAAc,GAAW;QACrB,eAAe,CAAC;QAChB,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC/B,CAAC;IACL,uBAAC;AAAD,CAAC,AApBD,IAoBC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/interfaces/i-settings-service.d.ts","writeByteOrderMark":false,"text":"/**\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n * @module smartutils\r\n */\r\nimport { TypedMap } from '../dtos';\r\nexport declare abstract class ISettingsService {\r\n    load(): Promise<TypedMap<string | boolean>>;\r\n    get(key: string): Promise<string>;\r\n    getBoolean(key: string): Promise<boolean>;\r\n    getStringList(key: string): Promise<string[]>;\r\n}\r\n"}}

{"code":"import { __awaiter, __decorate, __generator, __metadata } from \"tslib\";\r\nimport { ICatalogService, SeDowngradeService } from 'smarteditcommons';\r\nimport { ActionableAlertService } from './ActionableAlertService';\r\nimport { ClonePageAlertComponent } from './ClonePageAlertComponent';\r\nvar /* @ngInject */ ClonePageAlertService = /** @class */ (function () {\r\n    function /* @ngInject */ ClonePageAlertService(actionableAlertService, catalogService) {\r\n        this.actionableAlertService = actionableAlertService;\r\n        this.catalogService = catalogService;\r\n    }\r\n    /**\r\n     * Displays an alert containing an hyperlink allowing for the user\r\n     * to navigate to the newly cloned page.\r\n     */\r\n    /* @ngInject */ ClonePageAlertService.prototype.displayClonePageAlert = function (clonedPageInfo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var catalogVersion;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.catalogService.getCatalogVersionByUuid(clonedPageInfo.catalogVersion)];\r\n                    case 1:\r\n                        catalogVersion = _a.sent();\r\n                        return [2 /*return*/, this.actionableAlertService.displayActionableAlert({\r\n                                component: ClonePageAlertComponent,\r\n                                mousePersist: true,\r\n                                data: {\r\n                                    catalogVersion: catalogVersion,\r\n                                    clonedPageInfo: clonedPageInfo\r\n                                }\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ ClonePageAlertService = __decorate([\r\n        SeDowngradeService(),\r\n        __metadata(\"design:paramtypes\", [ActionableAlertService,\r\n            ICatalogService])\r\n    ], /* @ngInject */ ClonePageAlertService);\r\n    return /* @ngInject */ ClonePageAlertService;\r\n}());\r\nexport { /* @ngInject */ ClonePageAlertService };\r\n//# sourceMappingURL=ClonePageAlertService.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/services/actionableAlert/ActionableAlertService.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/services/actionableAlert/ClonePageAlertComponent.ts"],"map":"{\"version\":3,\"file\":\"ClonePageAlertService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/actionableAlert/ClonePageAlertService.ts\"],\"names\":[],\"mappings\":\";AAIA,OAAO,EAAE,eAAe,EAAE,kBAAkB,EAAE,MAAM,kBAAkB,CAAC;AACvE,OAAO,EAAE,sBAAsB,EAAE,MAAM,0BAA0B,CAAC;AAClE,OAAO,EAAE,uBAAuB,EAAE,MAAM,2BAA2B,CAAC;AAGpE;IACI,+CACY,sBAA8C,EAC9C,cAA+B;QAD/B,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,mBAAc,GAAd,cAAc,CAAiB;IACxC,CAAC;IAEJ;;;OAGG;IACU,qEAAqB,GAAlC,UAAmC,cAAwB;;;;;4BAChC,qBAAM,IAAI,CAAC,cAAc,CAAC,uBAAuB,CACpE,cAAc,CAAC,cAAc,CAChC,EAAA;;wBAFK,cAAc,GAAG,SAEtB;wBACD,sBAAO,IAAI,CAAC,sBAAsB,CAAC,sBAAsB,CAAC;gCACtD,SAAS,EAAE,uBAAuB;gCAClC,YAAY,EAAE,IAAI;gCAClB,IAAI,EAAE;oCACF,cAAc,gBAAA;oCACd,cAAc,gBAAA;iCACjB;6BACJ,CAAC,EAAC;;;;KACN;IAtBL;QADC,kBAAkB,EAAE;yCAGmB,sBAAsB;YAC9B,eAAe;6CAoB9C;IAAD,4CAAC;CAAA,AAvBD,IAuBC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/services/actionableAlert/ClonePageAlertService.d.ts","writeByteOrderMark":false,"text":"import { ICMSPage } from 'cmscommons';\r\nimport { ICatalogService } from 'smarteditcommons';\r\nimport { ActionableAlertService } from './ActionableAlertService';\r\nexport declare class ClonePageAlertService {\r\n    private actionableAlertService;\r\n    private catalogService;\r\n    constructor(actionableAlertService: ActionableAlertService, catalogService: ICatalogService);\r\n    /**\r\n     * Displays an alert containing an hyperlink allowing for the user\r\n     * to navigate to the newly cloned page.\r\n     */\r\n    displayClonePageAlert(clonedPageInfo: ICMSPage): Promise<void>;\r\n}\r\n"}}

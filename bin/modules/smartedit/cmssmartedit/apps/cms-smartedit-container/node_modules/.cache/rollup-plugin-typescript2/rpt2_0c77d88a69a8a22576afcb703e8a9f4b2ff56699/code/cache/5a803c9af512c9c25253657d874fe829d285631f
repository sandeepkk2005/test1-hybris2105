{"code":"import { __awaiter, __decorate, __generator, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { CmsitemsRestService, CONTEXT_SITE_ID } from 'cmscommons';\r\nimport { isEmpty, cloneDeep } from 'lodash';\r\nimport { CrossFrameEventService, EVENTS, ICatalogService, ISharedDataService, IUrlService, SeDowngradeService, EXPERIENCE_STORAGE_KEY } from 'smarteditcommons';\r\nvar /* @ngInject */ PageFacade = /** @class */ (function () {\r\n    function /* @ngInject */ PageFacade(cmsitemsRestService, crossFrameEventService, sharedDataService, urlService, catalogService) {\r\n        this.cmsitemsRestService = cmsitemsRestService;\r\n        this.crossFrameEventService = crossFrameEventService;\r\n        this.sharedDataService = sharedDataService;\r\n        this.urlService = urlService;\r\n        this.catalogService = catalogService;\r\n    }\r\n    /**\r\n     * Determines if a ContentPage with a given label exists in the given catalog and catalog version\r\n     *\r\n     * @param label The label to search for\r\n     * @param catalogId The catalog ID to search in for the ContentPage\r\n     * @param catalogVersion The catalog version to search in for the ContentPage\r\n     * @return Promise resolving to a boolean determining if the ContentPage exists\r\n     */\r\n    /* @ngInject */ PageFacade.prototype.contentPageWithLabelExists = function (label, catalogId, catalogVersion) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var requestParams, result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        requestParams = {\r\n                            pageSize: 10,\r\n                            currentPage: 0,\r\n                            typeCode: 'ContentPage',\r\n                            itemSearchParams: 'label:' + label,\r\n                            catalogId: catalogId,\r\n                            catalogVersion: catalogVersion\r\n                        };\r\n                        return [4 /*yield*/, this.cmsitemsRestService.get(requestParams)];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result && !isEmpty(result.response)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Retrieves the experience and builds a uri context based on its page context\r\n     *\r\n     * @returns the page uriContext\r\n     */\r\n    /* @ngInject */ PageFacade.prototype.retrievePageUriContext = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var experience;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.sharedDataService.get(EXPERIENCE_STORAGE_KEY)];\r\n                    case 1:\r\n                        experience = (_a.sent());\r\n                        if (!experience) {\r\n                            throw new Error('pageFacade - could not retrieve an experience from sharedDataService');\r\n                        }\r\n                        if (!experience.pageContext) {\r\n                            return [2 /*return*/, null];\r\n                        }\r\n                        return [2 /*return*/, this.urlService.buildUriContext(experience.pageContext.siteId, experience.pageContext.catalogId, experience.pageContext.catalogVersion)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param page The object representing the CMS page item to create\r\n     * @returns If request is successful, it returns a promise that resolves with the CMS page item object. If\r\n     * the request fails, it resolves with errors from the backend.\r\n     */\r\n    /* @ngInject */ PageFacade.prototype.createPage = function (page) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, newlyCreatedPage;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!!page.catalogVersion) return [3 /*break*/, 2];\r\n                        _a = page;\r\n                        return [4 /*yield*/, this.catalogService.getCatalogVersionUUid()];\r\n                    case 1:\r\n                        _a.catalogVersion = _b.sent();\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        if (page.onlyOneRestrictionMustApply === undefined) {\r\n                            page.onlyOneRestrictionMustApply = false;\r\n                        }\r\n                        if (page.restrictions === undefined) {\r\n                            page.restrictions = [];\r\n                        }\r\n                        return [4 /*yield*/, this.cmsitemsRestService.create(page)];\r\n                    case 3:\r\n                        newlyCreatedPage = _b.sent();\r\n                        this.crossFrameEventService.publish(EVENTS.PAGE_CREATED, page);\r\n                        return [2 /*return*/, newlyCreatedPage];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new CMS page item for a given site.\r\n     *\r\n     * @param page The object representing the CMS page item to create\r\n     * @param siteUid The uid of the target site.\r\n     * @returns If request is successful, it returns a promise that resolves with the CMS page item object. If\r\n     * the request fails, it resolves with errors from the backend.\r\n     */\r\n    /* @ngInject */ PageFacade.prototype.createPageForSite = function (page, siteUid) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var catalogVersionUUid, newlyCreatedPage;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.catalogService.getCatalogVersionUUid()];\r\n                    case 1:\r\n                        catalogVersionUUid = _a.sent();\r\n                        page.catalogVersion = page.catalogVersion || catalogVersionUUid;\r\n                        if (page.onlyOneRestrictionMustApply === undefined) {\r\n                            page.onlyOneRestrictionMustApply = false;\r\n                        }\r\n                        page = cloneDeep(page);\r\n                        page[CONTEXT_SITE_ID] = siteUid;\r\n                        return [4 /*yield*/, this.cmsitemsRestService.create(page)];\r\n                    case 2:\r\n                        newlyCreatedPage = _a.sent();\r\n                        this.crossFrameEventService.publish(EVENTS.PAGE_CREATED, page);\r\n                        return [2 /*return*/, newlyCreatedPage];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ PageFacade = __decorate([\r\n        SeDowngradeService(),\r\n        __metadata(\"design:paramtypes\", [CmsitemsRestService,\r\n            CrossFrameEventService,\r\n            ISharedDataService,\r\n            IUrlService,\r\n            ICatalogService])\r\n    ], /* @ngInject */ PageFacade);\r\n    return /* @ngInject */ PageFacade;\r\n}());\r\nexport { /* @ngInject */ PageFacade };\r\n//# sourceMappingURL=PageFacade.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types/lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"PageFacade.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/facades/PageFacade.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/facades/PageFacade.d.ts","writeByteOrderMark":false,"text":"import { CmsitemsRestService, ICMSPage } from 'cmscommons';\r\nimport { CrossFrameEventService, ICatalogService, ISharedDataService, IUriContext, IUrlService } from 'smarteditcommons';\r\nexport declare class PageFacade {\r\n    private cmsitemsRestService;\r\n    private crossFrameEventService;\r\n    private sharedDataService;\r\n    private urlService;\r\n    private catalogService;\r\n    constructor(cmsitemsRestService: CmsitemsRestService, crossFrameEventService: CrossFrameEventService, sharedDataService: ISharedDataService, urlService: IUrlService, catalogService: ICatalogService);\r\n    /**\r\n     * Determines if a ContentPage with a given label exists in the given catalog and catalog version\r\n     *\r\n     * @param label The label to search for\r\n     * @param catalogId The catalog ID to search in for the ContentPage\r\n     * @param catalogVersion The catalog version to search in for the ContentPage\r\n     * @return Promise resolving to a boolean determining if the ContentPage exists\r\n     */\r\n    contentPageWithLabelExists(label: string, catalogId: string, catalogVersion: string): Promise<boolean>;\r\n    /**\r\n     * Retrieves the experience and builds a uri context based on its page context\r\n     *\r\n     * @returns the page uriContext\r\n     */\r\n    retrievePageUriContext(): Promise<IUriContext>;\r\n    /**\r\n     * @param page The object representing the CMS page item to create\r\n     * @returns If request is successful, it returns a promise that resolves with the CMS page item object. If\r\n     * the request fails, it resolves with errors from the backend.\r\n     */\r\n    createPage(page: ICMSPage): Promise<ICMSPage>;\r\n    /**\r\n     * Creates a new CMS page item for a given site.\r\n     *\r\n     * @param page The object representing the CMS page item to create\r\n     * @param siteUid The uid of the target site.\r\n     * @returns If request is successful, it returns a promise that resolves with the CMS page item object. If\r\n     * the request fails, it resolves with errors from the backend.\r\n     */\r\n    createPageForSite(page: ICMSPage, siteUid: string): Promise<ICMSPage>;\r\n}\r\n"}}

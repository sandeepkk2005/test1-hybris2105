{"code":"import { __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\n/**\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n * @module smartutils\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport * as lodash from 'lodash';\r\n/**\r\n * @ngdoc service\r\n * @name @smartutils.services:OperationContextService\r\n * @description\r\n * This service provides the functionality to register a url with its associated operation contexts and also finds operation context given an url.\r\n */\r\nvar OperationContextService = /** @class */ (function () {\r\n    function OperationContextService() {\r\n        this.store = [];\r\n    }\r\n    /**\r\n     * @ngdoc method\r\n     * @name @smartutils.services:OperationContextService#register\r\n     * @methodOf @smartutils.services:OperationContextService\r\n     *\r\n     * @description\r\n     * Register a new url with it's associated operationContext.\r\n     *\r\n     * @param {String} url The url that is associated to the operation context.\r\n     * @param {String} operationContext The operation context name that is associated to the given url.\r\n     *\r\n     * @return {Object} operationContextService The operationContextService service\r\n     */\r\n    OperationContextService.prototype.register = function (url, operationContext) {\r\n        if (typeof url !== 'string' || lodash.isEmpty(url)) {\r\n            throw new Error('operationContextService.register error: url is invalid');\r\n        }\r\n        if (typeof operationContext !== 'string' || lodash.isEmpty(operationContext)) {\r\n            throw new Error('operationContextService.register error: operationContext is invalid');\r\n        }\r\n        var regexIndex = this.store.findIndex(function (store) {\r\n            return store.urlRegex.test(url) === true && store.operationContext === operationContext;\r\n        });\r\n        if (regexIndex !== -1) {\r\n            return this;\r\n        }\r\n        var urlRegex = new RegExp(url.replace(/\\/:[^\\/]*/g, '/.*'));\r\n        this.store.push({\r\n            urlRegex: urlRegex,\r\n            operationContext: operationContext\r\n        });\r\n        return this;\r\n    };\r\n    /**\r\n     * @ngdoc method\r\n     * @name @smartutils.services:OperationContextService#findOperationContext\r\n     * @methodOf @smartutils.services:OperationContextService\r\n     *\r\n     * @description\r\n     * Find the first matching operation context for the given url.\r\n     *\r\n     * @param {String} url The request url.\r\n     *\r\n     * @return {String} operationContext\r\n     */\r\n    OperationContextService.prototype.findOperationContext = function (url) {\r\n        var regexIndex = this.store.findIndex(function (store) { return store.urlRegex.test(url) === true; });\r\n        return ~regexIndex ? this.store[regexIndex].operationContext : null;\r\n    };\r\n    OperationContextService = __decorate([\r\n        Injectable(),\r\n        __metadata(\"design:paramtypes\", [])\r\n    ], OperationContextService);\r\n    return OperationContextService;\r\n}());\r\nexport { OperationContextService };\r\n//# sourceMappingURL=operation-context.service.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types/lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts"],"map":"{\"version\":3,\"file\":\"operation-context.service.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/services/interceptors/errors/retries/operation-context.service.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH;;;GAGG;AACH,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,KAAK,MAAM,MAAM,QAAQ,CAAC;AAQjC;;;;;GAKG;AAEH;IAEI;QACI,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IACpB,CAAC;IACD;;;;;;;;;;;;OAYG;IACH,0CAAQ,GAAR,UAAS,GAAW,EAAE,gBAAwB;QAC1C,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YAChD,MAAM,IAAI,KAAK,CAAC,wDAAwD,CAAC,CAAC;SAC7E;QACD,IAAI,OAAO,gBAAgB,KAAK,QAAQ,IAAI,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,EAAE;YAC1E,MAAM,IAAI,KAAK,CAAC,qEAAqE,CAAC,CAAC;SAC1F;QACD,IAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CACnC,UAAC,KAAK;YACF,OAAA,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,KAAK,CAAC,gBAAgB,KAAK,gBAAgB;QAAhF,CAAgF,CACvF,CAAC;QAEF,IAAI,UAAU,KAAK,CAAC,CAAC,EAAE;YACnB,OAAO,IAAI,CAAC;SACf;QACD,IAAM,QAAQ,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC,CAAC;QAC9D,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;YACZ,QAAQ,UAAA;YACR,gBAAgB,kBAAA;SACnB,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;IAChB,CAAC;IACD;;;;;;;;;;;OAWG;IACH,sDAAoB,GAApB,UAAqB,GAAW;QAC5B,IAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,UAAC,KAAK,IAAK,OAAA,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,EAAjC,CAAiC,CAAC,CAAC;QACtF,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC;IACxE,CAAC;IAvDQ,uBAAuB;QADnC,UAAU,EAAE;;OACA,uBAAuB,CAwDnC;IAAD,8BAAC;CAAA,AAxDD,IAwDC;SAxDY,uBAAuB\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/services/interceptors/errors/retries/operation-context.service.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @ngdoc service\r\n * @name @smartutils.services:OperationContextService\r\n * @description\r\n * This service provides the functionality to register a url with its associated operation contexts and also finds operation context given an url.\r\n */\r\nexport declare class OperationContextService {\r\n    private store;\r\n    constructor();\r\n    /**\r\n     * @ngdoc method\r\n     * @name @smartutils.services:OperationContextService#register\r\n     * @methodOf @smartutils.services:OperationContextService\r\n     *\r\n     * @description\r\n     * Register a new url with it's associated operationContext.\r\n     *\r\n     * @param {String} url The url that is associated to the operation context.\r\n     * @param {String} operationContext The operation context name that is associated to the given url.\r\n     *\r\n     * @return {Object} operationContextService The operationContextService service\r\n     */\r\n    register(url: string, operationContext: string): this;\r\n    /**\r\n     * @ngdoc method\r\n     * @name @smartutils.services:OperationContextService#findOperationContext\r\n     * @methodOf @smartutils.services:OperationContextService\r\n     *\r\n     * @description\r\n     * Find the first matching operation context for the given url.\r\n     *\r\n     * @param {String} url The request url.\r\n     *\r\n     * @return {String} operationContext\r\n     */\r\n    findOperationContext(url: string): string | null;\r\n}\r\n"}}

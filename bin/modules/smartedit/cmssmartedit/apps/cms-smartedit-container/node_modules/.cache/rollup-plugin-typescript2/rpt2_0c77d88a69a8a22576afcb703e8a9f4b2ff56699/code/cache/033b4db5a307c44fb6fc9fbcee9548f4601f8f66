{"code":"import { __awaiter, __decorate, __generator, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { StructureTypeCategory } from 'cmscommons';\r\nimport { SeDowngradeService } from 'smarteditcommons';\r\nimport { StructureModeManagerFactory } from '../dao/StructureModeManagerFactory';\r\nimport { StructuresRestService } from '../dao/StructuresRestService';\r\nimport { TypeStructureRestService } from '../dao/TypeStructureRestService';\r\n/**\r\n * Used for fetching supported restrictions.\r\n */\r\nvar /* @ngInject */ RestrictionsService = /** @class */ (function () {\r\n    function /* @ngInject */ RestrictionsService(structuresRestService, typeStructureRestService, structureModeManagerFactory) {\r\n        this.structuresRestService = structuresRestService;\r\n        this.typeStructureRestService = typeStructureRestService;\r\n        this.modeManager = structureModeManagerFactory.createModeManager(['add', 'edit', 'create']);\r\n    }\r\n    /**\r\n     * @returns An URI of the structure for a given mode.\r\n     */\r\n    /* @ngInject */ RestrictionsService.prototype.getStructureApiUri = function (mode) {\r\n        this.modeManager.validateMode(mode);\r\n        return this.structuresRestService.getUriForContext(mode);\r\n    };\r\n    /**\r\n     * @returns An array of restriction TypeCodes that are supported by SmartEdit.\r\n     */\r\n    /* @ngInject */ RestrictionsService.prototype.getSupportedRestrictionTypeCodes = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var structures;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.typeStructureRestService.getStructuresByCategory(StructureTypeCategory.RESTRICTION)];\r\n                    case 1:\r\n                        structures = _a.sent();\r\n                        return [2 /*return*/, structures.map(function (structure) { return structure.code; })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ RestrictionsService = __decorate([\r\n        SeDowngradeService(),\r\n        __metadata(\"design:paramtypes\", [StructuresRestService,\r\n            TypeStructureRestService,\r\n            StructureModeManagerFactory])\r\n    ], /* @ngInject */ RestrictionsService);\r\n    return /* @ngInject */ RestrictionsService;\r\n}());\r\nexport { /* @ngInject */ RestrictionsService };\r\n//# sourceMappingURL=RestrictionsService.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/dao/StructureModeManagerFactory.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/dao/StructuresRestService.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/dao/TypeStructureRestService.ts"],"map":"{\"version\":3,\"file\":\"RestrictionsService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/services/RestrictionsService.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAAE,qBAAqB,EAAE,MAAM,YAAY,CAAC;AACnD,OAAO,EAAE,kBAAkB,EAAE,MAAM,kBAAkB,CAAC;AACtD,OAAO,EAAe,2BAA2B,EAAE,MAAM,oCAAoC,CAAC;AAC9F,OAAO,EAAE,qBAAqB,EAAE,MAAM,8BAA8B,CAAC;AACrE,OAAO,EAAE,wBAAwB,EAAE,MAAM,iCAAiC,CAAC;AAE3E;;GAEG;AAEH;IAGI,6CACY,qBAA4C,EAC5C,wBAAkD,EAC1D,2BAAwD;QAFhD,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,6BAAwB,GAAxB,wBAAwB,CAA0B;QAG1D,IAAI,CAAC,WAAW,GAAG,2BAA2B,CAAC,iBAAiB,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC;IAChG,CAAC;IAED;;OAEG;IACI,gEAAkB,GAAzB,UAA0B,IAAY;QAClC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACpC,OAAO,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IAC7D,CAAC;IAED;;OAEG;IACU,8EAAgC,GAA7C;;;;;4BACuB,qBAAM,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAC1E,qBAAqB,CAAC,WAAW,CACpC,EAAA;;wBAFK,UAAU,GAAG,SAElB;wBACD,sBAAO,UAAU,CAAC,GAAG,CAAC,UAAC,SAAS,IAAK,OAAA,SAAS,CAAC,IAAI,EAAd,CAAc,CAAC,EAAC;;;;KACxD;IA3BL;QADC,kBAAkB,EAAE;yCAKkB,qBAAqB;YAClB,wBAAwB;YAC7B,2BAA2B;2CAsB/D;IAAD,0CAAC;CAAA,AA5BD,IA4BC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/services/RestrictionsService.d.ts","writeByteOrderMark":false,"text":"import { StructureModeManagerFactory } from '../dao/StructureModeManagerFactory';\r\nimport { StructuresRestService } from '../dao/StructuresRestService';\r\nimport { TypeStructureRestService } from '../dao/TypeStructureRestService';\r\n/**\r\n * Used for fetching supported restrictions.\r\n */\r\nexport declare class RestrictionsService {\r\n    private structuresRestService;\r\n    private typeStructureRestService;\r\n    private readonly modeManager;\r\n    constructor(structuresRestService: StructuresRestService, typeStructureRestService: TypeStructureRestService, structureModeManagerFactory: StructureModeManagerFactory);\r\n    /**\r\n     * @returns An URI of the structure for a given mode.\r\n     */\r\n    getStructureApiUri(mode: string): string;\r\n    /**\r\n     * @returns An array of restriction TypeCodes that are supported by SmartEdit.\r\n     */\r\n    getSupportedRestrictionTypeCodes(): Promise<string[]>;\r\n}\r\n"}}

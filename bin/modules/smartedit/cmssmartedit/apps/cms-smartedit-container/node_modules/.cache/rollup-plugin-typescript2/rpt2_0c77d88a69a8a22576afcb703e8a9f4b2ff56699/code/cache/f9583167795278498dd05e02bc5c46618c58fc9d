{"code":"import { __awaiter, __decorate, __generator, __metadata, __spreadArrays } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { CmsitemsRestService, CMSPageStatus, PAGE_CONTEXT_CATALOG } from 'cmscommons';\r\nimport { cloneDeep } from 'lodash';\r\nimport { pageDeletionEvictionTag, pageRestoredEvictionTag, rarelyChangingContent, Cached, CrossFrameEventService, IAlertService, ICatalogService, IPageInfoService, IRestServiceFactory, IWaitDialogService, SmarteditRoutingService, SystemEventService, SeDowngradeService, IConfirmationModalService, EVENT_CONTENT_CATALOG_UPDATE, EVENTS, LogService, PAGE_CONTEXT_SITE_ID, ISharedDataService, EXPERIENCE_STORAGE_KEY } from 'smarteditcommons';\r\nimport { WorkflowService } from '../../components/workflow/services/WorkflowService';\r\nimport { CatalogVersionRestService, PagesVariationsRestService } from '../../dao';\r\nimport { PageRestoredAlertService } from '../actionableAlert';\r\nimport { HomepageService, HomepageType } from '../pageDisplayConditions';\r\nimport { PageRestoreModalService } from './pageRestore/PageRestoreModalService';\r\nexport var CMSPageOperation;\r\n(function (CMSPageOperation) {\r\n    CMSPageOperation[\"TRASH_PAGE\"] = \"TRASH_PAGE\";\r\n})(CMSPageOperation || (CMSPageOperation = {}));\r\nvar /* @ngInject */ ManagePageService = /** @class */ (function () {\r\n    function /* @ngInject */ ManagePageService(logService, smarteditRoutingService, alertService, cmsitemsRestService, systemEventService, crossFrameEventService, pageInfoService, confirmationModalService, pagesVariationsRestService, waitDialogService, pageRestoreModalService, pageRestoredAlertService, homepageService, workflowService, catalogService, restServiceFactory, sharedDataService, catalogVersionRestService) {\r\n        this.logService = logService;\r\n        this.smarteditRoutingService = smarteditRoutingService;\r\n        this.alertService = alertService;\r\n        this.cmsitemsRestService = cmsitemsRestService;\r\n        this.systemEventService = systemEventService;\r\n        this.crossFrameEventService = crossFrameEventService;\r\n        this.pageInfoService = pageInfoService;\r\n        this.confirmationModalService = confirmationModalService;\r\n        this.pagesVariationsRestService = pagesVariationsRestService;\r\n        this.waitDialogService = waitDialogService;\r\n        this.pageRestoreModalService = pageRestoreModalService;\r\n        this.pageRestoredAlertService = pageRestoredAlertService;\r\n        this.homepageService = homepageService;\r\n        this.workflowService = workflowService;\r\n        this.catalogService = catalogService;\r\n        this.restServiceFactory = restServiceFactory;\r\n        this.sharedDataService = sharedDataService;\r\n        this.catalogVersionRestService = catalogVersionRestService;\r\n        this.resourcePageOperationsURI = \"/cmssmarteditwebservices/v1/sites/\" + PAGE_CONTEXT_SITE_ID + \"/catalogs/\" + PAGE_CONTEXT_CATALOG + \"/pages/:pageId/operations\";\r\n    }\r\n    /**\r\n     * Get the number of soft deleted pages for the provided context.\r\n     */\r\n    /* @ngInject */ ManagePageService.prototype.getSoftDeletedPagesCount = function (uriContext) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var requestParams, result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        requestParams = {\r\n                            pageSize: 10,\r\n                            currentPage: 0,\r\n                            typeCode: 'AbstractPage',\r\n                            itemSearchParams: 'pageStatus:deleted',\r\n                            catalogId: uriContext.CONTEXT_CATALOG,\r\n                            catalogVersion: uriContext.CONTEXT_CATALOG_VERSION,\r\n                            fields: 'BASIC'\r\n                        };\r\n                        return [4 /*yield*/, this.cmsitemsRestService.get(requestParams)];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result.pagination.totalCount];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method triggers the soft deletion of a CMS page.\r\n     *\r\n     * @param pageInfo The page object containing the uuid and the name of the page to be deleted.\r\n     */\r\n    /* @ngInject */ ManagePageService.prototype.softDeletePage = function (pageInfo, uriContext) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _pageInfo, builtURIContext, confirmationModalDescription, operationConfirmed, exception_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _pageInfo = cloneDeep(pageInfo);\r\n                        builtURIContext = {\r\n                            catalogId: uriContext.CURRENT_CONTEXT_CATALOG,\r\n                            catalogVersion: uriContext.CURRENT_CONTEXT_CATALOG_VERSION,\r\n                            siteId: uriContext.CURRENT_CONTEXT_SITE_ID\r\n                        };\r\n                        return [4 /*yield*/, this.getConfirmationModalDescription(_pageInfo, uriContext)];\r\n                    case 1:\r\n                        confirmationModalDescription = _a.sent();\r\n                        return [4 /*yield*/, this.confirmSoftDelete(confirmationModalDescription, pageInfo.name)];\r\n                    case 2:\r\n                        operationConfirmed = _a.sent();\r\n                        if (!operationConfirmed) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        _a.trys.push([3, 5, , 6]);\r\n                        _pageInfo.identifier = pageInfo.uuid;\r\n                        _pageInfo.pageStatus = CMSPageStatus.DELETED;\r\n                        return [4 /*yield*/, this.cmsitemsRestService.update(_pageInfo)];\r\n                    case 4:\r\n                        _a.sent();\r\n                        this.crossFrameEventService.publish(EVENTS.PAGE_DELETED);\r\n                        this.alertService.showSuccess({\r\n                            message: 'se.cms.actionitem.page.trash.alert.success.description',\r\n                            messagePlaceholders: {\r\n                                pageName: pageInfo.name\r\n                            }\r\n                        });\r\n                        this.smarteditRoutingService.go('/ng/pages/:siteId/:catalogId/:catalogVersion'\r\n                            .replace(':siteId', builtURIContext.siteId)\r\n                            .replace(':catalogId', builtURIContext.catalogId)\r\n                            .replace(':catalogVersion', builtURIContext.catalogVersion));\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        exception_1 = _a.sent();\r\n                        this.logService.warn('Something went wrong when soft deleting page', exception_1);\r\n                        return [3 /*break*/, 6];\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method triggers the permanent deletion of a CMS page.\r\n     */\r\n    /* @ngInject */ ManagePageService.prototype.hardDeletePage = function (pageInfo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var operationConfirmed;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.confirmHardDelete(pageInfo.name)];\r\n                    case 1:\r\n                        operationConfirmed = _a.sent();\r\n                        if (!operationConfirmed) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, this.cmsitemsRestService.delete(pageInfo.uuid)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        this.alertService.showSuccess('se.cms.page.permanently.delete.alert.success');\r\n                        this.systemEventService.publishAsync(EVENT_CONTENT_CATALOG_UPDATE);\r\n                        this.crossFrameEventService.publish(EVENTS.PAGE_DELETED);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *  This method triggers the restoration a CMS page.\r\n     */\r\n    /* @ngInject */ ManagePageService.prototype.restorePage = function (pageInfo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _pageInfo, response, exception_2, errors;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _pageInfo = cloneDeep(pageInfo);\r\n                        _pageInfo.pageStatus = CMSPageStatus.ACTIVE;\r\n                        _pageInfo.identifier = pageInfo.uuid;\r\n                        this.waitDialogService.showWaitModal(null);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.cmsitemsRestService.update(_pageInfo, {\r\n                                headers: { 'Ignore-Interceptor': 'NonValidationErrorInterceptor' }\r\n                            })];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        this.waitDialogService.hideWaitModal();\r\n                        this.systemEventService.publishAsync(EVENT_CONTENT_CATALOG_UPDATE, response);\r\n                        this.pageRestoredAlertService.displayPageRestoredSuccessAlert(_pageInfo);\r\n                        this.crossFrameEventService.publish(EVENTS.PAGE_RESTORED);\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        exception_2 = _a.sent();\r\n                        errors = exception_2.error.errors;\r\n                        this.waitDialogService.hideWaitModal();\r\n                        this.pageRestoreModalService.handleRestoreValidationErrors(_pageInfo, errors);\r\n                        return [3 /*break*/, 4];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method indicates whether the given page can be soft deleted.\r\n     * Only the following pages are eligible for soft deletion:\r\n     * 1. the variation pages\r\n     * 2. the primary pages associated with no variation pages\r\n     * 3. the page is not in a workflow\r\n     */\r\n    /* @ngInject */ ManagePageService.prototype.isPageTrashable = function (cmsPage, uriContext) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, hasFallbackHomepageOrIsPrimaryWithoutVariations, isInWorkflow, _b;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        _c.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, Promise.all([\r\n                                this.hasFallbackHomepageOrIsPrimaryWithoutVariations(cmsPage, uriContext),\r\n                                this.workflowService.isPageInWorkflow(cmsPage)\r\n                            ])];\r\n                    case 1:\r\n                        _a = _c.sent(), hasFallbackHomepageOrIsPrimaryWithoutVariations = _a[0], isInWorkflow = _a[1];\r\n                        return [2 /*return*/, hasFallbackHomepageOrIsPrimaryWithoutVariations && !isInWorkflow];\r\n                    case 2:\r\n                        _b = _c.sent();\r\n                        return [2 /*return*/, false];\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Determines whether page can be cloned or not\r\n     *\r\n     * Checks if there is permission for given page in given catalog version to be cloned\r\n     * This method uses only \"outer\" parts for that check so there is no need for iframe to be available\r\n     *\r\n     * !NOTE: Logic here is very similar to logic used in RulesAndPermissionsRegistrationService where \"se.cloneable.page\" rule is registered. So if any changes are done here it should be considered to adjust those changes in mentioned service as well.\r\n     *\r\n     */\r\n    /* @ngInject */ ManagePageService.prototype.isPageCloneable = function (pageUuid, catalogVersion) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var catalogDescriptor, pageUriContext, _a, catalogs, pageInfo, targets, pageContext;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.sharedDataService.get(EXPERIENCE_STORAGE_KEY)];\r\n                    case 1:\r\n                        catalogDescriptor = (_b.sent()).catalogDescriptor;\r\n                        pageUriContext = {\r\n                            CURRENT_CONTEXT_SITE_ID: catalogDescriptor.siteId,\r\n                            CURRENT_CONTEXT_CATALOG: catalogDescriptor.catalogId,\r\n                            CURRENT_CONTEXT_CATALOG_VERSION: catalogDescriptor.catalogVersion\r\n                        };\r\n                        return [4 /*yield*/, Promise.all([\r\n                                this.catalogService.getContentCatalogsForSite(catalogDescriptor.siteId),\r\n                                this.cmsitemsRestService.getById(pageUuid),\r\n                                this.catalogVersionRestService.getCloneableTargets(pageUriContext)\r\n                            ])];\r\n                    case 2:\r\n                        _a = _b.sent(), catalogs = _a[0], pageInfo = _a[1], targets = _a[2];\r\n                        pageContext = catalogs\r\n                            // merge catalog and catalog.parents into one array to simplify searching\r\n                            .reduce(function (acc, catalog) {\r\n                            if (catalog.parents && catalog.parents.length) {\r\n                                acc = acc.concat(catalog.parents);\r\n                            }\r\n                            return acc;\r\n                        }, __spreadArrays(catalogs))\r\n                            // flattening versions\r\n                            .reduce(function (acc, catalog) { return acc.concat(catalog.versions); }, [])\r\n                            // finding demanded version\r\n                            .find(function (version) { return version.uuid === catalogVersion; });\r\n                        if (pageContext === null || pageContext === void 0 ? void 0 : pageContext.active) {\r\n                            return [2 /*return*/, (targets.versions.length > 0 &&\r\n                                    pageInfo.defaultPage &&\r\n                                    !pageInfo.copyToCatalogsDisabled)];\r\n                        }\r\n                        return [2 /*return*/, targets.versions.length > 0];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Get the disabled trash tooltip message.\r\n     */\r\n    /* @ngInject */ ManagePageService.prototype.getDisabledTrashTooltipMessage = function (pageInfo, uriContext) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var translate, isPageInWorkflow, homepageType;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        translate = 'se.cms.tooltip.movetotrash';\r\n                        return [4 /*yield*/, this.workflowService.isPageInWorkflow(pageInfo)];\r\n                    case 1:\r\n                        isPageInWorkflow = _a.sent();\r\n                        return [4 /*yield*/, this.homepageService.getHomepageType(pageInfo, uriContext)];\r\n                    case 2:\r\n                        homepageType = _a.sent();\r\n                        if (homepageType === HomepageType.CURRENT) {\r\n                            translate = 'se.cms.tooltip.current.homepage.movetotrash';\r\n                        }\r\n                        else if (homepageType === HomepageType.OLD) {\r\n                            translate = 'se.cms.tooltip.old.homepage.movetotrash';\r\n                        }\r\n                        else if (isPageInWorkflow) {\r\n                            translate = 'se.cms.tooltip.page.in.workflow.movetotrash';\r\n                        }\r\n                        return [2 /*return*/, translate];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Will trash the given page in the corresponding active catalog version.\r\n     */\r\n    /* @ngInject */ ManagePageService.prototype.trashPageInActiveCatalogVersion = function (pageUid) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var uriContext, activeVersion, operationConfirmed, exception_3;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.catalogService.retrieveUriContext()];\r\n                    case 1:\r\n                        uriContext = _a.sent();\r\n                        return [4 /*yield*/, this.catalogService.getContentCatalogActiveVersion(uriContext)];\r\n                    case 2:\r\n                        activeVersion = _a.sent();\r\n                        return [4 /*yield*/, this.confirmTrashingPageInActiveCatalogVersion(activeVersion)];\r\n                    case 3:\r\n                        operationConfirmed = _a.sent();\r\n                        if (!operationConfirmed) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        _a.label = 4;\r\n                    case 4:\r\n                        _a.trys.push([4, 6, , 7]);\r\n                        this.pageOperationsRESTService = this.restServiceFactory.get(this.resourcePageOperationsURI.replace(':pageId', pageUid));\r\n                        return [4 /*yield*/, this.pageOperationsRESTService.save({\r\n                                operation: 'TRASH_PAGE',\r\n                                sourceCatalogVersion: uriContext.CURRENT_CONTEXT_CATALOG_VERSION,\r\n                                targetCatalogVersion: activeVersion\r\n                            })];\r\n                    case 5:\r\n                        _a.sent();\r\n                        this.alertService.showSuccess({\r\n                            message: 'se.cms.sync.page.status.success.alert',\r\n                            messagePlaceholders: {\r\n                                pageId: pageUid,\r\n                                catalogVersion: activeVersion\r\n                            }\r\n                        });\r\n                        return [3 /*break*/, 7];\r\n                    case 6:\r\n                        exception_3 = _a.sent();\r\n                        this.logService.warn('trashPageInActiveCatalogVersion - page could not be trashed', exception_3);\r\n                        return [3 /*break*/, 7];\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ ManagePageService.prototype.getConfirmationModalDescription = function (pageInfo, uriContext) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var pageUUID, homepageType, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _b.trys.push([0, 3, , 4]);\r\n                        return [4 /*yield*/, this.pageInfoService.getPageUUID()];\r\n                    case 1:\r\n                        pageUUID = _b.sent();\r\n                        if (!pageUUID) {\r\n                            this.logService.error('deletePageService::deletePage - pageUUID is undefined');\r\n                            return [2 /*return*/, Promise.reject()];\r\n                        }\r\n                        return [4 /*yield*/, this.homepageService.getHomepageType(pageInfo, uriContext)];\r\n                    case 2:\r\n                        homepageType = _b.sent();\r\n                        if (homepageType !== null || pageInfo.homepage) {\r\n                            return [2 /*return*/, 'se.cms.actionitem.page.trash.confirmation.description.storefront.homepage'];\r\n                        }\r\n                        return [2 /*return*/, 'se.cms.actionitem.page.trash.confirmation.description.storefront'];\r\n                    case 3:\r\n                        _a = _b.sent();\r\n                        return [2 /*return*/, 'se.cms.actionitem.page.trash.confirmation.description.pagelist'];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ ManagePageService.prototype.confirmSoftDelete = function (description, pageName) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _b.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, this.confirmationModalService.confirm({\r\n                                description: description,\r\n                                descriptionPlaceholders: {\r\n                                    pageName: pageName\r\n                                },\r\n                                title: 'se.cms.actionitem.page.trash.confirmation.title'\r\n                            })];\r\n                    case 1:\r\n                        _b.sent();\r\n                        return [2 /*return*/, true];\r\n                    case 2:\r\n                        _a = _b.sent();\r\n                        return [2 /*return*/, false];\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ ManagePageService.prototype.confirmHardDelete = function (pageName) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _b.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, this.confirmationModalService.confirm({\r\n                                title: 'se.cms.actionitem.page.permanently.delete.confirmation.title',\r\n                                description: 'se.cms.actionitem.page.permanently.delete.confirmation.description',\r\n                                descriptionPlaceholders: {\r\n                                    pageName: pageName\r\n                                }\r\n                            })];\r\n                    case 1:\r\n                        _b.sent();\r\n                        return [2 /*return*/, true];\r\n                    case 2:\r\n                        _a = _b.sent();\r\n                        return [2 /*return*/, false];\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ ManagePageService.prototype.confirmTrashingPageInActiveCatalogVersion = function (activeVersion) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _b.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, this.confirmationModalService.confirm({\r\n                                title: 'se.cms.sync.page.status.confirm.title',\r\n                                description: 'se.cms.sync.page.status.confirm.description',\r\n                                descriptionPlaceholders: {\r\n                                    catalogVersion: activeVersion\r\n                                }\r\n                            })];\r\n                    case 1:\r\n                        _b.sent();\r\n                        return [2 /*return*/, true];\r\n                    case 2:\r\n                        _a = _b.sent();\r\n                        return [2 /*return*/, false];\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ ManagePageService.prototype.hasFallbackHomepageOrIsPrimaryWithoutVariations = function (cmsPage, uriContext) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var homepageType, variationPagesUids;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.homepageService.getHomepageType(cmsPage, uriContext)];\r\n                    case 1:\r\n                        homepageType = _a.sent();\r\n                        if (homepageType !== null || cmsPage.homepage) {\r\n                            return [2 /*return*/, this.homepageService.hasFallbackHomePage(uriContext)];\r\n                        }\r\n                        return [4 /*yield*/, this.pagesVariationsRestService.getVariationsForPrimaryPageId(cmsPage.uid)];\r\n                    case 2:\r\n                        variationPagesUids = _a.sent();\r\n                        return [2 /*return*/, variationPagesUids.length === 0];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    __decorate([\r\n        Cached({\r\n            actions: [rarelyChangingContent],\r\n            tags: [pageDeletionEvictionTag, pageRestoredEvictionTag]\r\n        }),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Object]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], /* @ngInject */ ManagePageService.prototype, \"getSoftDeletedPagesCount\", null);\r\n    /* @ngInject */ ManagePageService = __decorate([\r\n        SeDowngradeService(),\r\n        __metadata(\"design:paramtypes\", [LogService,\r\n            SmarteditRoutingService,\r\n            IAlertService,\r\n            CmsitemsRestService,\r\n            SystemEventService,\r\n            CrossFrameEventService,\r\n            IPageInfoService,\r\n            IConfirmationModalService,\r\n            PagesVariationsRestService,\r\n            IWaitDialogService,\r\n            PageRestoreModalService,\r\n            PageRestoredAlertService,\r\n            HomepageService,\r\n            WorkflowService,\r\n            ICatalogService,\r\n            IRestServiceFactory,\r\n            ISharedDataService,\r\n            CatalogVersionRestService])\r\n    ], /* @ngInject */ ManagePageService);\r\n    return /* @ngInject */ ManagePageService;\r\n}());\r\nexport { /* @ngInject */ ManagePageService };\r\n//# sourceMappingURL=ManagePageService.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types/lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/workflow/services/WorkflowService.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/dao/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/services/actionableAlert/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/services/pageDisplayConditions/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/services/pages/pageRestore/PageRestoreModalService.ts"],"map":"{\"version\":3,\"file\":\"ManagePageService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/pages/ManagePageService.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/services/pages/ManagePageService.d.ts","writeByteOrderMark":false,"text":"import { CmsitemsRestService, ICMSPage } from 'cmscommons';\r\nimport { CrossFrameEventService, IAlertService, ICatalogService, IPageInfoService, IRestServiceFactory, IUriContext, IWaitDialogService, SmarteditRoutingService, SystemEventService, IConfirmationModalService, LogService, ISharedDataService } from 'smarteditcommons';\r\nimport { WorkflowService } from '../../components/workflow/services/WorkflowService';\r\nimport { CatalogVersionRestService, PagesVariationsRestService } from '../../dao';\r\nimport { PageRestoredAlertService } from '../actionableAlert';\r\nimport { HomepageService } from '../pageDisplayConditions';\r\nimport { PageRestoreModalService } from './pageRestore/PageRestoreModalService';\r\nexport declare enum CMSPageOperation {\r\n    TRASH_PAGE = \"TRASH_PAGE\"\r\n}\r\nexport interface CMSPageOperationPayload {\r\n    catalogId?: string;\r\n    operation: CMSPageOperation;\r\n    sourceCatalogVersion: string;\r\n    targetCatalogVersion: string;\r\n}\r\nexport declare class ManagePageService {\r\n    private logService;\r\n    private smarteditRoutingService;\r\n    private alertService;\r\n    private cmsitemsRestService;\r\n    private systemEventService;\r\n    private crossFrameEventService;\r\n    private pageInfoService;\r\n    private confirmationModalService;\r\n    private pagesVariationsRestService;\r\n    private waitDialogService;\r\n    private pageRestoreModalService;\r\n    private pageRestoredAlertService;\r\n    private homepageService;\r\n    private workflowService;\r\n    private catalogService;\r\n    private restServiceFactory;\r\n    private sharedDataService;\r\n    private catalogVersionRestService;\r\n    private resourcePageOperationsURI;\r\n    private pageOperationsRESTService;\r\n    constructor(logService: LogService, smarteditRoutingService: SmarteditRoutingService, alertService: IAlertService, cmsitemsRestService: CmsitemsRestService, systemEventService: SystemEventService, crossFrameEventService: CrossFrameEventService, pageInfoService: IPageInfoService, confirmationModalService: IConfirmationModalService, pagesVariationsRestService: PagesVariationsRestService, waitDialogService: IWaitDialogService, pageRestoreModalService: PageRestoreModalService, pageRestoredAlertService: PageRestoredAlertService, homepageService: HomepageService, workflowService: WorkflowService, catalogService: ICatalogService, restServiceFactory: IRestServiceFactory, sharedDataService: ISharedDataService, catalogVersionRestService: CatalogVersionRestService);\r\n    /**\r\n     * Get the number of soft deleted pages for the provided context.\r\n     */\r\n    getSoftDeletedPagesCount(uriContext: IUriContext): Promise<number>;\r\n    /**\r\n     * This method triggers the soft deletion of a CMS page.\r\n     *\r\n     * @param pageInfo The page object containing the uuid and the name of the page to be deleted.\r\n     */\r\n    softDeletePage(pageInfo: ICMSPage, uriContext: IUriContext): Promise<void>;\r\n    /**\r\n     * This method triggers the permanent deletion of a CMS page.\r\n     */\r\n    hardDeletePage(pageInfo: ICMSPage): Promise<void>;\r\n    /**\r\n     *  This method triggers the restoration a CMS page.\r\n     */\r\n    restorePage(pageInfo: ICMSPage): Promise<void>;\r\n    /**\r\n     * This method indicates whether the given page can be soft deleted.\r\n     * Only the following pages are eligible for soft deletion:\r\n     * 1. the variation pages\r\n     * 2. the primary pages associated with no variation pages\r\n     * 3. the page is not in a workflow\r\n     */\r\n    isPageTrashable(cmsPage: ICMSPage, uriContext: IUriContext): Promise<boolean>;\r\n    /**\r\n     * Determines whether page can be cloned or not\r\n     *\r\n     * Checks if there is permission for given page in given catalog version to be cloned\r\n     * This method uses only \"outer\" parts for that check so there is no need for iframe to be available\r\n     *\r\n     * !NOTE: Logic here is very similar to logic used in RulesAndPermissionsRegistrationService where \"se.cloneable.page\" rule is registered. So if any changes are done here it should be considered to adjust those changes in mentioned service as well.\r\n     *\r\n     */\r\n    isPageCloneable(pageUuid: string, catalogVersion: string): Promise<boolean>;\r\n    /**\r\n     * Get the disabled trash tooltip message.\r\n     */\r\n    getDisabledTrashTooltipMessage(pageInfo: ICMSPage, uriContext: IUriContext): Promise<string>;\r\n    /**\r\n     * Will trash the given page in the corresponding active catalog version.\r\n     */\r\n    trashPageInActiveCatalogVersion(pageUid: string): Promise<void>;\r\n    private getConfirmationModalDescription;\r\n    private confirmSoftDelete;\r\n    private confirmHardDelete;\r\n    private confirmTrashingPageInActiveCatalogVersion;\r\n    private hasFallbackHomepageOrIsPrimaryWithoutVariations;\r\n}\r\n"}}

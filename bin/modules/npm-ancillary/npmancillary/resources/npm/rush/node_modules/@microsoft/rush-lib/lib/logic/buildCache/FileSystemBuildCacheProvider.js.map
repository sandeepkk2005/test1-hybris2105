{"version":3,"file":"FileSystemBuildCacheProvider.js","sourceRoot":"","sources":["../../../src/logic/buildCache/FileSystemBuildCacheProvider.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;;;;;;;;;;;;;;;;;;;;AAE3D,2CAA6B;AAC7B,oEAAoE;AAUpE,MAAM,+BAA+B,GAAW,aAAa,CAAC;AAE9D,MAAa,4BAA4B;IAGvC,YAAmB,OAA6C;QAC9D,IAAI,CAAC,gBAAgB;YACnB,OAAO,CAAC,qBAAqB,CAAC,gBAAgB;gBAC9C,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,gBAAgB,EAAE,+BAA+B,CAAC,CAAC;IAC3F,CAAC;IAEM,iBAAiB,CAAC,OAAe;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;IACnD,CAAC;IAEM,KAAK,CAAC,6BAA6B,CACxC,QAAkB,EAClB,OAAe;QAEf,MAAM,kBAAkB,GAAW,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;QACnE,IAAI,MAAM,8BAAU,CAAC,WAAW,CAAC,kBAAkB,CAAC,EAAE;YACpD,OAAO,kBAAkB,CAAC;SAC3B;aAAM;YACL,OAAO,SAAS,CAAC;SAClB;IACH,CAAC;IAEM,KAAK,CAAC,2BAA2B,CACtC,QAAkB,EAClB,OAAe,EACf,WAAmB;QAEnB,MAAM,kBAAkB,GAAW,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;QACnE,MAAM,8BAAU,CAAC,cAAc,CAAC,kBAAkB,EAAE,WAAW,EAAE,EAAE,kBAAkB,EAAE,IAAI,EAAE,CAAC,CAAC;QAC/F,QAAQ,CAAC,gBAAgB,CAAC,yBAAyB,kBAAkB,IAAI,CAAC,CAAC;QAC3E,OAAO,kBAAkB,CAAC;IAC5B,CAAC;CACF;AAnCD,oEAmCC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as path from 'path';\r\nimport { FileSystem, Terminal } from '@rushstack/node-core-library';\r\n\r\nimport { RushConfiguration } from '../../api/RushConfiguration';\r\nimport { RushUserConfiguration } from '../../api/RushUserConfiguration';\r\n\r\nexport interface IFileSystemBuildCacheProviderOptions {\r\n  rushConfiguration: RushConfiguration;\r\n  rushUserConfiguration: RushUserConfiguration;\r\n}\r\n\r\nconst DEFAULT_BUILD_CACHE_FOLDER_NAME: string = 'build-cache';\r\n\r\nexport class FileSystemBuildCacheProvider {\r\n  private readonly _cacheFolderPath: string;\r\n\r\n  public constructor(options: IFileSystemBuildCacheProviderOptions) {\r\n    this._cacheFolderPath =\r\n      options.rushUserConfiguration.buildCacheFolder ||\r\n      path.join(options.rushConfiguration.commonTempFolder, DEFAULT_BUILD_CACHE_FOLDER_NAME);\r\n  }\r\n\r\n  public getCacheEntryPath(cacheId: string): string {\r\n    return path.join(this._cacheFolderPath, cacheId);\r\n  }\r\n\r\n  public async tryGetCacheEntryPathByIdAsync(\r\n    terminal: Terminal,\r\n    cacheId: string\r\n  ): Promise<string | undefined> {\r\n    const cacheEntryFilePath: string = this.getCacheEntryPath(cacheId);\r\n    if (await FileSystem.existsAsync(cacheEntryFilePath)) {\r\n      return cacheEntryFilePath;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  public async trySetCacheEntryBufferAsync(\r\n    terminal: Terminal,\r\n    cacheId: string,\r\n    entryBuffer: Buffer\r\n  ): Promise<string> {\r\n    const cacheEntryFilePath: string = this.getCacheEntryPath(cacheId);\r\n    await FileSystem.writeFileAsync(cacheEntryFilePath, entryBuffer, { ensureFolderExists: true });\r\n    terminal.writeVerboseLine(`Wrote cache entry to \"${cacheEntryFilePath}\".`);\r\n    return cacheEntryFilePath;\r\n  }\r\n}\r\n"]}
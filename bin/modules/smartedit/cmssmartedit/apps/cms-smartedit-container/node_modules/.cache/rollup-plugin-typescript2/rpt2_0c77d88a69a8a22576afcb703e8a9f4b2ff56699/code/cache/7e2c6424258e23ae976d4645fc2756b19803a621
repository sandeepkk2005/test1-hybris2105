{"code":"import { __awaiter, __decorate, __generator, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { CONTEXT_CATALOG } from 'cmscommons';\r\nimport { ICatalogService, SeDowngradeService, SystemEventService } from 'smarteditcommons';\r\n/**\r\n * Expose through angular the event for sendEventShowReplaceParentHomePageInfo()\r\n */\r\nexport var CMS_EVENT_SHOW_REPLACE_PARENT_HOMEPAGE_INFO = 'CMS_EVENT_SHOW_REPLACE_PARENT_HOMEPAGE_INFO';\r\n/** @internal */\r\n/**\r\n * Expose through angular the event for sendEventHideReplaceParentHomePageInfo()\r\n */\r\nexport var CMS_EVENT_HIDE_REPLACE_PARENT_HOMEPAGE_INFO = 'CMS_EVENT_HIDE_REPLACE_PARENT_HOMEPAGE_INFO';\r\n/** @internal */\r\n/**\r\n * !NGDOC\r\n * Status of a ICatalogHomepageDetails\r\n */\r\nexport var CatalogHomepageDetailsStatus;\r\n(function (CatalogHomepageDetailsStatus) {\r\n    // Status is being calculated\r\n    CatalogHomepageDetailsStatus[\"PENDING\"] = \"PENDING\";\r\n    // No current homepage for the given catalog version\r\n    CatalogHomepageDetailsStatus[\"NO_HOMEPAGE\"] = \"NO_HOMEPAGE\";\r\n    // There is a homepage is in the given catalog version (not inherited)\r\n    CatalogHomepageDetailsStatus[\"LOCAL\"] = \"LOCAL\";\r\n    // The old homepage is in the given catalog version\r\n    CatalogHomepageDetailsStatus[\"OLD\"] = \"OLD\";\r\n    // There is a homepage, but it is inherited from a parent catalog\r\n    CatalogHomepageDetailsStatus[\"PARENT\"] = \"PARENT\";\r\n})(CatalogHomepageDetailsStatus || (CatalogHomepageDetailsStatus = {}));\r\n/**\r\n * An enum type representing the homepage type of a cms page.\r\n */\r\nexport var HomepageType;\r\n(function (HomepageType) {\r\n    /**\r\n     * An enum value of type HomepageType describing if a cms page was previously a homepage.\r\n     */\r\n    HomepageType[\"OLD\"] = \"old\";\r\n    /**\r\n     * An enum value of type HomepageType describing if a cms page is a current homepage.\r\n     */\r\n    HomepageType[\"CURRENT\"] = \"current\";\r\n    /**\r\n     * An enum value of type HomepageType describing if a cms page is a fallback homepage.\r\n     */\r\n    HomepageType[\"FALLBACK\"] = \"fallback\";\r\n})(HomepageType || (HomepageType = {}));\r\n/**\r\n * This service is used to determine if a cms page is a current, a previous homepage, or neither.\r\n */\r\nvar /* @ngInject */ HomepageService = /** @class */ (function () {\r\n    function /* @ngInject */ HomepageService(catalogService, systemEventService) {\r\n        this.catalogService = catalogService;\r\n        this.systemEventService = systemEventService;\r\n    }\r\n    /**\r\n     * Send an event to show info to the user about replacing a homepage from a parent catalog.\r\n     */\r\n    /* @ngInject */ HomepageService.prototype.sendEventHideReplaceParentHomePageInfo = function (data) {\r\n        this.systemEventService.publish(CMS_EVENT_HIDE_REPLACE_PARENT_HOMEPAGE_INFO, data);\r\n    };\r\n    /**\r\n     * Send an event to hide the info to the user about replacing a homepage from a parent catalog.\r\n     */\r\n    /* @ngInject */ HomepageService.prototype.sendEventShowReplaceParentHomePageInfo = function (data) {\r\n        this.systemEventService.publish(CMS_EVENT_SHOW_REPLACE_PARENT_HOMEPAGE_INFO, data);\r\n    };\r\n    /**\r\n     * getHomepageDetailsForContext is a mashup of logic needed for the frontend\r\n     * Both the pageDisplayConditions and newPageDisplayConditions components use it for various\r\n     * ui related things, like enable/disable of the homepage checkbox, or show messages on the UI\r\n     *\r\n     * Given a uriContext, basically there are 3 mains return types, mashed into 1 typescript type\r\n     *\r\n     * 1) CatalogHomepageDetailsStatus.NO_HOMEPAGE\r\n     * This means that the given uriContext has no homepage whatsoever. This probably indicates an issue with the data.\r\n     *\r\n     * 2) CatalogHomepageDetailsStatus.PARENT\r\n     * This means that the current homepage for the given uriContext is inherited from a parent catalog.\r\n     * In this case, the returned ICatalogHomepageDetails contains the parentCatalogName, parentCatalogVersion,\r\n     * targetCatalogName, and targetCatalogVersion,\r\n     *\r\n     * 3) CatalogHomepageDetailsStatus.LOCAL\r\n     * This means that the current homepage for the given uriContext belongs to the catalog of that uriContext.\r\n     * In this case, the returned ICatalogHomepageDetails contains the currentHomepageName, currentHomepageUid,\r\n     * and oldHomepageUid\r\n     *\r\n     * @param uriContext A IUriContext object\r\n     *\r\n     * @returns ICatalogHomepageDetails with one of the 3 options as indicated above\r\n     */\r\n    /* @ngInject */ HomepageService.prototype.getHomepageDetailsForContext = function (uriContext) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var catalogVersion, homepageForCurrentCatalog;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.catalogService.getContentCatalogVersion(uriContext)];\r\n                    case 1:\r\n                        catalogVersion = _a.sent();\r\n                        homepageForCurrentCatalog = catalogVersion.homepage\r\n                            ? catalogVersion.homepage.current\r\n                            : null;\r\n                        return [2 /*return*/, this.buildHomepageDetailsForContext(homepageForCurrentCatalog, uriContext)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method checks if the cms page is a current homepage.\r\n     *\r\n     * @param cmsPage The cms page.\r\n     * @param uriContext The uriContext.\r\n     *\r\n     * @returns A promise resolved with a boolean indicating whether the cms page is the current homepage.\r\n     */\r\n    /* @ngInject */ HomepageService.prototype.isCurrentHomepage = function (cmsPage, uriContext) {\r\n        return this.isHomepageType(cmsPage, uriContext, HomepageType.CURRENT);\r\n    };\r\n    /**\r\n     * This method checks if the cms page is a current homepage.\r\n     *\r\n     * @param cmsPage The cms page.\r\n     * @param uriContext The uriContext.\r\n     *\r\n     * @returns A promise resolved with a boolean indicating whether the cms page is a previous homepage.\r\n     */\r\n    /* @ngInject */ HomepageService.prototype.isOldHomepage = function (cmsPage, uriContext) {\r\n        return this.isHomepageType(cmsPage, uriContext, HomepageType.OLD);\r\n    };\r\n    /**\r\n     * This method returns the homepage type of a cms page.\r\n     *\r\n     * @param cmsPage The cms page.\r\n     * @param uriContext The uriContext.\r\n     *\r\n     * @returns A promise resolved with a enum type indicating whether the cms page is a current, previous homepage or null if neither.\r\n     */\r\n    /* @ngInject */ HomepageService.prototype.getHomepageType = function (cmsPage, uriContext) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var catalog;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.catalogService.getContentCatalogVersion(uriContext)];\r\n                    case 1:\r\n                        catalog = _a.sent();\r\n                        if (!catalog || !catalog.homepage) {\r\n                            return [2 /*return*/, null];\r\n                        }\r\n                        if (catalog.homepage.current &&\r\n                            catalog.homepage.current.uid === cmsPage.uid &&\r\n                            catalog.homepage.current.catalogVersionUuid === cmsPage.catalogVersion) {\r\n                            return [2 /*return*/, HomepageType.CURRENT];\r\n                        }\r\n                        else if (catalog.homepage.old && catalog.homepage.old.uid === cmsPage.uid) {\r\n                            return [2 /*return*/, this.compareCatalogVersions(catalog.homepage.old.catalogVersionUuid, cmsPage.catalogVersion, function (oldHomepageCatalog, pageCatalog) {\r\n                                    return oldHomepageCatalog.catalogId === pageCatalog.catalogId ? HomepageType.OLD : null;\r\n                                })];\r\n                        }\r\n                        else if (catalog.homepage.fallback && catalog.homepage.fallback.uid === cmsPage.uid) {\r\n                            return [2 /*return*/, this.compareCatalogVersions(catalog.homepage.fallback.catalogVersionUuid, cmsPage.catalogVersion, function (fallbackCatalog, pageCatalog) {\r\n                                    return fallbackCatalog.uuid === pageCatalog.uuid ? HomepageType.FALLBACK : null;\r\n                                })];\r\n                        }\r\n                        return [2 /*return*/, null];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param uriContext The uriContext.\r\n     *\r\n     * @returns A promise resolved to true when the catalog has a fallback homepage.\r\n     */\r\n    /* @ngInject */ HomepageService.prototype.hasFallbackHomePage = function (uriContext) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var catalog;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.catalogService.getContentCatalogVersion(uriContext)];\r\n                    case 1:\r\n                        catalog = _a.sent();\r\n                        if (!catalog || !catalog.homepage) {\r\n                            throw Error(\"HomepageService.hasFallbackHomePage - Catalog does not have homepage fallback property\");\r\n                        }\r\n                        return [2 /*return*/, !!catalog.homepage.fallback];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param cmsPage The cms page.\r\n     * @param uriContext The uriContext.\r\n     *\r\n     * @returns A promise resolved to true when the page can be synced.\r\n     */\r\n    /* @ngInject */ HomepageService.prototype.canSyncHomepage = function (cmsPage, uriContext) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var isOld, catalog;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.isOldHomepage(cmsPage, uriContext)];\r\n                    case 1:\r\n                        isOld = _a.sent();\r\n                        if (!isOld) {\r\n                            return [2 /*return*/, true];\r\n                        }\r\n                        return [4 /*yield*/, this.catalogService.getContentCatalogVersion(uriContext)];\r\n                    case 2:\r\n                        catalog = _a.sent();\r\n                        return [2 /*return*/, this.compareCatalogVersions(catalog.homepage.current.catalogVersionUuid, cmsPage.catalogVersion, function (currentCatalog, pageCatalog) {\r\n                                return cmsPage.uid !== catalog.homepage.current.uid &&\r\n                                    currentCatalog.catalogId !== pageCatalog.catalogId;\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ HomepageService.prototype.compareCatalogVersions = function (catalogAUuid, catalogBUuid, compare) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, catalogVersionA, catalogVersionB;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all([\r\n                            this.catalogService.getCatalogVersionByUuid(catalogAUuid),\r\n                            this.catalogService.getCatalogVersionByUuid(catalogBUuid)\r\n                        ])];\r\n                    case 1:\r\n                        _a = _b.sent(), catalogVersionA = _a[0], catalogVersionB = _a[1];\r\n                        return [2 /*return*/, compare(catalogVersionA, catalogVersionB)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ HomepageService.prototype.isHomepageType = function (cmsPage, uriContext, type) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var homepageType;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getHomepageType(cmsPage, uriContext)];\r\n                    case 1:\r\n                        homepageType = _a.sent();\r\n                        return [2 /*return*/, homepageType === type];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ HomepageService.prototype.buildHomepageDetailsForContext = function (homepageForCurrentCatalog, uriContext) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var homepageCatalogVersion, homepageComesFromParent, currentCatalogVersion;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!homepageForCurrentCatalog) {\r\n                            return [2 /*return*/, {\r\n                                    status: CatalogHomepageDetailsStatus.NO_HOMEPAGE\r\n                                }];\r\n                        }\r\n                        return [4 /*yield*/, this.catalogService.getCatalogVersionByUuid(homepageForCurrentCatalog.catalogVersionUuid)];\r\n                    case 1:\r\n                        homepageCatalogVersion = _a.sent();\r\n                        homepageComesFromParent = homepageCatalogVersion.catalogId !== uriContext[CONTEXT_CATALOG];\r\n                        return [4 /*yield*/, this.catalogService.getContentCatalogVersion(uriContext)];\r\n                    case 2:\r\n                        currentCatalogVersion = _a.sent();\r\n                        if (homepageComesFromParent) {\r\n                            return [2 /*return*/, {\r\n                                    status: CatalogHomepageDetailsStatus.PARENT,\r\n                                    parentCatalogName: homepageCatalogVersion.catalogName,\r\n                                    parentCatalogVersion: homepageCatalogVersion.version,\r\n                                    targetCatalogName: currentCatalogVersion.catalogName,\r\n                                    targetCatalogVersion: currentCatalogVersion.version\r\n                                }];\r\n                        }\r\n                        return [2 /*return*/, {\r\n                                status: CatalogHomepageDetailsStatus.LOCAL,\r\n                                currentHomepageName: homepageForCurrentCatalog.name,\r\n                                currentHomepageUid: homepageForCurrentCatalog.uid,\r\n                                oldHomepageUid: homepageCatalogVersion.homepage\r\n                                    ? homepageCatalogVersion.homepage.old\r\n                                        ? homepageCatalogVersion.homepage.old.uid\r\n                                        : null\r\n                                    : null\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ HomepageService = __decorate([\r\n        SeDowngradeService(),\r\n        __metadata(\"design:paramtypes\", [ICatalogService,\r\n            SystemEventService])\r\n    ], /* @ngInject */ HomepageService);\r\n    return /* @ngInject */ HomepageService;\r\n}());\r\nexport { /* @ngInject */ HomepageService };\r\n//# sourceMappingURL=HomepageService.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"HomepageService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/pageDisplayConditions/HomepageService.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/services/pageDisplayConditions/HomepageService.d.ts","writeByteOrderMark":false,"text":"import { ICMSPage } from 'cmscommons';\r\nimport { EventMessageData, ICatalogService, IUriContext, SystemEventService, TypedMap } from 'smarteditcommons';\r\n/**\r\n * Expose through angular the event for sendEventShowReplaceParentHomePageInfo()\r\n */\r\nexport declare const CMS_EVENT_SHOW_REPLACE_PARENT_HOMEPAGE_INFO = \"CMS_EVENT_SHOW_REPLACE_PARENT_HOMEPAGE_INFO\";\r\n/** @internal */\r\n/**\r\n * Expose through angular the event for sendEventHideReplaceParentHomePageInfo()\r\n */\r\nexport declare const CMS_EVENT_HIDE_REPLACE_PARENT_HOMEPAGE_INFO = \"CMS_EVENT_HIDE_REPLACE_PARENT_HOMEPAGE_INFO\";\r\n/** @internal */\r\n/**\r\n * !NGDOC\r\n * Status of a ICatalogHomepageDetails\r\n */\r\nexport declare enum CatalogHomepageDetailsStatus {\r\n    PENDING = \"PENDING\",\r\n    NO_HOMEPAGE = \"NO_HOMEPAGE\",\r\n    LOCAL = \"LOCAL\",\r\n    OLD = \"OLD\",\r\n    PARENT = \"PARENT\"\r\n}\r\n/**\r\n * ICatalogHomepageDetails is a mashup of a bunch of different values needed in the UI\r\n * Since the logic is a big insane, to try and keep the components clean we dump all the crap into\r\n * this 1 object.\r\n * Depending on the status, some of the other fields will be filled, but not others\r\n */\r\nexport interface ICatalogHomepageDetails {\r\n    status: CatalogHomepageDetailsStatus;\r\n    parentCatalogName?: TypedMap<string>;\r\n    parentCatalogVersion?: string;\r\n    targetCatalogName?: TypedMap<string>;\r\n    targetCatalogVersion?: string;\r\n    currentHomepageName?: string;\r\n    currentHomepageUid?: string;\r\n    oldHomepageUid?: string;\r\n}\r\n/**\r\n * An enum type representing the homepage type of a cms page.\r\n */\r\nexport declare enum HomepageType {\r\n    /**\r\n     * An enum value of type HomepageType describing if a cms page was previously a homepage.\r\n     */\r\n    OLD = \"old\",\r\n    /**\r\n     * An enum value of type HomepageType describing if a cms page is a current homepage.\r\n     */\r\n    CURRENT = \"current\",\r\n    /**\r\n     * An enum value of type HomepageType describing if a cms page is a fallback homepage.\r\n     */\r\n    FALLBACK = \"fallback\"\r\n}\r\n/**\r\n * This service is used to determine if a cms page is a current, a previous homepage, or neither.\r\n */\r\nexport declare class HomepageService {\r\n    private catalogService;\r\n    private systemEventService;\r\n    constructor(catalogService: ICatalogService, systemEventService: SystemEventService);\r\n    /**\r\n     * Send an event to show info to the user about replacing a homepage from a parent catalog.\r\n     */\r\n    sendEventHideReplaceParentHomePageInfo(data?: EventMessageData): void;\r\n    /**\r\n     * Send an event to hide the info to the user about replacing a homepage from a parent catalog.\r\n     */\r\n    sendEventShowReplaceParentHomePageInfo(data?: EventMessageData): void;\r\n    /**\r\n     * getHomepageDetailsForContext is a mashup of logic needed for the frontend\r\n     * Both the pageDisplayConditions and newPageDisplayConditions components use it for various\r\n     * ui related things, like enable/disable of the homepage checkbox, or show messages on the UI\r\n     *\r\n     * Given a uriContext, basically there are 3 mains return types, mashed into 1 typescript type\r\n     *\r\n     * 1) CatalogHomepageDetailsStatus.NO_HOMEPAGE\r\n     * This means that the given uriContext has no homepage whatsoever. This probably indicates an issue with the data.\r\n     *\r\n     * 2) CatalogHomepageDetailsStatus.PARENT\r\n     * This means that the current homepage for the given uriContext is inherited from a parent catalog.\r\n     * In this case, the returned ICatalogHomepageDetails contains the parentCatalogName, parentCatalogVersion,\r\n     * targetCatalogName, and targetCatalogVersion,\r\n     *\r\n     * 3) CatalogHomepageDetailsStatus.LOCAL\r\n     * This means that the current homepage for the given uriContext belongs to the catalog of that uriContext.\r\n     * In this case, the returned ICatalogHomepageDetails contains the currentHomepageName, currentHomepageUid,\r\n     * and oldHomepageUid\r\n     *\r\n     * @param uriContext A IUriContext object\r\n     *\r\n     * @returns ICatalogHomepageDetails with one of the 3 options as indicated above\r\n     */\r\n    getHomepageDetailsForContext(uriContext: IUriContext): Promise<ICatalogHomepageDetails>;\r\n    /**\r\n     * This method checks if the cms page is a current homepage.\r\n     *\r\n     * @param cmsPage The cms page.\r\n     * @param uriContext The uriContext.\r\n     *\r\n     * @returns A promise resolved with a boolean indicating whether the cms page is the current homepage.\r\n     */\r\n    isCurrentHomepage(cmsPage: ICMSPage, uriContext: IUriContext): Promise<boolean>;\r\n    /**\r\n     * This method checks if the cms page is a current homepage.\r\n     *\r\n     * @param cmsPage The cms page.\r\n     * @param uriContext The uriContext.\r\n     *\r\n     * @returns A promise resolved with a boolean indicating whether the cms page is a previous homepage.\r\n     */\r\n    isOldHomepage(cmsPage: ICMSPage, uriContext: IUriContext): Promise<boolean>;\r\n    /**\r\n     * This method returns the homepage type of a cms page.\r\n     *\r\n     * @param cmsPage The cms page.\r\n     * @param uriContext The uriContext.\r\n     *\r\n     * @returns A promise resolved with a enum type indicating whether the cms page is a current, previous homepage or null if neither.\r\n     */\r\n    getHomepageType(cmsPage: ICMSPage, uriContext: IUriContext): Promise<HomepageType>;\r\n    /**\r\n     * @param uriContext The uriContext.\r\n     *\r\n     * @returns A promise resolved to true when the catalog has a fallback homepage.\r\n     */\r\n    hasFallbackHomePage(uriContext: IUriContext): Promise<boolean>;\r\n    /**\r\n     * @param cmsPage The cms page.\r\n     * @param uriContext The uriContext.\r\n     *\r\n     * @returns A promise resolved to true when the page can be synced.\r\n     */\r\n    canSyncHomepage(cmsPage: ICMSPage, uriContext: IUriContext): Promise<boolean>;\r\n    private compareCatalogVersions;\r\n    private isHomepageType;\r\n    private buildHomepageDetailsForContext;\r\n}\r\n"}}

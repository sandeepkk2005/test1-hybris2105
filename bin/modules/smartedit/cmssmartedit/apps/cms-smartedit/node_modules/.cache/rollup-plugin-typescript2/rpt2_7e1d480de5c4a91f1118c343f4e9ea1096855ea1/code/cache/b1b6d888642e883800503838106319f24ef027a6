{"code":"import { __awaiter, __decorate, __extends, __generator, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { cmsitemsEvictionTag, slotEvictionTag, IPageContentSlotsComponentsRestService, CmsitemsRestService, PAGE_CONTEXT_CATALOG, PAGE_CONTEXT_CATALOG_VERSION } from 'cmscommons';\r\nimport { cloneDeep } from 'lodash';\r\nimport { pageChangeEvictionTag, rarelyChangingContent, Cached, GatewayProxied, InvalidateCache, IPageInfoService, IRestServiceFactory, SeDowngradeService, PAGE_CONTEXT_SITE_ID } from 'smarteditcommons';\r\nvar /* @ngInject */ PageContentSlotsComponentsRestService = /** @class */ (function (_super) {\r\n    __extends(/* @ngInject */ PageContentSlotsComponentsRestService, _super);\r\n    function /* @ngInject */ PageContentSlotsComponentsRestService(restServiceFactory, pageInfoService, cmsitemsRestService) {\r\n        var _this = _super.call(this) || this;\r\n        _this.pageInfoService = pageInfoService;\r\n        _this.cmsitemsRestService = cmsitemsRestService;\r\n        var contentSlotContainerResourceURI = \"/cmswebservices/v1/sites/\" + PAGE_CONTEXT_SITE_ID + \"/catalogs/\" + PAGE_CONTEXT_CATALOG + \"/versions/\" + PAGE_CONTEXT_CATALOG_VERSION + \"/pagescontentslotscomponents?pageId=:pageId\";\r\n        _this.pagesContentSlotsComponentsRestService = restServiceFactory.get(contentSlotContainerResourceURI);\r\n        return _this;\r\n    }\r\n    /* @ngInject */ PageContentSlotsComponentsRestService.prototype.clearCache = function () {\r\n        return;\r\n    };\r\n    /* @ngInject */ PageContentSlotsComponentsRestService.prototype.getComponentsForSlot = function (slotId) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var pageUID, slotsToComponentsMap;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.pageInfoService.getPageUID()];\r\n                    case 1:\r\n                        pageUID = _a.sent();\r\n                        return [4 /*yield*/, this.getSlotsToComponentsMapForPageUid(pageUID)];\r\n                    case 2:\r\n                        slotsToComponentsMap = _a.sent();\r\n                        return [2 /*return*/, slotsToComponentsMap[slotId] || []];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns a list of Page Content Slots Components associated to a page.\r\n     *\r\n     * @param pageUid The uid of the page to retrieve the content slots to components map.\r\n     */\r\n    /* @ngInject */ PageContentSlotsComponentsRestService.prototype.getSlotsToComponentsMapForPageUid = function (pageUid) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getCachedSlotsToComponentsMapForPageUid(pageUid)];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        return [2 /*return*/, cloneDeep(response)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ PageContentSlotsComponentsRestService.prototype.getCachedSlotsToComponentsMapForPageUid = function (pageUid) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var pageContentSlotComponentList, componentUuids, components, uuidToComponentMap, allSlotsToComponentsMap;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.pagesContentSlotsComponentsRestService.get({\r\n                            pageId: pageUid\r\n                        })];\r\n                    case 1:\r\n                        pageContentSlotComponentList = (_a.sent()).pageContentSlotComponentList;\r\n                        componentUuids = this.mapPageContentSlotComponentListToComponentUuids(pageContentSlotComponentList);\r\n                        return [4 /*yield*/, this.cmsitemsRestService.getByIds(componentUuids, 'DEFAULT')];\r\n                    case 2:\r\n                        components = (_a.sent()).response;\r\n                        uuidToComponentMap = this.createUuidToComponentMap(components);\r\n                        allSlotsToComponentsMap = this.createSlotUuidToComponentMap(pageContentSlotComponentList, uuidToComponentMap);\r\n                        return [2 /*return*/, allSlotsToComponentsMap];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ PageContentSlotsComponentsRestService.prototype.createSlotUuidToComponentMap = function (componentList, uuidToComponentMap) {\r\n        return componentList.reduce(function (map, component) {\r\n            map[component.slotId] = map[component.slotId] || [];\r\n            if (uuidToComponentMap[component.componentUuid]) {\r\n                map[component.slotId].push(uuidToComponentMap[component.componentUuid]);\r\n            }\r\n            return map;\r\n        }, {});\r\n    };\r\n    /* @ngInject */ PageContentSlotsComponentsRestService.prototype.mapPageContentSlotComponentListToComponentUuids = function (componentList) {\r\n        var componentUuids = componentList.map(function (pageContentSlotComponent) {\r\n            return pageContentSlotComponent.componentUuid;\r\n        });\r\n        componentUuids = Array.from(new Set(componentUuids)); // remove duplicates\r\n        return componentUuids;\r\n    };\r\n    /* @ngInject */ PageContentSlotsComponentsRestService.prototype.createUuidToComponentMap = function (components) {\r\n        return (components || []).reduce(function (map, component) {\r\n            map[component.uuid] = component;\r\n            return map;\r\n        }, {});\r\n    };\r\n    __decorate([\r\n        InvalidateCache(slotEvictionTag),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", []),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], /* @ngInject */ PageContentSlotsComponentsRestService.prototype, \"clearCache\", null);\r\n    __decorate([\r\n        Cached({\r\n            actions: [rarelyChangingContent],\r\n            tags: [cmsitemsEvictionTag, pageChangeEvictionTag, slotEvictionTag]\r\n        }),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], /* @ngInject */ PageContentSlotsComponentsRestService.prototype, \"getCachedSlotsToComponentsMapForPageUid\", null);\r\n    /* @ngInject */ PageContentSlotsComponentsRestService = __decorate([\r\n        GatewayProxied('clearCache', 'getSlotsToComponentsMapForPageUid'),\r\n        SeDowngradeService(IPageContentSlotsComponentsRestService),\r\n        __metadata(\"design:paramtypes\", [IRestServiceFactory,\r\n            IPageInfoService,\r\n            CmsitemsRestService])\r\n    ], /* @ngInject */ PageContentSlotsComponentsRestService);\r\n    return /* @ngInject */ PageContentSlotsComponentsRestService;\r\n}(IPageContentSlotsComponentsRestService));\r\nexport { /* @ngInject */ PageContentSlotsComponentsRestService };\r\n//# sourceMappingURL=PageContentSlotsComponentsRestServiceInner.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types/lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"PageContentSlotsComponentsRestServiceInner.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/dao/pageContentSlotsComponentsRestService/PageContentSlotsComponentsRestServiceInner.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit/dao/pageContentSlotsComponentsRestService/PageContentSlotsComponentsRestServiceInner.d.ts","writeByteOrderMark":false,"text":"import { ICMSComponent, IPageContentSlotsComponentsRestService, CmsitemsRestService } from 'cmscommons';\r\nimport { IPageInfoService, IRestServiceFactory, TypedMap } from 'smarteditcommons';\r\nexport interface PageContentSlotComponent {\r\n    pageId: string;\r\n    slotId: string;\r\n    componentId: string;\r\n    componentUuid: string;\r\n    position: number;\r\n}\r\nexport interface PageContentSlotComponentResponse {\r\n    pageContentSlotComponentList: PageContentSlotComponent[];\r\n}\r\nexport declare class PageContentSlotsComponentsRestService extends IPageContentSlotsComponentsRestService {\r\n    private pageInfoService;\r\n    private cmsitemsRestService;\r\n    private pagesContentSlotsComponentsRestService;\r\n    constructor(restServiceFactory: IRestServiceFactory, pageInfoService: IPageInfoService, cmsitemsRestService: CmsitemsRestService);\r\n    clearCache(): void;\r\n    getComponentsForSlot(slotId: string): Promise<ICMSComponent[]>;\r\n    /**\r\n     * Returns a list of Page Content Slots Components associated to a page.\r\n     *\r\n     * @param pageUid The uid of the page to retrieve the content slots to components map.\r\n     */\r\n    getSlotsToComponentsMapForPageUid(pageUid: string): Promise<TypedMap<ICMSComponent[]>>;\r\n    private getCachedSlotsToComponentsMapForPageUid;\r\n    private createSlotUuidToComponentMap;\r\n    private mapPageContentSlotComponentListToComponentUuids;\r\n    private createUuidToComponentMap;\r\n}\r\n"}}

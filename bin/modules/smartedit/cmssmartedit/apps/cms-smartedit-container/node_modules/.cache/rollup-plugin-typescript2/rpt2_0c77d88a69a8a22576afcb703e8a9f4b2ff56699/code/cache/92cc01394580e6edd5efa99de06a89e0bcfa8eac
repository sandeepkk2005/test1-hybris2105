{"code":"import { __awaiter, __decorate, __generator, __metadata } from \"tslib\";\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\r\nimport { CMSModesService } from 'cmscommons';\r\nimport { IPerspectiveService, LogService, SeDowngradeComponent } from 'smarteditcommons';\r\nimport { PageVersioningService } from '../../services';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"VersionsPanelComponent\", {\r\n    selector: 'se-versions-panel',\r\n    template: \"<div class=\\\"se-toolbar-menu-content--wrapper\\\"><div class=\\\"se-toolbar-menu-content__header\\\"><div class=\\\"se-toolbar-menu-content__header-title\\\" translate=\\\"se.cms.actionitem.page.versions\\\"></div><button class=\\\"se-versions-panel__manage-btn fd-button fd-button--compact\\\" *ngIf=\\\"showManageButton\\\" (click)=\\\"switchToVersioningMode()\\\" translate=\\\"se.cms.toolbaritem.versioning.manageversions.name\\\"></button></div><div class=\\\"se-versions-toolbar-menu-content__body\\\" [ngClass]=\\\"{ 'se-versions-toolbar-menu-content__body--narrow': showManageButton }\\\"><se-versions-search [versionsFoundCount]=\\\"versionsFound\\\" [showSearchControls]=\\\"pageHasVersions()\\\" (searchTermChange)=\\\"onSearchTermChanged($event)\\\"></se-versions-search><div><se-infinite-scrolling class=\\\"se-versions-panel__infinite-scroll\\\" *ngIf=\\\"pageHasVersionsOrIsLoading()\\\" [pageSize]=\\\"10\\\" [mask]=\\\"searchTerm\\\" [fetchPage]=\\\"fetchPageOfVersions\\\" (itemsChange)=\\\"onVersionItemsLoaded($event)\\\"><div *ngFor=\\\"let item of versionItems; let isLast = last\\\"><se-version-item [ngClass]=\\\"{ 'se-version-item--last': isLast }\\\" [pageVersion]=\\\"item\\\"></se-version-item></div></se-infinite-scrolling><div class=\\\"se-versions-panel__empty-list\\\" *ngIf=\\\"!pageHasVersionsOrIsLoading()\\\"><img src=\\\"static-resources/images/emptyVersions.svg\\\" alt=\\\"no versions\\\"/> <span class=\\\"se-versions-panel__no-versions-message\\\" translate=\\\"se.cms.toolbaritem.versioning.noversionsfound\\\"></span> <a class=\\\"se-versions-panel__manage-link fd-link\\\" *ngIf=\\\"showManageLink\\\" (click)=\\\"switchToVersioningMode()\\\" translate=\\\"se.cms.toolbaritem.versioning.manageversionslink.name\\\"></a></div></div></div></div>\",\r\n    styles: [\".se-versions-panel .se-toolbar-menu-content__header{padding:20px;display:flex;flex-direction:row;align-items:center;justify-content:space-between;border-bottom:1px solid #d9d9d9;height:53px;padding-top:15px;height:48px}.se-versions-panel .se-toolbar-menu-content__header:first-child{font-size:1.1428571429rem;line-height:1.25;font-weight:400;color:#32363a}.se-versions-panel .se-versions-toolbar-menu-content__body .se-infinite-scrolling__container{width:340px;max-height:350px;overflow-y:auto;margin-bottom:8px}.se-versions-panel .se-versions-toolbar-menu-content__body--narrow .se-infinite-scrolling__container{width:300px}.se-versions-panel__empty-list{display:flex;flex-direction:column;align-items:center;color:#51555a;width:280px;padding:20px}.se-versions-panel__no-versions-message{padding:8px 0 4px}.se-versions-panel__manage-link{margin-bottom:20px;cursor:pointer}.se-versions-panel__manage-link:hover{text-decoration:none}\"],\r\n    encapsulation: ViewEncapsulation.None,\r\n    host: {\r\n        '[class.se-versions-panel]': 'true'\r\n    },\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n});\r\nvar /* @ngInject */ VersionsPanelComponent = /** @class */ (function () {\r\n    function /* @ngInject */ VersionsPanelComponent(pageVersioningService, perspectiveService, logService, cdr) {\r\n        var _this = this;\r\n        this.pageVersioningService = pageVersioningService;\r\n        this.perspectiveService = perspectiveService;\r\n        this.logService = logService;\r\n        this.cdr = cdr;\r\n        this.switchMode = new EventEmitter();\r\n        this.searchTerm = '';\r\n        this.totalPageVersions = 0;\r\n        this.isLoading = true;\r\n        this.VERSIONING_MODE_KEY = CMSModesService.VERSIONING_PERSPECTIVE_KEY;\r\n        this.fetchPageOfVersions = function (search, pageSize, currentPage) { return _this.loadVersions(search, pageSize, currentPage); };\r\n    }\r\n    /* @ngInject */ VersionsPanelComponent.prototype.ngOnInit = function () {\r\n        this.showManageLink = this.canShowManageLink();\r\n    };\r\n    /* @ngInject */ VersionsPanelComponent.prototype.onVersionItemsLoaded = function (versionItems) {\r\n        this.versionItems = versionItems;\r\n    };\r\n    /* @ngInject */ VersionsPanelComponent.prototype.onSearchTermChanged = function (newSearchTerm) {\r\n        this.searchTerm = newSearchTerm;\r\n    };\r\n    /* @ngInject */ VersionsPanelComponent.prototype.switchToVersioningMode = function () {\r\n        this.perspectiveService.switchTo(this.VERSIONING_MODE_KEY);\r\n        this.switchMode.emit();\r\n    };\r\n    /* @ngInject */ VersionsPanelComponent.prototype.pageHasVersions = function () {\r\n        return this.totalPageVersions > 0;\r\n    };\r\n    /* @ngInject */ VersionsPanelComponent.prototype.pageHasVersionsOrIsLoading = function () {\r\n        return this.pageHasVersions() || this.isLoading;\r\n    };\r\n    /* @ngInject */ VersionsPanelComponent.prototype.canShowManageButton = function () {\r\n        return this.showManageLink && this.pageHasVersions();\r\n    };\r\n    /* @ngInject */ VersionsPanelComponent.prototype.canShowManageLink = function () {\r\n        var activePerspective = this.perspectiveService.getActivePerspective();\r\n        return activePerspective && activePerspective.key !== this.VERSIONING_MODE_KEY;\r\n    };\r\n    /* @ngInject */ VersionsPanelComponent.prototype.loadVersions = function (mask, pageSize, currentPage) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var page, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _b.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, this.pageVersioningService.findPageVersions({\r\n                                pageUuid: this.pageUuid,\r\n                                currentPage: currentPage,\r\n                                mask: mask,\r\n                                pageSize: pageSize\r\n                            })];\r\n                    case 1:\r\n                        page = _b.sent();\r\n                        this.versionsFound = page.pagination.totalCount;\r\n                        if (this.isLoading) {\r\n                            this.isLoading = false;\r\n                            this.totalPageVersions = this.versionsFound;\r\n                            this.showManageButton = this.canShowManageButton();\r\n                        }\r\n                        this.cdr.detectChanges();\r\n                        return [2 /*return*/, page];\r\n                    case 2:\r\n                        _a = _b.sent();\r\n                        this.logService.error(\"Cannot find page versions for page \" + this.pageUuid + \".\");\r\n                        return [2 /*return*/, null];\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], /* @ngInject */ VersionsPanelComponent.prototype, \"pageUuid\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", Object)\r\n    ], /* @ngInject */ VersionsPanelComponent.prototype, \"switchMode\", void 0);\r\n    /* @ngInject */ VersionsPanelComponent = __decorate([\r\n        SeDowngradeComponent(),\r\n        Component({\r\n            selector: 'se-versions-panel',\r\n            template: \"<div class=\\\"se-toolbar-menu-content--wrapper\\\"><div class=\\\"se-toolbar-menu-content__header\\\"><div class=\\\"se-toolbar-menu-content__header-title\\\" translate=\\\"se.cms.actionitem.page.versions\\\"></div><button class=\\\"se-versions-panel__manage-btn fd-button fd-button--compact\\\" *ngIf=\\\"showManageButton\\\" (click)=\\\"switchToVersioningMode()\\\" translate=\\\"se.cms.toolbaritem.versioning.manageversions.name\\\"></button></div><div class=\\\"se-versions-toolbar-menu-content__body\\\" [ngClass]=\\\"{ 'se-versions-toolbar-menu-content__body--narrow': showManageButton }\\\"><se-versions-search [versionsFoundCount]=\\\"versionsFound\\\" [showSearchControls]=\\\"pageHasVersions()\\\" (searchTermChange)=\\\"onSearchTermChanged($event)\\\"></se-versions-search><div><se-infinite-scrolling class=\\\"se-versions-panel__infinite-scroll\\\" *ngIf=\\\"pageHasVersionsOrIsLoading()\\\" [pageSize]=\\\"10\\\" [mask]=\\\"searchTerm\\\" [fetchPage]=\\\"fetchPageOfVersions\\\" (itemsChange)=\\\"onVersionItemsLoaded($event)\\\"><div *ngFor=\\\"let item of versionItems; let isLast = last\\\"><se-version-item [ngClass]=\\\"{ 'se-version-item--last': isLast }\\\" [pageVersion]=\\\"item\\\"></se-version-item></div></se-infinite-scrolling><div class=\\\"se-versions-panel__empty-list\\\" *ngIf=\\\"!pageHasVersionsOrIsLoading()\\\"><img src=\\\"static-resources/images/emptyVersions.svg\\\" alt=\\\"no versions\\\"/> <span class=\\\"se-versions-panel__no-versions-message\\\" translate=\\\"se.cms.toolbaritem.versioning.noversionsfound\\\"></span> <a class=\\\"se-versions-panel__manage-link fd-link\\\" *ngIf=\\\"showManageLink\\\" (click)=\\\"switchToVersioningMode()\\\" translate=\\\"se.cms.toolbaritem.versioning.manageversionslink.name\\\"></a></div></div></div></div>\",\r\n            styles: [\".se-versions-panel .se-toolbar-menu-content__header{padding:20px;display:flex;flex-direction:row;align-items:center;justify-content:space-between;border-bottom:1px solid #d9d9d9;height:53px;padding-top:15px;height:48px}.se-versions-panel .se-toolbar-menu-content__header:first-child{font-size:1.1428571429rem;line-height:1.25;font-weight:400;color:#32363a}.se-versions-panel .se-versions-toolbar-menu-content__body .se-infinite-scrolling__container{width:340px;max-height:350px;overflow-y:auto;margin-bottom:8px}.se-versions-panel .se-versions-toolbar-menu-content__body--narrow .se-infinite-scrolling__container{width:300px}.se-versions-panel__empty-list{display:flex;flex-direction:column;align-items:center;color:#51555a;width:280px;padding:20px}.se-versions-panel__no-versions-message{padding:8px 0 4px}.se-versions-panel__manage-link{margin-bottom:20px;cursor:pointer}.se-versions-panel__manage-link:hover{text-decoration:none}\"],\r\n            encapsulation: ViewEncapsulation.None,\r\n            host: {\r\n                '[class.se-versions-panel]': 'true'\r\n            },\r\n            changeDetection: ChangeDetectionStrategy.OnPush\r\n        }),\r\n        __metadata(\"design:paramtypes\", [PageVersioningService,\r\n            IPerspectiveService,\r\n            LogService,\r\n            ChangeDetectorRef])\r\n    ], /* @ngInject */ VersionsPanelComponent);\r\n    return /* @ngInject */ VersionsPanelComponent;\r\n}());\r\nexport { /* @ngInject */ VersionsPanelComponent };\r\n//# sourceMappingURL=VersionsPanelComponent.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/versioning/services/index.ts"],"map":"{\"version\":3,\"file\":\"VersionsPanelComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/components/versioning/components/versionsPanel/VersionsPanelComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/components/versioning/components/versionsPanel/VersionsPanelComponent.d.ts","writeByteOrderMark":false,"text":"import { ChangeDetectorRef, EventEmitter, OnInit } from '@angular/core';\r\nimport { FetchPageStrategy, IPerspectiveService, LogService } from 'smarteditcommons';\r\nimport { IPageVersion, PageVersioningService } from '../../services';\r\nexport declare class VersionsPanelComponent implements OnInit {\r\n    private pageVersioningService;\r\n    private perspectiveService;\r\n    private logService;\r\n    private cdr;\r\n    pageUuid: string;\r\n    switchMode: EventEmitter<boolean>;\r\n    searchTerm: string;\r\n    versionsFound: number;\r\n    versionItems: IPageVersion[];\r\n    showManageButton: boolean;\r\n    showManageLink: boolean;\r\n    private totalPageVersions;\r\n    private isLoading;\r\n    private VERSIONING_MODE_KEY;\r\n    constructor(pageVersioningService: PageVersioningService, perspectiveService: IPerspectiveService, logService: LogService, cdr: ChangeDetectorRef);\r\n    ngOnInit(): void;\r\n    onVersionItemsLoaded(versionItems: IPageVersion[]): void;\r\n    onSearchTermChanged(newSearchTerm: string): void;\r\n    switchToVersioningMode(): void;\r\n    fetchPageOfVersions: FetchPageStrategy<IPageVersion>;\r\n    pageHasVersions(): boolean;\r\n    pageHasVersionsOrIsLoading(): boolean;\r\n    private canShowManageButton;\r\n    private canShowManageLink;\r\n    private loadVersions;\r\n}\r\n"}}

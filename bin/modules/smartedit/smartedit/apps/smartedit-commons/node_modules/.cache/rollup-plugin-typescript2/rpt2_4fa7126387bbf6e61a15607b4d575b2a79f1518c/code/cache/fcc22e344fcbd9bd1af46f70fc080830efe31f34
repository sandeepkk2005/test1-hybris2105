{"code":"import { __decorate, __metadata } from \"tslib\";\r\nimport { Component, Input } from '@angular/core';\r\nimport { TreeDragAndDropService } from './TreeDragAndDropService';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"TreeNodeComponent\", {\r\n    selector: 'se-tree-node',\r\n    template: \"<ol class=\\\"se-tree-node__ol angular-ui-tree-nodes\\\" cdkDropList (cdkDropListDropped)=\\\"onDrop($event)\\\" [cdkDropListData]=\\\"source\\\" [cdkDropListDisabled]=\\\"isDisabled\\\"><li *ngFor=\\\"let node of source\\\" cdkDrag [cdkDragData]=\\\"node\\\" class=\\\"angular-ui-tree-node se-tree-node__li\\\"><se-tree-node-renderer [node]=\\\"node\\\"></se-tree-node-renderer></li></ol>\"\r\n});\r\nvar TreeNodeComponent = /** @class */ (function () {\r\n    function TreeNodeComponent(treeDragAndDropService) {\r\n        this.treeDragAndDropService = treeDragAndDropService;\r\n    }\r\n    Object.defineProperty(TreeNodeComponent.prototype, \"isDisabled\", {\r\n        get: function () {\r\n            return !this.treeDragAndDropService.isDragEnabled;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    TreeNodeComponent.prototype.onDrop = function (event) {\r\n        this.treeDragAndDropService.handleDrop(event);\r\n    };\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Array)\r\n    ], TreeNodeComponent.prototype, \"source\", void 0);\r\n    TreeNodeComponent = __decorate([\r\n        Component({\r\n            selector: 'se-tree-node',\r\n            template: \"<ol class=\\\"se-tree-node__ol angular-ui-tree-nodes\\\" cdkDropList (cdkDropListDropped)=\\\"onDrop($event)\\\" [cdkDropListData]=\\\"source\\\" [cdkDropListDisabled]=\\\"isDisabled\\\"><li *ngFor=\\\"let node of source\\\" cdkDrag [cdkDragData]=\\\"node\\\" class=\\\"angular-ui-tree-node se-tree-node__li\\\"><se-tree-node-renderer [node]=\\\"node\\\"></se-tree-node-renderer></li></ol>\"\r\n        }),\r\n        __metadata(\"design:paramtypes\", [TreeDragAndDropService])\r\n    ], TreeNodeComponent);\r\n    return TreeNodeComponent;\r\n}());\r\nexport { TreeNodeComponent };\r\n//# sourceMappingURL=TreeNodeComponent.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/cdk@8.2.3_ecb0ad61817e3ede6ce462931a5e5041/node_modules/@angular/cdk/drag-drop.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/treeModule/TreeDragAndDropService.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/treeModule/types.ts"],"map":"{\"version\":3,\"file\":\"TreeNodeComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/treeModule/TreeNodeComponent.ts\"],\"names\":[],\"mappings\":\";AAEA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AACjD,OAAO,EAAE,sBAAsB,EAAE,MAAM,0BAA0B,CAAC;2EAGvD;IACP,QAAQ,EAAE,cAAc;IACxB,QAAQ,EAAE,uWAAuV;CACpW;AACD;IAGI,2BAAoB,sBAAoD;QAApD,2BAAsB,GAAtB,sBAAsB,CAA8B;IAAG,CAAC;IAE5E,sBAAW,yCAAU;aAArB;YACI,OAAO,CAAC,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC;QACtD,CAAC;;;OAAA;IAEM,kCAAM,GAAb,UAAc,KAAsC;QAChD,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAClD,CAAC;IAVQ;QAAR,KAAK,EAAE;;qDAA4B;IAD3B,iBAAiB;QAJ7B,SAAS,CAAC;YACP,QAAQ,EAAE,cAAc;YACxB,QAAQ,EAAE,uWAAuV;SACpW,CAAC;yCAI8C,sBAAsB;OAHzD,iBAAiB,CAY7B;IAAD,wBAAC;CAAA,AAZD,IAYC;SAZY,iBAAiB\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/components/treeModule/TreeNodeComponent.d.ts","writeByteOrderMark":false,"text":"import { CdkDragDrop } from '@angular/cdk/drag-drop';\r\nimport { TreeDragAndDropService } from './TreeDragAndDropService';\r\nimport { ITreeNodeItem } from './types';\r\nexport declare class TreeNodeComponent<T, D> {\r\n    private treeDragAndDropService;\r\n    source: ITreeNodeItem<T>[];\r\n    constructor(treeDragAndDropService: TreeDragAndDropService<T, D>);\r\n    get isDisabled(): boolean;\r\n    onDrop(event: CdkDragDrop<ITreeNodeItem<T>[]>): void;\r\n}\r\n"}}

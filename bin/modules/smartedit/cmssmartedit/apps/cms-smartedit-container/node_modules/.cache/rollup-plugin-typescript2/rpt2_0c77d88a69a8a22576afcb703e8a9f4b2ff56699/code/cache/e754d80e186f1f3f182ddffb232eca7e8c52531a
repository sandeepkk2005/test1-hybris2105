{"code":"import { __awaiter, __decorate, __generator, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { WORKFLOW_CREATED_EVENT, WORKFLOW_FINISHED_EVENT, DEFAULT_SYNCHRONIZATION_POLLING as SYNCHRONIZATION_POLLING } from 'cmscommons';\r\nimport { take } from 'rxjs/operators';\r\nimport { GENERIC_EDITOR_UNRELATED_VALIDATION_MESSAGES_EVENT, IAlertService, IConfirmationModalService, IPageInfoService, SeDowngradeService, SystemEventService, L10nPipe } from 'smarteditcommons';\r\nimport { GenericEditorModalService } from '../../../services/GenericEditorModalService';\r\nimport { WorkflowOperations, WorkflowStatus } from '../dtos';\r\nimport { WorkflowService } from './WorkflowService';\r\n/**\r\n * Used to manage workflows.\r\n */\r\nvar /* @ngInject */ WorkflowFacade = /** @class */ (function () {\r\n    function /* @ngInject */ WorkflowFacade(alertService, workflowService, confirmationModalService, genericEditorModalService, pageInfoService, systemEventService, l10nPipe) {\r\n        this.alertService = alertService;\r\n        this.workflowService = workflowService;\r\n        this.confirmationModalService = confirmationModalService;\r\n        this.genericEditorModalService = genericEditorModalService;\r\n        this.pageInfoService = pageInfoService;\r\n        this.systemEventService = systemEventService;\r\n        this.l10nPipe = l10nPipe;\r\n        this.VERSION_LABEL_QUALIFIER = 'versionLabel';\r\n        this.CREATE_VERSION_QUALIFIER = 'createVersion';\r\n        this.SYNC_POLLING_SPEED_PREFIX = 'workflow-';\r\n        this.startWorkflowStructureAttributes = [\r\n            {\r\n                cmsStructureType: 'EditableDropdown',\r\n                qualifier: 'templateCode',\r\n                i18nKey: 'se.cms.workflow.editor.template',\r\n                localized: false,\r\n                required: true,\r\n                idAttribute: 'code',\r\n                labelAttributes: ['name']\r\n            },\r\n            {\r\n                cmsStructureType: 'LongString',\r\n                qualifier: 'description',\r\n                i18nKey: 'se.cms.workflow.editor.description',\r\n                required: false\r\n            },\r\n            {\r\n                cmsStructureType: 'WorkflowCreateVersionField',\r\n                qualifier: this.CREATE_VERSION_QUALIFIER,\r\n                required: false\r\n            }\r\n        ];\r\n        this.editWorkflowStructureAttributes = [\r\n            {\r\n                cmsStructureType: 'LongString',\r\n                qualifier: 'description',\r\n                i18nKey: 'se.cms.workflow.editor.description',\r\n                required: false\r\n            }\r\n        ];\r\n        this.makeDecisionStructureAttributes = [\r\n            {\r\n                cmsStructureType: 'LongString',\r\n                qualifier: 'comment',\r\n                i18nKey: 'se.cms.workflow.editor.comment',\r\n                required: false\r\n            },\r\n            {\r\n                cmsStructureType: 'WorkflowCreateVersionField',\r\n                qualifier: this.CREATE_VERSION_QUALIFIER,\r\n                required: false\r\n            }\r\n        ];\r\n    }\r\n    /**\r\n     * Opens the generic editor form that is used to start a workflow.\r\n     *\r\n     * @returns A promise that resolves to a workflow instance.\r\n     */\r\n    /* @ngInject */ WorkflowFacade.prototype.startWorkflow = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var componentData, unregisterErrorListener;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getWorkflowDataForEditor()];\r\n                    case 1:\r\n                        componentData = _a.sent();\r\n                        unregisterErrorListener = this.systemEventService.subscribe(GENERIC_EDITOR_UNRELATED_VALIDATION_MESSAGES_EVENT, function (eventId, eventData) {\r\n                            return _this.handleUnrelatedValidationErrors(eventId, eventData);\r\n                        });\r\n                        try {\r\n                            return [2 /*return*/, this.genericEditorModalService.open(componentData, function (result) {\r\n                                    _this.alertService.showSuccess('se.cms.workflow.create.alert.success');\r\n                                    _this.systemEventService.publish(WORKFLOW_CREATED_EVENT);\r\n                                    _this.updateWorkflowTasksCount();\r\n                                    return result;\r\n                                })];\r\n                        }\r\n                        finally {\r\n                            unregisterErrorListener();\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Cancels the workflow. Shows the confirmation message before sending the request.\r\n     */\r\n    /* @ngInject */ WorkflowFacade.prototype.cancelWorflow = function (workflow) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.confirmationModalService.confirm({\r\n                            title: 'se.cms.workflow.cancel.confirmation.title',\r\n                            description: 'se.cms.workflow.cancel.confirmation.description'\r\n                        })];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, , 4, 5]);\r\n                        return [4 /*yield*/, this.workflowService.cancelWorflow(workflow)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        this.alertService.showSuccess('se.cms.workflow.cancel.alert.success');\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        this.systemEventService.publish(WORKFLOW_FINISHED_EVENT);\r\n                        this.updateWorkflowTasksCount();\r\n                        return [7 /*endfinally*/];\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Opens modal to edit workflow.\r\n     *\r\n     * Returns edited workflow.\r\n     */\r\n    /* @ngInject */ WorkflowFacade.prototype.editWorkflow = function (workflow) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var componentData;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getWorkflowDataForEditor(workflow)];\r\n                    case 1:\r\n                        componentData = _a.sent();\r\n                        return [2 /*return*/, this.genericEditorModalService.open(componentData, function (result) { return result; })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ WorkflowFacade.prototype.updateWorkflowTasksCount = function (count) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var tasksCount;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, (typeof count === 'undefined'\r\n                            ? this.getTotalNumberOfTasks()\r\n                            : count)];\r\n                    case 1:\r\n                        tasksCount = _a.sent();\r\n                        this.workflowService.updateWorkflowTasksCount(tasksCount);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns all actions for a given workflow code.\r\n     */\r\n    /* @ngInject */ WorkflowFacade.prototype.getAllActionsForWorkflow = function (workflowCode) {\r\n        return this.workflowService.getAllActionsForWorkflowCode(workflowCode);\r\n    };\r\n    /**\r\n     * Returns all active actions for a given workflow code and for the current user.\r\n     */\r\n    /* @ngInject */ WorkflowFacade.prototype.getActiveActionsForWorkflow = function (workflowCode) {\r\n        return this.workflowService.getActiveActionsForWorkflowCode(workflowCode);\r\n    };\r\n    /**\r\n     * Returns a paged list of comments for a given workflow and workflow action.\r\n     *\r\n     * Since the result is paginated and used by the InfiniteScrollingComponent, the list of comments is populated in the results property.\r\n     */\r\n    /* @ngInject */ WorkflowFacade.prototype.getCommentsForWorkflowAction = function (workflowCode, workflowActionCode, payload) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var page;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.workflowService.getCommentsForWorkflowAction(workflowCode, workflowActionCode, payload)];\r\n                    case 1:\r\n                        page = _a.sent();\r\n                        page.results = page.comments;\r\n                        delete page.comments;\r\n                        return [2 /*return*/, page];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns a paged list of active workflow inbox tasks for a given user.\r\n     */\r\n    /* @ngInject */ WorkflowFacade.prototype.getWorkflowInboxTasks = function (payload) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var page;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.workflowService.getWorkflowInboxTasks(payload)];\r\n                    case 1:\r\n                        page = _a.sent();\r\n                        page.results = page.tasks;\r\n                        delete page.tasks;\r\n                        return [2 /*return*/, page];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ WorkflowFacade.prototype.getTotalNumberOfTasks = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var page;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getWorkflowInboxTasks({ pageSize: 1, currentPage: 0 })];\r\n                    case 1:\r\n                        page = _a.sent();\r\n                        return [2 /*return*/, page.pagination.totalCount];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Makes a decision for a given workflow action and workflow decision.\r\n     */\r\n    /* @ngInject */ WorkflowFacade.prototype.makeDecision = function (workflowCode, workflowAction, decision) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var componentData, _a;\r\n            var _this = this;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = {};\r\n                        return [4 /*yield*/, this.l10nPipe.transform(decision.name).pipe(take(1)).toPromise()];\r\n                    case 1:\r\n                        componentData = (_a.title = _b.sent(),\r\n                            _a.structure = {\r\n                                attributes: this.makeDecisionStructureAttributes\r\n                            },\r\n                            _a.contentApi = this.workflowService.getResourceWorkflowOperationsURI(),\r\n                            _a.saveLabel = 'se.cms.workflow.editor.button.submit',\r\n                            _a.content = {\r\n                                operation: WorkflowOperations.MAKE_DECISION,\r\n                                workflowCode: workflowCode,\r\n                                actionCode: workflowAction.code,\r\n                                decisionCode: decision.code\r\n                            },\r\n                            _a.initialDirty = true,\r\n                            _a);\r\n                        return [2 /*return*/, this.genericEditorModalService.open(componentData, function (result) { return __awaiter(_this, void 0, void 0, function () {\r\n                                return __generator(this, function (_a) {\r\n                                    switch (_a.label) {\r\n                                        case 0: return [4 /*yield*/, this.confirmDecision(result.status, workflowAction, decision)];\r\n                                        case 1:\r\n                                            _a.sent();\r\n                                            return [2 /*return*/, result];\r\n                                    }\r\n                                });\r\n                            }); }, null)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ WorkflowFacade.prototype.confirmDecision = function (status, workflowAction, decision) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var currentPageUuid, _a, _b, _c, _d, tasksCount;\r\n            return __generator(this, function (_e) {\r\n                switch (_e.label) {\r\n                    case 0: return [4 /*yield*/, this.pageInfoService.getPageUUID()];\r\n                    case 1:\r\n                        currentPageUuid = _e.sent();\r\n                        return [4 /*yield*/, this.systemEventService.publish(SYNCHRONIZATION_POLLING.SPEED_UP, this.SYNC_POLLING_SPEED_PREFIX + currentPageUuid)];\r\n                    case 2:\r\n                        _e.sent();\r\n                        if (!(status.toLowerCase() === WorkflowStatus.FINISHED)) return [3 /*break*/, 3];\r\n                        this.alertService.showSuccess('se.cms.workflow.completed.alert.success');\r\n                        this.systemEventService.publishAsync(WORKFLOW_FINISHED_EVENT);\r\n                        return [3 /*break*/, 6];\r\n                    case 3:\r\n                        _b = (_a = this.alertService).showSuccess;\r\n                        _c = {\r\n                            message: 'se.cms.workflow.make.decision.success'\r\n                        };\r\n                        _d = {};\r\n                        return [4 /*yield*/, this.l10nPipe\r\n                                .transform(decision.name)\r\n                                .pipe(take(1))\r\n                                .toPromise()];\r\n                    case 4:\r\n                        _d.workflowDecisionName = _e.sent();\r\n                        return [4 /*yield*/, this.l10nPipe\r\n                                .transform(workflowAction.name)\r\n                                .pipe(take(1))\r\n                                .toPromise()];\r\n                    case 5:\r\n                        _b.apply(_a, [(_c.messagePlaceholders = (_d.workflowActionName = _e.sent(),\r\n                                _d),\r\n                                _c)]);\r\n                        _e.label = 6;\r\n                    case 6:\r\n                        // resets back to slow polling\r\n                        this.systemEventService.publish(SYNCHRONIZATION_POLLING.SLOW_DOWN, this.SYNC_POLLING_SPEED_PREFIX + currentPageUuid);\r\n                        return [4 /*yield*/, this.getTotalNumberOfTasks()];\r\n                    case 7:\r\n                        tasksCount = _e.sent();\r\n                        this.updateWorkflowTasksCount(tasksCount);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns the data for GenericEditorModalComponent.\r\n     *\r\n     * @param workflow the data object to populate generic editor.\r\n     * If workflow is null the generic editor displays fields to start a workflow,\r\n     * Otherwise, the generic editor displays fields to edit a workflow.\r\n     */\r\n    /* @ngInject */ WorkflowFacade.prototype.getWorkflowDataForEditor = function (workflow) {\r\n        if (workflow === void 0) { workflow = null; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var isStartingWorkflow, componentData;\r\n            return __generator(this, function (_a) {\r\n                isStartingWorkflow = workflow === null;\r\n                componentData = {\r\n                    title: null,\r\n                    contentApi: this.workflowService.getResourceWorkflowURI()\r\n                };\r\n                return [2 /*return*/, isStartingWorkflow\r\n                        ? this.getComponentDataForStartingWorkflow(componentData)\r\n                        : this.getComponentDataForNonStartingWorkflow(componentData, workflow.workflowCode)];\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ WorkflowFacade.prototype.getComponentDataForStartingWorkflow = function (componentData) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var templateCodeField, workflowTemplates, pageUuid;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        templateCodeField = this.startWorkflowStructureAttributes.find(function (structureAttribute) {\r\n                            return structureAttribute.qualifier === 'templateCode';\r\n                        });\r\n                        return [4 /*yield*/, this.workflowService.getWorkflowTemplates({})];\r\n                    case 1:\r\n                        workflowTemplates = _a.sent();\r\n                        templateCodeField.options = workflowTemplates;\r\n                        componentData.title = 'se.cms.workflow.editor.start.workflow.title';\r\n                        componentData.saveLabel = 'se.cms.workflow.editor.button.start';\r\n                        componentData.structure = {\r\n                            attributes: this.startWorkflowStructureAttributes\r\n                        };\r\n                        return [4 /*yield*/, this.pageInfoService.getPageUUID()];\r\n                    case 2:\r\n                        pageUuid = _a.sent();\r\n                        componentData.content = {\r\n                            attachments: [pageUuid]\r\n                        };\r\n                        return [2 /*return*/, componentData];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ WorkflowFacade.prototype.getComponentDataForNonStartingWorkflow = function (componentData, workflowCode) {\r\n        componentData.title = 'se.cms.workflow.editor.edit.workflow.title';\r\n        componentData.saveLabel = 'se.cms.workflow.editor.button.save';\r\n        componentData.structure = {\r\n            attributes: this.editWorkflowStructureAttributes\r\n        };\r\n        componentData.componentUuid = workflowCode;\r\n        componentData.componentType = 'workflow';\r\n        return componentData;\r\n    };\r\n    /**\r\n     * Handles errors that the generic editor didn't handle directly (for example, due to unknown qualifiers) in two\r\n     * ways:\r\n     * 1. Even though there are different attributes for createVersion and versionLabel, in the front-end they are handled\r\n     *    in the same widget, under the createVersion qualifier. However, when validating, the backend sends the error\r\n     *    directly to versionLabel. Thus, any time there's an error directed to versionLabel it needs to be assigned to\r\n     *    createVersion and republished for it to become visible.\r\n     * 2. Any other error will be displayed in an alert.\r\n     */\r\n    /* @ngInject */ WorkflowFacade.prototype.handleUnrelatedValidationErrors = function (key, eventData) {\r\n        var _this = this;\r\n        if (!eventData.sourceGenericEditorId) {\r\n            return;\r\n        }\r\n        var alertMessage = '';\r\n        var errorsToRepublish = [];\r\n        eventData.messages.forEach(function (error) {\r\n            if (error.subject === _this.VERSION_LABEL_QUALIFIER) {\r\n                error.subject = _this.CREATE_VERSION_QUALIFIER;\r\n                errorsToRepublish.push(error);\r\n            }\r\n            else {\r\n                alertMessage += error.message + ' ';\r\n            }\r\n        });\r\n        if (alertMessage) {\r\n            this.alertService.showDanger(alertMessage);\r\n        }\r\n        if (errorsToRepublish.length > 0) {\r\n            this.systemEventService.publishAsync(GENERIC_EDITOR_UNRELATED_VALIDATION_MESSAGES_EVENT, {\r\n                messages: errorsToRepublish\r\n            });\r\n        }\r\n    };\r\n    /* @ngInject */ WorkflowFacade = __decorate([\r\n        SeDowngradeService(),\r\n        __metadata(\"design:paramtypes\", [IAlertService,\r\n            WorkflowService,\r\n            IConfirmationModalService,\r\n            GenericEditorModalService,\r\n            IPageInfoService,\r\n            SystemEventService,\r\n            L10nPipe])\r\n    ], /* @ngInject */ WorkflowFacade);\r\n    return /* @ngInject */ WorkflowFacade;\r\n}());\r\nexport { /* @ngInject */ WorkflowFacade };\r\n//# sourceMappingURL=WorkflowFacade.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/rxjs@6.5.4/node_modules/rxjs/operators/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/services/components/GenericEditorModalComponent.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/services/GenericEditorModalService.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/workflow/dtos/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/workflow/services/WorkflowService.ts"],"map":"{\"version\":3,\"file\":\"WorkflowFacade.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/components/workflow/services/WorkflowFacade.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/components/workflow/services/WorkflowFacade.d.ts","writeByteOrderMark":false,"text":"import { IAlertService, IConfirmationModalService, IPageInfoService, Page, Pageable, SystemEventService, L10nPipe } from 'smarteditcommons';\r\nimport { GenericEditorModalService } from '../../../services/GenericEditorModalService';\r\nimport { Workflow, WorkflowAction, WorkflowActionComment, WorkflowDecision } from '../dtos';\r\nimport { WorkflowService, WorkflowTaskPage } from './WorkflowService';\r\n/**\r\n * Used to manage workflows.\r\n */\r\nexport declare class WorkflowFacade {\r\n    private alertService;\r\n    private workflowService;\r\n    private confirmationModalService;\r\n    private genericEditorModalService;\r\n    private pageInfoService;\r\n    private systemEventService;\r\n    private l10nPipe;\r\n    private VERSION_LABEL_QUALIFIER;\r\n    private CREATE_VERSION_QUALIFIER;\r\n    private SYNC_POLLING_SPEED_PREFIX;\r\n    private startWorkflowStructureAttributes;\r\n    private editWorkflowStructureAttributes;\r\n    private makeDecisionStructureAttributes;\r\n    constructor(alertService: IAlertService, workflowService: WorkflowService, confirmationModalService: IConfirmationModalService, genericEditorModalService: GenericEditorModalService, pageInfoService: IPageInfoService, systemEventService: SystemEventService, l10nPipe: L10nPipe);\r\n    /**\r\n     * Opens the generic editor form that is used to start a workflow.\r\n     *\r\n     * @returns A promise that resolves to a workflow instance.\r\n     */\r\n    startWorkflow(): Promise<Workflow>;\r\n    /**\r\n     * Cancels the workflow. Shows the confirmation message before sending the request.\r\n     */\r\n    cancelWorflow(workflow: Workflow): Promise<void>;\r\n    /**\r\n     * Opens modal to edit workflow.\r\n     *\r\n     * Returns edited workflow.\r\n     */\r\n    editWorkflow(workflow: Workflow): Promise<Workflow>;\r\n    updateWorkflowTasksCount(count?: number): Promise<void>;\r\n    /**\r\n     * Returns all actions for a given workflow code.\r\n     */\r\n    getAllActionsForWorkflow(workflowCode: string): Promise<WorkflowAction[]>;\r\n    /**\r\n     * Returns all active actions for a given workflow code and for the current user.\r\n     */\r\n    getActiveActionsForWorkflow(workflowCode: string): Promise<WorkflowAction[]>;\r\n    /**\r\n     * Returns a paged list of comments for a given workflow and workflow action.\r\n     *\r\n     * Since the result is paginated and used by the InfiniteScrollingComponent, the list of comments is populated in the results property.\r\n     */\r\n    getCommentsForWorkflowAction(workflowCode: string, workflowActionCode: string, payload: Pageable): Promise<Page<WorkflowActionComment>>;\r\n    /**\r\n     * Returns a paged list of active workflow inbox tasks for a given user.\r\n     */\r\n    getWorkflowInboxTasks(payload: Pageable): Promise<WorkflowTaskPage>;\r\n    getTotalNumberOfTasks(): Promise<number>;\r\n    /**\r\n     * Makes a decision for a given workflow action and workflow decision.\r\n     */\r\n    makeDecision(workflowCode: string, workflowAction: WorkflowAction, decision: WorkflowDecision): Promise<Workflow>;\r\n    private confirmDecision;\r\n    /**\r\n     * Returns the data for GenericEditorModalComponent.\r\n     *\r\n     * @param workflow the data object to populate generic editor.\r\n     * If workflow is null the generic editor displays fields to start a workflow,\r\n     * Otherwise, the generic editor displays fields to edit a workflow.\r\n     */\r\n    private getWorkflowDataForEditor;\r\n    private getComponentDataForStartingWorkflow;\r\n    private getComponentDataForNonStartingWorkflow;\r\n    /**\r\n     * Handles errors that the generic editor didn't handle directly (for example, due to unknown qualifiers) in two\r\n     * ways:\r\n     * 1. Even though there are different attributes for createVersion and versionLabel, in the front-end they are handled\r\n     *    in the same widget, under the createVersion qualifier. However, when validating, the backend sends the error\r\n     *    directly to versionLabel. Thus, any time there's an error directed to versionLabel it needs to be assigned to\r\n     *    createVersion and republished for it to become visible.\r\n     * 2. Any other error will be displayed in an alert.\r\n     */\r\n    private handleUnrelatedValidationErrors;\r\n}\r\n"}}

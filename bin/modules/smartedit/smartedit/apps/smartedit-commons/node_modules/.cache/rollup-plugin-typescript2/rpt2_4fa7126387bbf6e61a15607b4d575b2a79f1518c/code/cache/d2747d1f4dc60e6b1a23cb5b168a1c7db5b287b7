{"code":"var ITemplateCacheService = /** @class */ (function () {\r\n    function ITemplateCacheService() {\r\n    }\r\n    ITemplateCacheService.prototype.info = function () {\r\n        return undefined;\r\n    };\r\n    ITemplateCacheService.prototype.put = function (key, value) {\r\n        return undefined;\r\n    };\r\n    ITemplateCacheService.prototype.get = function (key) {\r\n        return undefined;\r\n    };\r\n    ITemplateCacheService.prototype.remove = function (key) {\r\n        return undefined;\r\n    };\r\n    ITemplateCacheService.prototype.removeAll = function () {\r\n        return undefined;\r\n    };\r\n    ITemplateCacheService.prototype.destroy = function () {\r\n        return undefined;\r\n    };\r\n    return ITemplateCacheService;\r\n}());\r\nexport { ITemplateCacheService };\r\n//# sourceMappingURL=ITemplateCacheService.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types/angular@1.7.3/node_modules/@types/angular/index.d.ts"],"map":"{\"version\":3,\"file\":\"ITemplateCacheService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/interfaces/ITemplateCacheService.ts\"],\"names\":[],\"mappings\":\"AAKA;IAAA;IAwBA,CAAC;IAvBG,oCAAI,GAAJ;QACI,OAAO,SAAS,CAAC;IACrB,CAAC;IAED,mCAAG,GAAH,UAAO,GAAW,EAAE,KAAS;QACzB,OAAO,SAAS,CAAC;IACrB,CAAC;IAED,mCAAG,GAAH,UAAO,GAAW;QACd,OAAO,SAAS,CAAC;IACrB,CAAC;IAED,sCAAM,GAAN,UAAO,GAAW;QACd,OAAO,SAAS,CAAC;IACrB,CAAC;IAED,yCAAS,GAAT;QACI,OAAO,SAAS,CAAC;IACrB,CAAC;IAED,uCAAO,GAAP;QACI,OAAO,SAAS,CAAC;IACrB,CAAC;IACL,4BAAC;AAAD,CAAC,AAxBD,IAwBC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/services/interfaces/ITemplateCacheService.d.ts","writeByteOrderMark":false,"text":"import * as angular from 'angular';\r\nexport declare abstract class ITemplateCacheService implements angular.ITemplateCacheService {\r\n    info(): any;\r\n    put<T>(key: string, value?: T): T;\r\n    get<T>(key: string): T | undefined;\r\n    remove(key: string): void;\r\n    removeAll(): void;\r\n    destroy(): void;\r\n}\r\n"}}

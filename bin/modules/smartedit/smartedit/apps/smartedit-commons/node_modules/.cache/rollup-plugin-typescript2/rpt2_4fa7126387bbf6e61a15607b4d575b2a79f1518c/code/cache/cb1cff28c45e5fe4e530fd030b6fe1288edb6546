{"code":"//# sourceMappingURL=IDropdownMenuItem.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts"],"map":"{\"version\":3,\"file\":\"IDropdownMenuItem.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/components/dropdown/dropdownMenu/IDropdownMenuItem.ts\"],\"names\":[],\"mappings\":\"\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/components/dropdown/dropdownMenu/IDropdownMenuItem.d.ts","writeByteOrderMark":false,"text":"import { Type } from '@angular/core';\r\n/**\r\n * Describes Dropdown Menu Item for {@link DropdownMenuComponent}.\r\n */\r\nexport interface IDropdownMenuItem {\r\n    /**\r\n     * i18n.\r\n     */\r\n    key?: string;\r\n    /**\r\n     * Icon css class.\r\n     */\r\n    icon?: string;\r\n    /**\r\n     * **Deprecated since 2005, use {@link IDropdownMenuItem#component}.**\r\n     *\r\n     * HTML string that will be rendered.\r\n     *\r\n     * Either one of callback, template, templateUrl or component must be present.\r\n     *\r\n     * @deprecated\r\n     */\r\n    template?: string;\r\n    /**\r\n     * **Deprecated since 2005, use {@link IDropdownMenuItem#component}.**\r\n     *\r\n     * Same as template but instead of passing a string, pass an URL to an HTML file.\r\n     *\r\n     * Either one of callback, template, templateUrl or component must be present.\r\n     *\r\n     * @deprecated\r\n     */\r\n    templateUrl?: string;\r\n    /**\r\n     * Component that will be rendered.\r\n     *\r\n     * Either one of callback, template, templateUrl or component must be present.\r\n     */\r\n    component?: Type<any>;\r\n    /**\r\n     * Custom css class that is appended to the dropdown item\r\n     */\r\n    customCss?: string;\r\n    /**\r\n     * When provided, the Item will be rendered by default component ({@link DropdownMenuItemDefaultComponent}).\r\n     *\r\n     * This function will be called with two arguments when the item is clicked.\r\n     * The first one is [selectedItem]{@link DropdownMenuComponent#selectedItem}, the second one is the clicked item itself.\r\n     *\r\n     * Either one of callback, template, templateUrl or component must be present.\r\n     */\r\n    callback?(...args: any[]): void;\r\n    /**\r\n     * Predicate for displaying the Item.\r\n     */\r\n    condition?(...args: any[]): boolean;\r\n}\r\n"}}

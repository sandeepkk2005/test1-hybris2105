{"code":"import { __decorate, __metadata } from \"tslib\";\r\nimport { Injectable } from '@angular/core';\r\nimport { IAlertService } from '../../../interfaces';\r\n/**\r\n * @ngdoc service\r\n * @name permissionErrorInterceptorModule.service:permissionErrorInterceptor\r\n * @description\r\n * Used for HTTP error code 403. Displays the alert message for permission error.\r\n */\r\nvar PermissionErrorInterceptor = /** @class */ (function () {\r\n    function PermissionErrorInterceptor(alertService) {\r\n        this.alertService = alertService;\r\n    }\r\n    PermissionErrorInterceptor.prototype.predicate = function (request, response) {\r\n        return response.status === 403;\r\n    };\r\n    PermissionErrorInterceptor.prototype.responseError = function (request, response) {\r\n        var _this = this;\r\n        if (response.error && response.error.errors) {\r\n            response.error.errors\r\n                .filter(function (error) { return error.type === 'TypePermissionError'; })\r\n                .forEach(function (error) {\r\n                _this.alertService.showDanger({\r\n                    message: error.message,\r\n                    duration: 10000\r\n                });\r\n            });\r\n        }\r\n        return Promise.reject(response);\r\n    };\r\n    PermissionErrorInterceptor = __decorate([\r\n        Injectable(),\r\n        __metadata(\"design:paramtypes\", [IAlertService])\r\n    ], PermissionErrorInterceptor);\r\n    return PermissionErrorInterceptor;\r\n}());\r\nexport { PermissionErrorInterceptor };\r\n//# sourceMappingURL=permission-error.interceptor.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/common@8.2.14_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@angular/common/http.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/interfaces/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/services/interceptors/i-http-error.interceptor.ts"],"map":"{\"version\":3,\"file\":\"permission-error.interceptor.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/services/interceptors/errors/permission-error.interceptor.ts\"],\"names\":[],\"mappings\":\";AAQA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AAEpD;;;;;GAKG;AAEH;IACI,oCAAoB,YAA2B;QAA3B,iBAAY,GAAZ,YAAY,CAAe;IAAG,CAAC;IACnD,8CAAS,GAAT,UAAU,OAAuB,EAAE,QAA2B;QAC1D,OAAO,QAAQ,CAAC,MAAM,KAAK,GAAG,CAAC;IACnC,CAAC;IACD,kDAAa,GAAb,UACI,OAAuB,EACvB,QAA2B;QAF/B,iBAeC;QAXG,IAAI,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE;YACzC,QAAQ,CAAC,KAAK,CAAC,MAAM;iBAChB,MAAM,CAAC,UAAC,KAAmB,IAAK,OAAA,KAAK,CAAC,IAAI,KAAK,qBAAqB,EAApC,CAAoC,CAAC;iBACrE,OAAO,CAAC,UAAC,KAAmB;gBACzB,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC;oBACzB,OAAO,EAAE,KAAK,CAAC,OAAO;oBACtB,QAAQ,EAAE,KAAK;iBAClB,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;SACV;QACD,OAAO,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACpC,CAAC;IApBQ,0BAA0B;QADtC,UAAU,EAAE;yCAEyB,aAAa;OADtC,0BAA0B,CAqBtC;IAAD,iCAAC;CAAA,AArBD,IAqBC;SArBY,0BAA0B\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/services/interceptors/errors/permission-error.interceptor.d.ts","writeByteOrderMark":false,"text":"/**\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n * @module smartutils\r\n */\r\nimport { HttpErrorResponse, HttpRequest } from '@angular/common/http';\r\nimport { IAlertService } from '../../../interfaces';\r\nimport { IHttpErrorInterceptor } from '../i-http-error.interceptor';\r\n/**\r\n * @ngdoc service\r\n * @name permissionErrorInterceptorModule.service:permissionErrorInterceptor\r\n * @description\r\n * Used for HTTP error code 403. Displays the alert message for permission error.\r\n */\r\nexport declare class PermissionErrorInterceptor<T = any> implements IHttpErrorInterceptor<T> {\r\n    private alertService;\r\n    constructor(alertService: IAlertService);\r\n    predicate(request: HttpRequest<T>, response: HttpErrorResponse): boolean;\r\n    responseError(request: HttpRequest<T>, response: HttpErrorResponse): Promise<HttpErrorResponse>;\r\n}\r\n"}}

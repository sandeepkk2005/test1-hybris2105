{"code":"import { __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { SchemaCompilerService } from '@smart/utils';\r\nimport { objectUtils, CONTEXT_CATALOG, CONTEXT_CATALOG_VERSION, CONTEXT_SITE_ID } from '../../../utils';\r\nimport { GenericEditorTabComponent } from '../components/GenericEditorTabComponent';\r\nimport { createRootMapper } from '../mappers';\r\nimport { proxifyDataObject, GenericEditorState } from '../models';\r\nimport { EditorFieldMappingService } from './EditorFieldMappingService';\r\nimport { GenericEditorTabService } from './GenericEditorTabService';\r\n/**\r\n * @internal\r\n * GenericEditorStateBuilderService generates a GenericEditorState.\r\n */\r\nvar /* @ngInject */ GenericEditorStateBuilderService = /** @class */ (function () {\r\n    function /* @ngInject */ GenericEditorStateBuilderService(\r\n    /** @internal */\r\n    editorFieldMappingService, \r\n    /** @internal */\r\n    genericEditorTabService, \r\n    /** @internal */\r\n    translateService, \r\n    /** @internal */\r\n    schemaCompiler) {\r\n        this.editorFieldMappingService = editorFieldMappingService;\r\n        this.genericEditorTabService = genericEditorTabService;\r\n        this.translateService = translateService;\r\n        this.schemaCompiler = schemaCompiler;\r\n    }\r\n    /**\r\n     * Compiles a GenericEditorState from schema and data. Whenever a new state\r\n     * is provided the entire form is recompiled.\r\n     */\r\n    /* @ngInject */ GenericEditorStateBuilderService.prototype.buildState = function (data, schema) {\r\n        var _this = this;\r\n        var fields = this._fieldAdaptor(schema);\r\n        var tabs = [];\r\n        var fieldsMap = fields.reduce(function (seed, field) {\r\n            var tab = _this.editorFieldMappingService.getFieldTabMapping(field, schema.structure);\r\n            if (!tab) {\r\n                tab = _this.genericEditorTabService.getComponentTypeDefaultTab(schema.structure);\r\n            }\r\n            if (!seed[tab]) {\r\n                seed[tab] = [];\r\n                tabs.push({\r\n                    id: tab,\r\n                    title: 'se.genericeditor.tab.' + tab + '.title',\r\n                    component: GenericEditorTabComponent\r\n                });\r\n            }\r\n            seed[tab].push(field);\r\n            return seed;\r\n        }, {});\r\n        this.genericEditorTabService.sortTabs(tabs);\r\n        // for setting uri params into custom widgets\r\n        var parameters = {\r\n            siteId: schema.uriContext[CONTEXT_SITE_ID],\r\n            catalogId: schema.uriContext[CONTEXT_CATALOG],\r\n            catalogVersion: schema.uriContext[CONTEXT_CATALOG_VERSION]\r\n        };\r\n        var component = objectUtils.copy(data);\r\n        var proxied = proxifyDataObject(component);\r\n        var mapper = this._createMapper(fieldsMap, proxied, schema.languages, tabs);\r\n        var form = this.schemaCompiler.compileGroup(mapper.toValue(), mapper.toSchema());\r\n        // Create central state handler.\r\n        var state = new GenericEditorState(schema.id, form, component, proxied, objectUtils.copy(data), // Pristine form.\r\n        tabs, fields, schema.languages, parameters);\r\n        state.switchToTabContainingQualifier(schema.targetedQualifier);\r\n        return state;\r\n    };\r\n    /** @internal */\r\n    /* @ngInject */ GenericEditorStateBuilderService.prototype._createMapper = function (fieldsMap, component, languages, tabs) {\r\n        return createRootMapper(fieldsMap, component, languages, tabs);\r\n    };\r\n    /** @internal */\r\n    /* @ngInject */ GenericEditorStateBuilderService.prototype._fieldAdaptor = function (schema) {\r\n        var _this = this;\r\n        var structure = schema.structure;\r\n        return structure.attributes.map(function (field) {\r\n            var fieldMapping = _this.editorFieldMappingService.getEditorFieldMapping(field, structure);\r\n            var genericField = Object.assign(field, fieldMapping);\r\n            if (genericField.editable === undefined) {\r\n                genericField.editable = true;\r\n            }\r\n            if (!genericField.postfixText) {\r\n                var key = (structure.type ? structure.type.toLowerCase() : '') +\r\n                    '.' +\r\n                    field.qualifier.toLowerCase() +\r\n                    '.postfix.text';\r\n                var translated = _this.translateService.instant(key);\r\n                genericField.postfixText = translated !== key ? translated : '';\r\n            }\r\n            genericField.smarteditComponentType = schema.smarteditComponentType;\r\n            return genericField;\r\n        });\r\n    };\r\n    /* @ngInject */ GenericEditorStateBuilderService = __decorate([\r\n        Injectable(),\r\n        __metadata(\"design:paramtypes\", [EditorFieldMappingService,\r\n            GenericEditorTabService,\r\n            TranslateService,\r\n            SchemaCompilerService])\r\n    ], /* @ngInject */ GenericEditorStateBuilderService);\r\n    return /* @ngInject */ GenericEditorStateBuilderService;\r\n}());\r\nexport { /* @ngInject */ GenericEditorStateBuilderService };\r\n//# sourceMappingURL=GenericEditorStateBuilderService.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@ngx-translate/core@11.0.1_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@ngx-translate/core/ngx-translate-core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/utils/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/genericEditor/components/GenericEditorTabComponent.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/genericEditor/mappers/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/genericEditor/models/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/genericEditor/types.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/genericEditor/services/EditorFieldMappingService.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/genericEditor/services/GenericEditorTabService.ts"],"map":"{\"version\":3,\"file\":\"GenericEditorStateBuilderService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/components/genericEditor/services/GenericEditorStateBuilderService.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/components/genericEditor/services/GenericEditorStateBuilderService.d.ts","writeByteOrderMark":false,"text":"import { TranslateService } from '@ngx-translate/core';\r\nimport { Payload, SchemaCompilerService } from '@smart/utils';\r\nimport { GenericEditorState } from '../models';\r\nimport { GenericEditorSchema } from '../types';\r\nimport { EditorFieldMappingService } from './EditorFieldMappingService';\r\nimport { GenericEditorTabService } from './GenericEditorTabService';\r\n/**\r\n * @internal\r\n * GenericEditorStateBuilderService generates a GenericEditorState.\r\n */\r\nexport declare class GenericEditorStateBuilderService {\r\n    /** @internal */\r\n    private editorFieldMappingService;\r\n    /** @internal */\r\n    private genericEditorTabService;\r\n    /** @internal */\r\n    private translateService;\r\n    /** @internal */\r\n    private schemaCompiler;\r\n    constructor(\r\n    /** @internal */\r\n    editorFieldMappingService: EditorFieldMappingService, \r\n    /** @internal */\r\n    genericEditorTabService: GenericEditorTabService, \r\n    /** @internal */\r\n    translateService: TranslateService, \r\n    /** @internal */\r\n    schemaCompiler: SchemaCompilerService);\r\n    /**\r\n     * Compiles a GenericEditorState from schema and data. Whenever a new state\r\n     * is provided the entire form is recompiled.\r\n     */\r\n    buildState(data: Payload, schema: GenericEditorSchema): GenericEditorState;\r\n    /** @internal */\r\n    private _createMapper;\r\n    /** @internal */\r\n    private _fieldAdaptor;\r\n}\r\n"}}

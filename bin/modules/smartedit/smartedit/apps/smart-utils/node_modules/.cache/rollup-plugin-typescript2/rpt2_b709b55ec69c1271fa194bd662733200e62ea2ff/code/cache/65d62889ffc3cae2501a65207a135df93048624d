{"code":"import { __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\n/**\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n * @module smartutils\r\n */\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport * as lodash from 'lodash';\r\nimport { LogService } from '../log.service';\r\nimport { RestClient } from './rest-client';\r\n/** @internal */\r\nvar RestServiceFactory = /** @class */ (function () {\r\n    function RestServiceFactory(httpClient) {\r\n        this.httpClient = httpClient;\r\n        this.map = new Map();\r\n        this.basePath = null;\r\n        this.DOMAIN = null;\r\n        this.IDENTIFIER = 'identifier';\r\n    }\r\n    RestServiceFactory_1 = RestServiceFactory;\r\n    RestServiceFactory.setGlobalBasePath = function (globalBasePath) {\r\n        if (!RestServiceFactory_1.globalBasePath) {\r\n            RestServiceFactory_1.globalBasePath = globalBasePath;\r\n        }\r\n        else {\r\n            RestServiceFactory_1.logService.warn('The value of a global base path was already set. ' +\r\n                'Update is not possible, the value remained unchanged!');\r\n        }\r\n    };\r\n    RestServiceFactory.getGlobalBasePath = function () {\r\n        return RestServiceFactory_1.globalBasePath ? RestServiceFactory_1.globalBasePath : '';\r\n    };\r\n    RestServiceFactory.prototype.setDomain = function (DOMAIN) {\r\n        this.DOMAIN = DOMAIN;\r\n    };\r\n    RestServiceFactory.prototype.setBasePath = function (basePath) {\r\n        this.basePath = basePath;\r\n    };\r\n    RestServiceFactory.prototype.get = function (uri, identifier) {\r\n        if (identifier === void 0) { identifier = this.IDENTIFIER; }\r\n        if (this.map.has(uri + identifier)) {\r\n            return this.map.get(uri + identifier);\r\n        }\r\n        if (!/^https?\\:\\/\\//.test(uri)) {\r\n            var newBasePath = this.getNewBasePath();\r\n            var basePathURI = lodash.isEmpty(newBasePath)\r\n                ? uri\r\n                : newBasePath + (/^\\//.test(uri) ? uri : \"/\" + uri);\r\n            uri = this.shouldAppendDomain(uri) ? this.DOMAIN + \"/\" + uri : basePathURI;\r\n        }\r\n        var restClient = new RestClient(this.httpClient, uri, identifier);\r\n        this.map.set(uri + identifier, restClient);\r\n        return restClient;\r\n    };\r\n    RestServiceFactory.prototype.shouldAppendDomain = function (uri) {\r\n        return !!this.DOMAIN && !/^\\//.test(uri);\r\n    };\r\n    RestServiceFactory.prototype.getNewBasePath = function () {\r\n        return this.basePath ? this.basePath : RestServiceFactory_1.globalBasePath;\r\n    };\r\n    var RestServiceFactory_1;\r\n    RestServiceFactory.globalBasePath = null;\r\n    RestServiceFactory.logService = new LogService();\r\n    RestServiceFactory = RestServiceFactory_1 = __decorate([\r\n        Injectable(),\r\n        __metadata(\"design:paramtypes\", [HttpClient])\r\n    ], RestServiceFactory);\r\n    return RestServiceFactory;\r\n}());\r\nexport { RestServiceFactory };\r\n//# sourceMappingURL=rest-service.factory.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/common@8.2.14_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@angular/common/http.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types/lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/services/log.service.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/services/rest/i-rest-service.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/services/rest/i-rest-service.factory.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/services/rest/rest-client.ts"],"map":"{\"version\":3,\"file\":\"rest-service.factory.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/rest/rest-service.factory.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/services/rest/rest-service.factory.d.ts","writeByteOrderMark":false,"text":"/**\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n * @module smartutils\r\n */\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { IRestService } from './i-rest-service';\r\nimport { IRestServiceFactory } from './i-rest-service.factory';\r\n/** @internal */\r\nexport declare class RestServiceFactory implements IRestServiceFactory {\r\n    private httpClient;\r\n    private static globalBasePath;\r\n    private static logService;\r\n    private map;\r\n    private basePath;\r\n    private DOMAIN;\r\n    private IDENTIFIER;\r\n    static setGlobalBasePath(globalBasePath: string): void;\r\n    static getGlobalBasePath(): string;\r\n    constructor(httpClient: HttpClient);\r\n    setDomain(DOMAIN: string): void;\r\n    setBasePath(basePath: string): void;\r\n    get<T>(uri: string, identifier?: string): IRestService<T>;\r\n    private shouldAppendDomain;\r\n    private getNewBasePath;\r\n}\r\n"}}

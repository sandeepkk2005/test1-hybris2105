export declare class PersonalizationsmarteditTriggerService {
    DEFAULT_TRIGGER: string;
    SEGMENT_TRIGGER: string;
    EXPRESSION_TRIGGER: string;
    supportedTypes: string[];
    actions: {
        id: string;
        name: string;
    }[];
    private GROUP_EXPRESSION;
    private SEGMENT_EXPRESSION;
    private NEGATION_EXPRESSION;
    private CONTAINER_TYPE;
    private ITEM_TYPE;
    private DROPZONE_TYPE;
    isContainer(element: any): boolean;
    isEmptyContainer(element: any): boolean;
    isNotEmptyContainer(element: any): boolean;
    isDropzone(element: any): boolean;
    isItem(element: any): boolean;
    isValidExpression(element: any): boolean;
    buildTriggers(form: any, existingTriggers: any): any;
    buildData(triggers: any): any;
    isDefault(triggers: any): boolean;
    getExpressionAsString(expressionContainer: any): string;
    private isElementOfType;
    private isNegation;
    private isDefaultData;
    private isExpressionData;
    private isSupportedTrigger;
    private isDefaultTrigger;
    private isSegmentTrigger;
    private isExpressionTrigger;
    private isGroupExpressionData;
    private isSegmentExpressionData;
    private isNegationExpressionData;
    private buildSegmentsForTrigger;
    private buildExpressionForTrigger;
    private buildDefaultTrigger;
    private buildExpressionTrigger;
    private buildSegmentTrigger;
    private mergeTriggers;
    private buildContainer;
    private buildItem;
    private getBaseData;
    private buildExpressionFromTrigger;
    private buildSegmentTriggerData;
    private buildExpressionTriggerData;
}

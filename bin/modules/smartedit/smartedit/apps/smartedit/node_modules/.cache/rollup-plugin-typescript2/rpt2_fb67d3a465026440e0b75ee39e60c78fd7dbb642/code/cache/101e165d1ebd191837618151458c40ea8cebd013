{"code":"import { __decorate, __metadata, __param } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { Inject } from '@angular/core';\r\nimport * as lodash from 'lodash';\r\nimport { PageInfoService } from 'smartedit/services/PageInfoServiceInner';\r\nimport { stringUtils, CATALOG_VERSION_UUID_ATTRIBUTE, COMPONENT_CLASS, CONTAINER_ID_ATTRIBUTE, CONTAINER_TYPE_ATTRIBUTE, CONTENT_SLOT_TYPE, ELEMENT_UUID_ATTRIBUTE, ID_ATTRIBUTE, OVERLAY_COMPONENT_CLASS, OVERLAY_ID, SeDowngradeService, TYPE_ATTRIBUTE, UUID_ATTRIBUTE, YJQUERY_TOKEN } from 'smarteditcommons';\r\n/**\r\n * Handles all get/set component related operations\r\n */\r\nvar /* @ngInject */ ComponentHandlerService = /** @class */ (function () {\r\n    function /* @ngInject */ ComponentHandlerService(yjQuery) {\r\n        this.yjQuery = yjQuery;\r\n    }\r\n    /**\r\n     * Retrieves a handler on the smartEdit overlay div\r\n     * This method can only be invoked from the smartEdit application and not the smartEdit container.\r\n     *\r\n     * @returns The #smarteditoverlay JQuery Element\r\n     */\r\n    /* @ngInject */ ComponentHandlerService.prototype.getOverlay = function () {\r\n        return this.yjQuery('#' + OVERLAY_ID);\r\n    };\r\n    /**\r\n     * determines whether the overlay is visible\r\n     * This method can only be invoked from the smartEdit application and not the smartEdit iframe.\r\n     *\r\n     * @returns  true if the overlay is visible\r\n     */\r\n    /* @ngInject */ ComponentHandlerService.prototype.isOverlayOn = function () {\r\n        return this.getOverlay().length && this.getOverlay()[0].style.display !== 'none';\r\n    };\r\n    /**\r\n     * Retrieves the yjQuery wrapper around a smartEdit component identified by its smartEdit id, smartEdit type and an optional class\r\n     * This method can only be invoked from the smartEdit application and not the smartEdit container.\r\n     *\r\n     * @param smarteditComponentId the component id as per the smartEdit contract with the storefront\r\n     * @param smarteditComponentType the component type as per the smartEdit contract with the storefront\r\n     * @param smarteditSlotId the slot id of the slot containing the component as per the smartEdit contract with the storefront\r\n     * @param cssClass the css Class to further restrict the search on. This parameter is optional.\r\n     *\r\n     * @returns  a yjQuery object wrapping the searched component\r\n     */\r\n    /* @ngInject */ ComponentHandlerService.prototype.getComponentUnderSlot = function (smarteditComponentId, smarteditComponentType, smarteditSlotId, cssClass) {\r\n        var slotQuery = this.buildComponentQuery(smarteditSlotId, CONTENT_SLOT_TYPE);\r\n        var componentQuery = this.buildComponentQuery(smarteditComponentId, smarteditComponentType, cssClass);\r\n        var selector = slotQuery + ' ' + componentQuery;\r\n        return this.yjQuery(selector);\r\n    };\r\n    /**\r\n     * Retrieves the yjQuery wrapper around a smartEdit component identified by its smartEdit id, smartEdit type and an optional class\r\n     * This method can only be invoked from the smartEdit application and not the smartEdit container.\r\n     *\r\n     * @param smarteditComponentId the component id as per the smartEdit contract with the storefront\r\n     * @param smarteditComponentType the component type as per the smartEdit contract with the storefront\r\n     * @param cssClass the css Class to further restrict the search on. This parameter is optional.\r\n     *\r\n     * @returns a yjQuery object wrapping the searched component\r\n     */\r\n    /* @ngInject */ ComponentHandlerService.prototype.getComponent = function (smarteditComponentId, smarteditComponentType, cssClass) {\r\n        return this.yjQuery(this.buildComponentQuery(smarteditComponentId, smarteditComponentType, cssClass));\r\n    };\r\n    /**\r\n     * Retrieves the yjQuery wrapper around a smartEdit component of the original storefront layer identified by its smartEdit id, smartEdit type and slot ID\r\n     * This method can only be invoked from the smartEdit application and not the smartEdit container.\r\n     *\r\n     * @param smarteditComponentId the component id as per the smartEdit contract with the storefront\r\n     * @param smarteditComponentType the component type as per the smartEdit contract with the storefront\r\n     * @param slotId the ID of the slot within which the component resides\r\n     *\r\n     * @returns a yjQuery object wrapping the searched component\r\n     */\r\n    /* @ngInject */ ComponentHandlerService.prototype.getOriginalComponentWithinSlot = function (smarteditComponentId, smarteditComponentType, slotId) {\r\n        return this.getComponentUnderSlot(smarteditComponentId, smarteditComponentType, slotId, COMPONENT_CLASS);\r\n    };\r\n    /**\r\n     * Retrieves the yjQuery wrapper around a smartEdit component of the original storefront layer identified by its smartEdit id, smartEdit type\r\n     * This method can only be invoked from the smartEdit application and not the smartEdit container.\r\n     *\r\n     * @param smarteditComponentId the component id as per the smartEdit contract with the storefront\r\n     * @param smarteditComponentType the component type as per the smartEdit contract with the storefront\r\n     *\r\n     * @returns a yjQuery object wrapping the searched component\r\n     */\r\n    /* @ngInject */ ComponentHandlerService.prototype.getOriginalComponent = function (smarteditComponentId, smarteditComponentType) {\r\n        return this.getComponent(smarteditComponentId, smarteditComponentType, COMPONENT_CLASS);\r\n    };\r\n    /**\r\n     * Retrieves the yjQuery wrapper around a smartEdit component of the overlay layer identified by its smartEdit id, smartEdit type and slot ID\r\n     * This method can only be invoked from the smartEdit application and not the smartEdit container.\r\n     *\r\n     * @param smarteditComponentId the component id as per the smartEdit contract with the storefront\r\n     * @param smarteditComponentType the component type as per the smartEdit contract with the storefront\r\n     * @param slotId the ID of the slot within which the component resides\r\n     *\r\n     * @returns a yjQuery object wrapping the searched component\r\n     */\r\n    /* @ngInject */ ComponentHandlerService.prototype.getOverlayComponentWithinSlot = function (smarteditComponentId, smarteditComponentType, slotId) {\r\n        return this.getComponentUnderSlot(smarteditComponentId, smarteditComponentType, slotId, OVERLAY_COMPONENT_CLASS);\r\n    };\r\n    /**\r\n     * Retrieves the yjQuery wrapper around the smartEdit component of the overlay layer corresponding to the storefront layer component passed as argument\r\n     * This method can only be invoked from the smartEdit application and not the smartEdit container.\r\n     *\r\n     * @param originalComponent the DOM element in the storefront layer\r\n     *\r\n     * @returns a yjQuery object wrapping the searched component\r\n     */\r\n    /* @ngInject */ ComponentHandlerService.prototype.getOverlayComponent = function (originalComponent) {\r\n        var slotId = this.getParentSlotForComponent(originalComponent.parent());\r\n        if (slotId) {\r\n            return this.getComponentUnderSlot(originalComponent.attr(ID_ATTRIBUTE), originalComponent.attr(TYPE_ATTRIBUTE), slotId, OVERLAY_COMPONENT_CLASS);\r\n        }\r\n        else {\r\n            return this.getComponent(originalComponent.attr(ID_ATTRIBUTE), originalComponent.attr(TYPE_ATTRIBUTE), OVERLAY_COMPONENT_CLASS);\r\n        }\r\n    };\r\n    /**\r\n     * Retrieves the yjQuery wrapper around a smartEdit component of the overlay div identified by its smartEdit id, smartEdit type\r\n     * This method can only be invoked from the smartEdit application and not the smartEdit container.\r\n     *\r\n     * @param smarteditComponentId the component id as per the smartEdit contract with the storefront\r\n     * @param smarteditComponentType the component type as per the smartEdit contract with the storefront\r\n     *\r\n     * @returns a yjQuery object wrapping the searched component\r\n     *\r\n     */\r\n    /* @ngInject */ ComponentHandlerService.prototype.getComponentInOverlay = function (smarteditComponentId, smarteditComponentType) {\r\n        return this.getComponent(smarteditComponentId, smarteditComponentType, OVERLAY_COMPONENT_CLASS);\r\n    };\r\n    /**\r\n     * Retrieves the the slot ID for a given element\r\n     *\r\n     * @param component the yjQuery component for which to search the parent\r\n     *\r\n     * @returns the slot ID for that particular component\r\n     */\r\n    /* @ngInject */ ComponentHandlerService.prototype.getParentSlotForComponent = function (component) {\r\n        var parent = this.yjQuery(component).closest('[' + TYPE_ATTRIBUTE + '=' + CONTENT_SLOT_TYPE + ']');\r\n        return parent.attr(ID_ATTRIBUTE);\r\n    };\r\n    /**\r\n     * Retrieves the position of a component within a slot based on visible components in the given slotId.\r\n     *\r\n     * @param slotId the slot id as per the smartEdit contract with the storefront\r\n     * @param componentId the component id as per the smartEdit contract with the storefront\r\n     *\r\n     * @returns the position of the component within a slot\r\n     */\r\n    /* @ngInject */ ComponentHandlerService.prototype.getComponentPositionInSlot = function (slotId, componentId) {\r\n        var _this = this;\r\n        var components = this.getOriginalComponentsWithinSlot(slotId);\r\n        return lodash.findIndex(components, function (component) { return _this.getId(component) === componentId; });\r\n    };\r\n    /**\r\n     * Retrieves the yjQuery wrapper around a list of smartEdit components contained in the slot identified by the given slotId.\r\n     * This method can only be invoked from the smartEdit application and not the smartEdit container.\r\n     *\r\n     * @param slotId the ID of the slot within which the component resides\r\n     *\r\n     * @returns The list of searched components yjQuery objects\r\n     */\r\n    /* @ngInject */ ComponentHandlerService.prototype.getOriginalComponentsWithinSlot = function (slotId) {\r\n        return this.yjQuery(this.buildComponentsInSlotQuery(slotId));\r\n    };\r\n    /**\r\n     * Gets the id that is relevant to be able to perform slot related operations for this components\r\n     * It typically is CONTAINER_ID_ATTRIBUTE when applicable and defaults to ID_ATTRIBUTE\r\n     *\r\n     * @param component the yjQuery component for which to get the id\r\n     *\r\n     * @returns the slot operations related id\r\n     */\r\n    /* @ngInject */ ComponentHandlerService.prototype.getSlotOperationRelatedId = function (component) {\r\n        component = this.yjQuery(component);\r\n        var containerId = component.attr(CONTAINER_ID_ATTRIBUTE);\r\n        return containerId && component.attr(CONTAINER_TYPE_ATTRIBUTE)\r\n            ? containerId\r\n            : component.attr(ID_ATTRIBUTE);\r\n    };\r\n    /**\r\n     * Gets the id that is relevant to be able to perform slot related operations for this components\r\n     * It typically is {@link seConstantsModule.CONTAINER_ID_ATTRIBUTE} when applicable and defaults to {@link seConstantsModule.ID_ATTRIBUTE}\r\n     *\r\n     * @param component the yjQuery component for which to get the Uuid\r\n     *\r\n     * @returns the slot operations related Uuid\r\n     */\r\n    /* @ngInject */ ComponentHandlerService.prototype.getSlotOperationRelatedUuid = function (component) {\r\n        var containerId = this.yjQuery(component).attr(CONTAINER_ID_ATTRIBUTE);\r\n        return containerId && this.yjQuery(component).attr(CONTAINER_TYPE_ATTRIBUTE)\r\n            ? containerId\r\n            : this.yjQuery(component).attr(UUID_ATTRIBUTE);\r\n    };\r\n    /**\r\n     * Retrieves the direct smartEdit component parent of a given component.\r\n     * The parent is fetched in the same layer (original storefront or smartEdit overlay) as the child\r\n     * This method can only be invoked from the smartEdit application and not the smartEdit container.\r\n     *\r\n     * @param component the yjQuery component for which to search a parent\r\n     *\r\n     * @returns a yjQuery object wrapping the smae-layer parent component\r\n     */\r\n    /* @ngInject */ ComponentHandlerService.prototype.getParent = function (component) {\r\n        component = this.yjQuery(component);\r\n        var parentClassToLookFor = component.hasClass(COMPONENT_CLASS)\r\n            ? COMPONENT_CLASS\r\n            : component.hasClass(OVERLAY_COMPONENT_CLASS)\r\n                ? OVERLAY_COMPONENT_CLASS\r\n                : null;\r\n        if (stringUtils.isBlank(parentClassToLookFor)) {\r\n            throw new Error('componentHandlerService.getparent.error.component.from.unknown.layer');\r\n        }\r\n        return component.closest('.' +\r\n            parentClassToLookFor +\r\n            '[' +\r\n            ID_ATTRIBUTE +\r\n            ']' +\r\n            '[' +\r\n            ID_ATTRIBUTE +\r\n            \"!='\" +\r\n            component.attr(ID_ATTRIBUTE) +\r\n            \"']\");\r\n    };\r\n    /**\r\n     * Returns the closest parent (or self) being a smartEdit component\r\n     *\r\n     * @param component the DOM/yjQuery element for which to search a parent\r\n     *\r\n     * @returns The closest closest parent (or self) being a smartEdit component\r\n     */\r\n    /* @ngInject */ ComponentHandlerService.prototype.getClosestSmartEditComponent = function (component) {\r\n        return this.yjQuery(component).closest('.' + COMPONENT_CLASS);\r\n    };\r\n    /**\r\n     * Determines whether a DOM/yjQuery element is a smartEdit component\r\n     *\r\n     * @param component the DOM/yjQuery element for which to check if it's a SmartEdit component\r\n     *\r\n     * @returns true if DOM/yjQuery element is a smartEdit component\r\n     */\r\n    /* @ngInject */ ComponentHandlerService.prototype.isSmartEditComponent = function (component) {\r\n        return this.yjQuery(component).hasClass(COMPONENT_CLASS);\r\n    };\r\n    /**\r\n     * Sets the smartEdit component id of a given component\r\n     *\r\n     * @param component the yjQuery component for which to set the id\r\n     * @param id the id to be set\r\n     *\r\n     * @returns component the yjQuery component\r\n     */\r\n    /* @ngInject */ ComponentHandlerService.prototype.setId = function (component, id) {\r\n        return this.yjQuery(component).attr(ID_ATTRIBUTE, id);\r\n    };\r\n    /**\r\n     * Gets the smartEdit component id of a given component\r\n     *\r\n     * @param component the yjQuery component for which to get the id\r\n     *\r\n     * @returns the component id\r\n     */\r\n    /* @ngInject */ ComponentHandlerService.prototype.getId = function (component) {\r\n        return this.yjQuery(component).attr(ID_ATTRIBUTE);\r\n    };\r\n    /**\r\n     * Gets the smartEdit component id of a given component\r\n     *\r\n     * @param component the yjQuery component for which to get the id\r\n     *\r\n     * @returns the component id\r\n     */\r\n    /* @ngInject */ ComponentHandlerService.prototype.getUuid = function (component) {\r\n        return this.yjQuery(component).attr(UUID_ATTRIBUTE);\r\n    };\r\n    /**\r\n     * Gets the smartEdit component id of a given component\r\n     *\r\n     * @param component the yjQuery component for which to get the id\r\n     *\r\n     * @returns the component id\r\n     */\r\n    /* @ngInject */ ComponentHandlerService.prototype.getCatalogVersionUuid = function (component) {\r\n        return this.yjQuery(component).attr(CATALOG_VERSION_UUID_ATTRIBUTE);\r\n    };\r\n    /**\r\n     * Sets the smartEdit component type of a given component\r\n     *\r\n     * @param component the yjQuery component for which to set the type\r\n     * @param type the type to be set\r\n     *\r\n     * @returns component the yjQuery component\r\n     */\r\n    /* @ngInject */ ComponentHandlerService.prototype.setType = function (component, type) {\r\n        return this.yjQuery(component).attr(TYPE_ATTRIBUTE, type);\r\n    };\r\n    /**\r\n     * Gets the smartEdit component type of a given component\r\n     *\r\n     * @param component the yjQuery component for which to get the type\r\n     *\r\n     * @returns the component type\r\n     */\r\n    /* @ngInject */ ComponentHandlerService.prototype.getType = function (component) {\r\n        return this.yjQuery(component).attr(TYPE_ATTRIBUTE);\r\n    };\r\n    /**\r\n     * Gets the type that is relevant to be able to perform slot related operations for this components\r\n     * It typically is CONTAINER_TYPE_ATTRIBUTE when applicable and defaults to TYPE_ATTRIBUTE\r\n     *\r\n     * @param component the yjQuery component for which to get the type\r\n     *\r\n     * @returns the slot operations related type\r\n     */\r\n    /* @ngInject */ ComponentHandlerService.prototype.getSlotOperationRelatedType = function (component) {\r\n        var containerType = this.yjQuery(component).attr(CONTAINER_TYPE_ATTRIBUTE);\r\n        return containerType && this.yjQuery(component).attr(CONTAINER_ID_ATTRIBUTE)\r\n            ? containerType\r\n            : this.yjQuery(component).attr(TYPE_ATTRIBUTE);\r\n    };\r\n    /**\r\n     * Retrieves the DOM selector matching all smartEdit components that are not of type ContentSlot\r\n     *\r\n     * @returns components selector\r\n     */\r\n    /* @ngInject */ ComponentHandlerService.prototype.getAllComponentsSelector = function () {\r\n        return '.' + COMPONENT_CLASS + '[' + TYPE_ATTRIBUTE + \"!='ContentSlot']\";\r\n    };\r\n    /**\r\n     * Retrieves the DOM selector matching all smartEdit components that are of type ContentSlot\r\n     *\r\n     * @returns the slots selector\r\n     */\r\n    /* @ngInject */ ComponentHandlerService.prototype.getAllSlotsSelector = function () {\r\n        return '.' + COMPONENT_CLASS + '[' + TYPE_ATTRIBUTE + \"='ContentSlot']\";\r\n    };\r\n    /**\r\n     * Retrieves the the slot Uuid for a given element\r\n     *\r\n     * @param the DOM element which represents the component\r\n     *\r\n     * @returns the slot Uuid for that particular component\r\n     */\r\n    /* @ngInject */ ComponentHandlerService.prototype.getParentSlotUuidForComponent = function (component) {\r\n        return this.yjQuery(component)\r\n            .closest('[' + TYPE_ATTRIBUTE + '=' + CONTENT_SLOT_TYPE + ']')\r\n            .attr(UUID_ATTRIBUTE);\r\n    };\r\n    /**\r\n     * Determines whether the component identified by the provided smarteditComponentId and smarteditComponentType\r\n     * resides in a different catalog version to the one of the current page.\r\n     *\r\n     * @param smarteditComponentId the component id as per the smartEdit contract with the storefront\r\n     * @param smarteditComponentType the component type as per the smartEdit contract with the storefront\r\n     *\r\n     * @returns flag that evaluates to true if the component resides in a catalog version different to\r\n     * the one of the current page.  False otherwise.\r\n     */\r\n    /* @ngInject */ ComponentHandlerService.prototype.isExternalComponent = function (smarteditComponentId, smarteditComponentType) {\r\n        var component = this.getOriginalComponent(smarteditComponentId, smarteditComponentType);\r\n        var componentCatalogVersionUuid = this.getCatalogVersionUuid(component);\r\n        return (componentCatalogVersionUuid !==\r\n            this.getBodyClassAttributeByRegEx(PageInfoService.PATTERN_SMARTEDIT_CATALOG_VERSION_UUID));\r\n    };\r\n    /**\r\n     * @param pattern Pattern of class names to search for\r\n     *\r\n     * @returns Class attributes from the body element of the storefront\r\n     */\r\n    /* @ngInject */ ComponentHandlerService.prototype.getBodyClassAttributeByRegEx = function (pattern) {\r\n        try {\r\n            var bodyClass = this.yjQuery('body').attr('class');\r\n            return pattern.exec(bodyClass)[1];\r\n        }\r\n        catch (_a) {\r\n            throw {\r\n                name: 'InvalidStorefrontPageError',\r\n                message: 'Error: the page is not a valid storefront page.'\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * This method can only be invoked from the smartEdit application and not the smartEdit container.\r\n     * Get first level smartEdit component children for a given node, regardless how deep they are found.\r\n     * The returned children may have different depths relatively to the parent:\r\n     *\r\n     * ### Example\r\n     *\r\n     * \t    <body>\r\n     * \t\t    <div>\r\n     * \t\t\t    <component smartedit-component-id=\"1\">\r\n     * \t\t\t\t    <component smartedit-component-id=\"1_1\"></component>\r\n     * \t\t\t    </component>\r\n     * \t\t\t    <component smartedit-component-id=\"2\">\r\n     * \t\t\t    \t<component smartedit-component-id=\"2_1\"></component>\r\n     * \t\t    \t</component>\r\n     * \t\t    </div>\r\n     * \t\t    <component smartedit-component-id=\"3\">\r\n     * \t\t\t    <component smartedit-component-id=\"3_1\"></component>\r\n     * \t\t    </component>\r\n     * \t\t    <div>\r\n     * \t\t\t    <div>\r\n     * \t\t\t\t    <component smartedit-component-id=\"4\">\r\n     * \t\t\t\t\t    <component smartedit-component-id=\"4_1\"></component>\r\n     * \t\t\t\t    </component>\r\n     * \t\t\t    </div>\r\n     * \t\t    </div>\r\n     * \t    </body>\r\n     *\r\n     *\r\n     * @param node any HTML/yjQuery Element\r\n     *\r\n     * @returns The list of first level smartEdit component children for a given node, regardless how deep they are found.\r\n     */\r\n    /* @ngInject */ ComponentHandlerService.prototype.getFirstSmartEditComponentChildren = function (htmlElement) {\r\n        var node = this.yjQuery(htmlElement);\r\n        var root = node[0];\r\n        if (!root) {\r\n            return [];\r\n        }\r\n        var collection = Array.from(root.getElementsByClassName(COMPONENT_CLASS)).filter(function (element) {\r\n            var current = element.parentElement;\r\n            /**\r\n             * The filter goes up the tree to see if any of the parents\r\n             * have the component selector. If it does, it's not a first child.\r\n             *\r\n             * If the parent is the htmlElement, the search stops there.\r\n             */\r\n            while (current !== root) {\r\n                if (current.classList.contains(COMPONENT_CLASS)) {\r\n                    return false;\r\n                }\r\n                current = current.parentElement;\r\n            }\r\n            return true;\r\n        });\r\n        return this.yjQuery(collection);\r\n    };\r\n    /**\r\n     * Get component clone in overlay\r\n     *\r\n     * @param the DOM element which represents the component\r\n     *\r\n     * @returns The component clone in overlay\r\n     */\r\n    /* @ngInject */ ComponentHandlerService.prototype.getComponentCloneInOverlay = function (component) {\r\n        var elementUuid = component.attr(ELEMENT_UUID_ATTRIBUTE);\r\n        return this.yjQuery('.' + OVERLAY_COMPONENT_CLASS + '[' + ELEMENT_UUID_ATTRIBUTE + \"='\" + elementUuid + \"']\");\r\n    };\r\n    /**\r\n     * Get all the slot uids from the DOM\r\n     *\r\n     * @returns An array of slot ids in the DOM\r\n     */\r\n    /* @ngInject */ ComponentHandlerService.prototype.getAllSlotUids = function () {\r\n        var slots = this.yjQuery(this.getAllSlotsSelector());\r\n        var that = this;\r\n        var slotIds = Array.prototype.slice.call(slots.map(function () {\r\n            return that.getId(this);\r\n        }));\r\n        return slotIds;\r\n    };\r\n    /* @ngInject */ ComponentHandlerService.prototype.buildComponentQuery = function (smarteditComponentId, smarteditComponentType, cssClass) {\r\n        var query = '';\r\n        query += cssClass ? '.' + cssClass : '';\r\n        query += '[' + ID_ATTRIBUTE + \"='\" + smarteditComponentId + \"']\";\r\n        query += '[' + TYPE_ATTRIBUTE + \"='\" + smarteditComponentType + \"']\";\r\n        return query;\r\n    };\r\n    /* @ngInject */ ComponentHandlerService.prototype.buildComponentsInSlotQuery = function (slotId) {\r\n        var query = '';\r\n        query += '.' + COMPONENT_CLASS;\r\n        query += '[' + ID_ATTRIBUTE + \"='\" + slotId + \"']\";\r\n        query += '[' + TYPE_ATTRIBUTE + \"='\" + CONTENT_SLOT_TYPE + \"']\";\r\n        query += ' > ';\r\n        query += '[' + ID_ATTRIBUTE + ']';\r\n        return query;\r\n    };\r\n    /* @ngInject */ ComponentHandlerService = __decorate([\r\n        SeDowngradeService(),\r\n        __param(0, Inject(YJQUERY_TOKEN)),\r\n        __metadata(\"design:paramtypes\", [Function])\r\n    ], /* @ngInject */ ComponentHandlerService);\r\n    return /* @ngInject */ ComponentHandlerService;\r\n}());\r\nexport { /* @ngInject */ ComponentHandlerService };\r\n//# sourceMappingURL=ComponentHandlerService.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types/lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit/src/services/PageInfoServiceInner.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"ComponentHandlerService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/services/ComponentHandlerService.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit/services/ComponentHandlerService.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"angular\" />\r\n/// <reference types=\"jquery\" />\r\n/// <reference types=\"eonasdan-bootstrap-datetimepicker\" />\r\n/**\r\n * Handles all get/set component related operations\r\n */\r\nexport declare class ComponentHandlerService {\r\n    private yjQuery;\r\n    constructor(yjQuery: JQueryStatic);\r\n    /**\r\n     * Retrieves a handler on the smartEdit overlay div\r\n     * This method can only be invoked from the smartEdit application and not the smartEdit container.\r\n     *\r\n     * @returns The #smarteditoverlay JQuery Element\r\n     */\r\n    getOverlay(): JQuery;\r\n    /**\r\n     * determines whether the overlay is visible\r\n     * This method can only be invoked from the smartEdit application and not the smartEdit iframe.\r\n     *\r\n     * @returns  true if the overlay is visible\r\n     */\r\n    isOverlayOn(): boolean;\r\n    /**\r\n     * Retrieves the yjQuery wrapper around a smartEdit component identified by its smartEdit id, smartEdit type and an optional class\r\n     * This method can only be invoked from the smartEdit application and not the smartEdit container.\r\n     *\r\n     * @param smarteditComponentId the component id as per the smartEdit contract with the storefront\r\n     * @param smarteditComponentType the component type as per the smartEdit contract with the storefront\r\n     * @param smarteditSlotId the slot id of the slot containing the component as per the smartEdit contract with the storefront\r\n     * @param cssClass the css Class to further restrict the search on. This parameter is optional.\r\n     *\r\n     * @returns  a yjQuery object wrapping the searched component\r\n     */\r\n    getComponentUnderSlot(smarteditComponentId: string, smarteditComponentType: string, smarteditSlotId: string, cssClass?: string): JQuery;\r\n    /**\r\n     * Retrieves the yjQuery wrapper around a smartEdit component identified by its smartEdit id, smartEdit type and an optional class\r\n     * This method can only be invoked from the smartEdit application and not the smartEdit container.\r\n     *\r\n     * @param smarteditComponentId the component id as per the smartEdit contract with the storefront\r\n     * @param smarteditComponentType the component type as per the smartEdit contract with the storefront\r\n     * @param cssClass the css Class to further restrict the search on. This parameter is optional.\r\n     *\r\n     * @returns a yjQuery object wrapping the searched component\r\n     */\r\n    getComponent(smarteditComponentId: string, smarteditComponentType: string, cssClass?: string): JQuery;\r\n    /**\r\n     * Retrieves the yjQuery wrapper around a smartEdit component of the original storefront layer identified by its smartEdit id, smartEdit type and slot ID\r\n     * This method can only be invoked from the smartEdit application and not the smartEdit container.\r\n     *\r\n     * @param smarteditComponentId the component id as per the smartEdit contract with the storefront\r\n     * @param smarteditComponentType the component type as per the smartEdit contract with the storefront\r\n     * @param slotId the ID of the slot within which the component resides\r\n     *\r\n     * @returns a yjQuery object wrapping the searched component\r\n     */\r\n    getOriginalComponentWithinSlot(smarteditComponentId: string, smarteditComponentType: string, slotId: string): JQuery;\r\n    /**\r\n     * Retrieves the yjQuery wrapper around a smartEdit component of the original storefront layer identified by its smartEdit id, smartEdit type\r\n     * This method can only be invoked from the smartEdit application and not the smartEdit container.\r\n     *\r\n     * @param smarteditComponentId the component id as per the smartEdit contract with the storefront\r\n     * @param smarteditComponentType the component type as per the smartEdit contract with the storefront\r\n     *\r\n     * @returns a yjQuery object wrapping the searched component\r\n     */\r\n    getOriginalComponent(smarteditComponentId: string, smarteditComponentType: string): JQuery;\r\n    /**\r\n     * Retrieves the yjQuery wrapper around a smartEdit component of the overlay layer identified by its smartEdit id, smartEdit type and slot ID\r\n     * This method can only be invoked from the smartEdit application and not the smartEdit container.\r\n     *\r\n     * @param smarteditComponentId the component id as per the smartEdit contract with the storefront\r\n     * @param smarteditComponentType the component type as per the smartEdit contract with the storefront\r\n     * @param slotId the ID of the slot within which the component resides\r\n     *\r\n     * @returns a yjQuery object wrapping the searched component\r\n     */\r\n    getOverlayComponentWithinSlot(smarteditComponentId: string, smarteditComponentType: string, slotId: string): JQuery;\r\n    /**\r\n     * Retrieves the yjQuery wrapper around the smartEdit component of the overlay layer corresponding to the storefront layer component passed as argument\r\n     * This method can only be invoked from the smartEdit application and not the smartEdit container.\r\n     *\r\n     * @param originalComponent the DOM element in the storefront layer\r\n     *\r\n     * @returns a yjQuery object wrapping the searched component\r\n     */\r\n    getOverlayComponent(originalComponent: JQuery): JQuery;\r\n    /**\r\n     * Retrieves the yjQuery wrapper around a smartEdit component of the overlay div identified by its smartEdit id, smartEdit type\r\n     * This method can only be invoked from the smartEdit application and not the smartEdit container.\r\n     *\r\n     * @param smarteditComponentId the component id as per the smartEdit contract with the storefront\r\n     * @param smarteditComponentType the component type as per the smartEdit contract with the storefront\r\n     *\r\n     * @returns a yjQuery object wrapping the searched component\r\n     *\r\n     */\r\n    getComponentInOverlay(smarteditComponentId: string, smarteditComponentType: string): JQuery;\r\n    /**\r\n     * Retrieves the the slot ID for a given element\r\n     *\r\n     * @param component the yjQuery component for which to search the parent\r\n     *\r\n     * @returns the slot ID for that particular component\r\n     */\r\n    getParentSlotForComponent(component: HTMLElement | JQuery): string;\r\n    /**\r\n     * Retrieves the position of a component within a slot based on visible components in the given slotId.\r\n     *\r\n     * @param slotId the slot id as per the smartEdit contract with the storefront\r\n     * @param componentId the component id as per the smartEdit contract with the storefront\r\n     *\r\n     * @returns the position of the component within a slot\r\n     */\r\n    getComponentPositionInSlot(slotId: string, componentId: string): number;\r\n    /**\r\n     * Retrieves the yjQuery wrapper around a list of smartEdit components contained in the slot identified by the given slotId.\r\n     * This method can only be invoked from the smartEdit application and not the smartEdit container.\r\n     *\r\n     * @param slotId the ID of the slot within which the component resides\r\n     *\r\n     * @returns The list of searched components yjQuery objects\r\n     */\r\n    getOriginalComponentsWithinSlot(slotId: string): JQuery[];\r\n    /**\r\n     * Gets the id that is relevant to be able to perform slot related operations for this components\r\n     * It typically is CONTAINER_ID_ATTRIBUTE when applicable and defaults to ID_ATTRIBUTE\r\n     *\r\n     * @param component the yjQuery component for which to get the id\r\n     *\r\n     * @returns the slot operations related id\r\n     */\r\n    getSlotOperationRelatedId(component: HTMLElement | JQuery): string;\r\n    /**\r\n     * Gets the id that is relevant to be able to perform slot related operations for this components\r\n     * It typically is {@link seConstantsModule.CONTAINER_ID_ATTRIBUTE} when applicable and defaults to {@link seConstantsModule.ID_ATTRIBUTE}\r\n     *\r\n     * @param component the yjQuery component for which to get the Uuid\r\n     *\r\n     * @returns the slot operations related Uuid\r\n     */\r\n    getSlotOperationRelatedUuid(component: HTMLElement | JQuery): string;\r\n    /**\r\n     * Retrieves the direct smartEdit component parent of a given component.\r\n     * The parent is fetched in the same layer (original storefront or smartEdit overlay) as the child\r\n     * This method can only be invoked from the smartEdit application and not the smartEdit container.\r\n     *\r\n     * @param component the yjQuery component for which to search a parent\r\n     *\r\n     * @returns a yjQuery object wrapping the smae-layer parent component\r\n     */\r\n    getParent(component: HTMLElement | JQuery): JQuery;\r\n    /**\r\n     * Returns the closest parent (or self) being a smartEdit component\r\n     *\r\n     * @param component the DOM/yjQuery element for which to search a parent\r\n     *\r\n     * @returns The closest closest parent (or self) being a smartEdit component\r\n     */\r\n    getClosestSmartEditComponent(component: HTMLElement | JQuery): JQuery;\r\n    /**\r\n     * Determines whether a DOM/yjQuery element is a smartEdit component\r\n     *\r\n     * @param component the DOM/yjQuery element for which to check if it's a SmartEdit component\r\n     *\r\n     * @returns true if DOM/yjQuery element is a smartEdit component\r\n     */\r\n    isSmartEditComponent(component: HTMLElement | JQuery): boolean;\r\n    /**\r\n     * Sets the smartEdit component id of a given component\r\n     *\r\n     * @param component the yjQuery component for which to set the id\r\n     * @param id the id to be set\r\n     *\r\n     * @returns component the yjQuery component\r\n     */\r\n    setId(component: HTMLElement | JQuery, id: string): JQuery;\r\n    /**\r\n     * Gets the smartEdit component id of a given component\r\n     *\r\n     * @param component the yjQuery component for which to get the id\r\n     *\r\n     * @returns the component id\r\n     */\r\n    getId(component: HTMLElement | JQuery): string;\r\n    /**\r\n     * Gets the smartEdit component id of a given component\r\n     *\r\n     * @param component the yjQuery component for which to get the id\r\n     *\r\n     * @returns the component id\r\n     */\r\n    getUuid(component: HTMLElement | JQuery): string;\r\n    /**\r\n     * Gets the smartEdit component id of a given component\r\n     *\r\n     * @param component the yjQuery component for which to get the id\r\n     *\r\n     * @returns the component id\r\n     */\r\n    getCatalogVersionUuid(component: HTMLElement | JQuery): string;\r\n    /**\r\n     * Sets the smartEdit component type of a given component\r\n     *\r\n     * @param component the yjQuery component for which to set the type\r\n     * @param type the type to be set\r\n     *\r\n     * @returns component the yjQuery component\r\n     */\r\n    setType(component: HTMLElement | JQuery, type: string): JQuery;\r\n    /**\r\n     * Gets the smartEdit component type of a given component\r\n     *\r\n     * @param component the yjQuery component for which to get the type\r\n     *\r\n     * @returns the component type\r\n     */\r\n    getType(component: HTMLElement | JQuery): string;\r\n    /**\r\n     * Gets the type that is relevant to be able to perform slot related operations for this components\r\n     * It typically is CONTAINER_TYPE_ATTRIBUTE when applicable and defaults to TYPE_ATTRIBUTE\r\n     *\r\n     * @param component the yjQuery component for which to get the type\r\n     *\r\n     * @returns the slot operations related type\r\n     */\r\n    getSlotOperationRelatedType(component: HTMLElement | JQuery): string;\r\n    /**\r\n     * Retrieves the DOM selector matching all smartEdit components that are not of type ContentSlot\r\n     *\r\n     * @returns components selector\r\n     */\r\n    getAllComponentsSelector(): string;\r\n    /**\r\n     * Retrieves the DOM selector matching all smartEdit components that are of type ContentSlot\r\n     *\r\n     * @returns the slots selector\r\n     */\r\n    getAllSlotsSelector(): string;\r\n    /**\r\n     * Retrieves the the slot Uuid for a given element\r\n     *\r\n     * @param the DOM element which represents the component\r\n     *\r\n     * @returns the slot Uuid for that particular component\r\n     */\r\n    getParentSlotUuidForComponent(component: HTMLElement | JQuery): string;\r\n    /**\r\n     * Determines whether the component identified by the provided smarteditComponentId and smarteditComponentType\r\n     * resides in a different catalog version to the one of the current page.\r\n     *\r\n     * @param smarteditComponentId the component id as per the smartEdit contract with the storefront\r\n     * @param smarteditComponentType the component type as per the smartEdit contract with the storefront\r\n     *\r\n     * @returns flag that evaluates to true if the component resides in a catalog version different to\r\n     * the one of the current page.  False otherwise.\r\n     */\r\n    isExternalComponent(smarteditComponentId: string, smarteditComponentType: string): boolean;\r\n    /**\r\n     * @param pattern Pattern of class names to search for\r\n     *\r\n     * @returns Class attributes from the body element of the storefront\r\n     */\r\n    getBodyClassAttributeByRegEx(pattern: RegExp): string;\r\n    /**\r\n     * This method can only be invoked from the smartEdit application and not the smartEdit container.\r\n     * Get first level smartEdit component children for a given node, regardless how deep they are found.\r\n     * The returned children may have different depths relatively to the parent:\r\n     *\r\n     * ### Example\r\n     *\r\n     * \t    <body>\r\n     * \t\t    <div>\r\n     * \t\t\t    <component smartedit-component-id=\"1\">\r\n     * \t\t\t\t    <component smartedit-component-id=\"1_1\"></component>\r\n     * \t\t\t    </component>\r\n     * \t\t\t    <component smartedit-component-id=\"2\">\r\n     * \t\t\t    \t<component smartedit-component-id=\"2_1\"></component>\r\n     * \t\t    \t</component>\r\n     * \t\t    </div>\r\n     * \t\t    <component smartedit-component-id=\"3\">\r\n     * \t\t\t    <component smartedit-component-id=\"3_1\"></component>\r\n     * \t\t    </component>\r\n     * \t\t    <div>\r\n     * \t\t\t    <div>\r\n     * \t\t\t\t    <component smartedit-component-id=\"4\">\r\n     * \t\t\t\t\t    <component smartedit-component-id=\"4_1\"></component>\r\n     * \t\t\t\t    </component>\r\n     * \t\t\t    </div>\r\n     * \t\t    </div>\r\n     * \t    </body>\r\n     *\r\n     *\r\n     * @param node any HTML/yjQuery Element\r\n     *\r\n     * @returns The list of first level smartEdit component children for a given node, regardless how deep they are found.\r\n     */\r\n    getFirstSmartEditComponentChildren(htmlElement: HTMLElement | JQuery): JQuery[];\r\n    /**\r\n     * Get component clone in overlay\r\n     *\r\n     * @param the DOM element which represents the component\r\n     *\r\n     * @returns The component clone in overlay\r\n     */\r\n    getComponentCloneInOverlay(component: JQuery): JQuery;\r\n    /**\r\n     * Get all the slot uids from the DOM\r\n     *\r\n     * @returns An array of slot ids in the DOM\r\n     */\r\n    getAllSlotUids(): string[];\r\n    private buildComponentQuery;\r\n    private buildComponentsInSlotQuery;\r\n}\r\n"}}

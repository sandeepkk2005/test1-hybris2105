{"code":"import { __decorate } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { CompileHtmlModule } from '../../directives/CompileHtmlModule';\r\nimport { ModalWizardNavBarComponent } from './components/ModalWizardNavBarComponent';\r\nimport { ModalWizardStepOutletComponent } from './components/ModalWizardStepOutletComponent';\r\nimport { ModalWizardTemplateComponent } from './components/ModalWizardTemplateComponent';\r\nimport { DefaultWizardActionStrategy } from './services/DefaultWizardActionStrategy';\r\nimport { ModalWizard } from './services/ModalWizard';\r\nimport { WizardActions } from './services/WizardActions';\r\n/**\r\n * Module containing all wizard related services\r\n * # Creating a modal wizard in a few simple steps\r\n *\r\n * For AngularJS usage:\r\n *\r\n * 1. Inject {@link ModalWizard} where you want to use the wizard.\r\n * 2. Create a new controller for your wizard. This controller will be used for all steps of the wizard.\r\n * 3. Implement a function in your new controller called getWizardConfig that returns a {@link ModalWizardConfig}\r\n * 4. Use [open]{@link ModalWizard#open} method, passing in your new controller\r\n *\r\n * For Angular usage\r\n * 1. Import WizardModule from \"smarteditcommons\" to your module imports\r\n * 2. Inject {@link ModalWizard} using ModalWizard constructor from \"smarteditcommons\".\r\n * 3. Create a new component controller for your wizard. This component will be used for all steps of the wizard.\r\n * 4. Create step components to be rendered inside the wizard. If access to component controller is needed, inject the parent reference\r\n * 5. Implement a method in your new controller called getWizardConfig that returns a {@link ModalWizardConfig}\r\n * 6. Use [open]{@link ModalWizard#open} method, passing in your new controller\r\n *\r\n * ### Example AngularJS\r\n *\r\n *      \\@SeInjectable()\r\n *      export class MyAngularJsWizardService {\r\n * \t\t    constructor(private modalWizard) {}\r\n * \t\t    open() {\r\n * \t\t\t    this.modalWizard.open({\r\n * \t\t\t\t    controller: (wizardManager: any) => {\r\n * \t\t\t\t\t    'ngInject';\r\n * \t\t\t\t\t    return {\r\n * \t\t\t\t\t\t        steps: [{\r\n * \t\t\t\t\t\t\t    id: 'step1',\r\n * \t\t\t\t\t\t\t    name: 'i18n.step1.name',\r\n * \t\t\t\t\t\t\t    title: 'i18n.step1.title',\r\n * \t\t\t\t\t\t\t    templateUrl: 'some/template1.html'\r\n * \t\t\t\t\t\t    }, {\r\n * \t\t\t\t\t\t\t    id: 'step2',\r\n * \t\t\t\t\t\t\t    name: 'i18n.step2.name',\r\n * \t\t\t\t\t\t\t    title: 'i18n.step2.title',\r\n * \t\t\t\t\t\t\t    templateUrl: 'some/template2.html'\r\n * \t\t\t\t\t\t    }]\r\n * \t\t\t\t\t    };\r\n * \t\t\t\t    }\r\n * \t\t\t    });\r\n * \t\t    }\r\n *      }\r\n *\r\n * ### Example Angular\r\n *\r\n *      export class MyAngularWizardService {\r\n * \t\t    constructor(private modalWizard: ModalWizard) {}\r\n * \t\t    open() {\r\n * \t\t\t    this.modalWizard.open({\r\n *                  component: MyWizardControllerComponent,\r\n * \t\t\t    });\r\n * \t\t    }\r\n *      }\r\n *\r\n */\r\nvar WizardModule = /** @class */ (function () {\r\n    function WizardModule() {\r\n    }\r\n    WizardModule = __decorate([\r\n        NgModule({\r\n            imports: [CommonModule, CompileHtmlModule, TranslateModule],\r\n            providers: [ModalWizard, WizardActions, DefaultWizardActionStrategy],\r\n            declarations: [\r\n                ModalWizardTemplateComponent,\r\n                ModalWizardNavBarComponent,\r\n                ModalWizardStepOutletComponent\r\n            ],\r\n            entryComponents: [\r\n                ModalWizardTemplateComponent,\r\n                ModalWizardNavBarComponent,\r\n                ModalWizardStepOutletComponent\r\n            ]\r\n        })\r\n    ], WizardModule);\r\n    return WizardModule;\r\n}());\r\nexport { WizardModule };\r\n//# sourceMappingURL=WizardModule.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/common@8.2.14_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@angular/common/common.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@ngx-translate/core@11.0.1_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@ngx-translate/core/ngx-translate-core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/directives/CompileHtmlModule.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/wizard/components/ModalWizardNavBarComponent.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/wizard/components/ModalWizardStepOutletComponent.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/wizard/components/ModalWizardTemplateComponent.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/wizard/services/DefaultWizardActionStrategy.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/wizard/services/ModalWizard.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/wizard/services/WizardActions.ts"],"map":"{\"version\":3,\"file\":\"WizardModule.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/wizard/WizardModule.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAC/C,OAAO,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AACzC,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAC;AAEtD,OAAO,EAAE,iBAAiB,EAAE,MAAM,oCAAoC,CAAC;AACvE,OAAO,EAAE,0BAA0B,EAAE,MAAM,yCAAyC,CAAC;AACrF,OAAO,EAAE,8BAA8B,EAAE,MAAM,6CAA6C,CAAC;AAC7F,OAAO,EAAE,4BAA4B,EAAE,MAAM,2CAA2C,CAAC;AACzF,OAAO,EAAE,2BAA2B,EAAE,MAAM,wCAAwC,CAAC;AACrF,OAAO,EAAE,WAAW,EAAE,MAAM,wBAAwB,CAAC;AACrD,OAAO,EAAE,aAAa,EAAE,MAAM,0BAA0B,CAAC;AAEzD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAyDG;AAeH;IAAA;IAA2B,CAAC;IAAf,YAAY;QAdxB,QAAQ,CAAC;YACN,OAAO,EAAE,CAAC,YAAY,EAAE,iBAAiB,EAAE,eAAe,CAAC;YAC3D,SAAS,EAAE,CAAC,WAAW,EAAE,aAAa,EAAE,2BAA2B,CAAC;YACpE,YAAY,EAAE;gBACV,4BAA4B;gBAC5B,0BAA0B;gBAC1B,8BAA8B;aACjC;YACD,eAAe,EAAE;gBACb,4BAA4B;gBAC5B,0BAA0B;gBAC1B,8BAA8B;aACjC;SACJ,CAAC;OACW,YAAY,CAAG;IAAD,mBAAC;CAAA,AAA5B,IAA4B;SAAf,YAAY\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/services/wizard/WizardModule.d.ts","writeByteOrderMark":false,"text":"/**\r\n * Module containing all wizard related services\r\n * # Creating a modal wizard in a few simple steps\r\n *\r\n * For AngularJS usage:\r\n *\r\n * 1. Inject {@link ModalWizard} where you want to use the wizard.\r\n * 2. Create a new controller for your wizard. This controller will be used for all steps of the wizard.\r\n * 3. Implement a function in your new controller called getWizardConfig that returns a {@link ModalWizardConfig}\r\n * 4. Use [open]{@link ModalWizard#open} method, passing in your new controller\r\n *\r\n * For Angular usage\r\n * 1. Import WizardModule from \"smarteditcommons\" to your module imports\r\n * 2. Inject {@link ModalWizard} using ModalWizard constructor from \"smarteditcommons\".\r\n * 3. Create a new component controller for your wizard. This component will be used for all steps of the wizard.\r\n * 4. Create step components to be rendered inside the wizard. If access to component controller is needed, inject the parent reference\r\n * 5. Implement a method in your new controller called getWizardConfig that returns a {@link ModalWizardConfig}\r\n * 6. Use [open]{@link ModalWizard#open} method, passing in your new controller\r\n *\r\n * ### Example AngularJS\r\n *\r\n *      \\@SeInjectable()\r\n *      export class MyAngularJsWizardService {\r\n * \t\t    constructor(private modalWizard) {}\r\n * \t\t    open() {\r\n * \t\t\t    this.modalWizard.open({\r\n * \t\t\t\t    controller: (wizardManager: any) => {\r\n * \t\t\t\t\t    'ngInject';\r\n * \t\t\t\t\t    return {\r\n * \t\t\t\t\t\t        steps: [{\r\n * \t\t\t\t\t\t\t    id: 'step1',\r\n * \t\t\t\t\t\t\t    name: 'i18n.step1.name',\r\n * \t\t\t\t\t\t\t    title: 'i18n.step1.title',\r\n * \t\t\t\t\t\t\t    templateUrl: 'some/template1.html'\r\n * \t\t\t\t\t\t    }, {\r\n * \t\t\t\t\t\t\t    id: 'step2',\r\n * \t\t\t\t\t\t\t    name: 'i18n.step2.name',\r\n * \t\t\t\t\t\t\t    title: 'i18n.step2.title',\r\n * \t\t\t\t\t\t\t    templateUrl: 'some/template2.html'\r\n * \t\t\t\t\t\t    }]\r\n * \t\t\t\t\t    };\r\n * \t\t\t\t    }\r\n * \t\t\t    });\r\n * \t\t    }\r\n *      }\r\n *\r\n * ### Example Angular\r\n *\r\n *      export class MyAngularWizardService {\r\n * \t\t    constructor(private modalWizard: ModalWizard) {}\r\n * \t\t    open() {\r\n * \t\t\t    this.modalWizard.open({\r\n *                  component: MyWizardControllerComponent,\r\n * \t\t\t    });\r\n * \t\t    }\r\n *      }\r\n *\r\n */\r\nexport declare class WizardModule {\r\n}\r\n"}}

{"code":"import { __awaiter, __decorate, __generator, __metadata, __spreadArrays } from \"tslib\";\r\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { CrossFrameEventService, EVENT_CONTENT_CATALOG_UPDATE, IAlertService, ICatalogService, ISharedDataService, IWaitDialogService, LogService, SeDowngradeComponent, SystemEventService, TimerService, EXPERIENCE_STORAGE_KEY } from 'smarteditcommons';\r\nimport { DEFAULT_SYNCHRONIZATION_POLLING } from '../../constants';\r\nimport { synchronizationUtils } from '../../SynchronizationUtils';\r\nimport { SyncQueue } from '../../SyncQueue';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"SynchronizationPanelComponent\", {\r\n    selector: 'se-synchronization-panel',\r\n    template: \"<div class=\\\"se-sync-panel\\\"><se-message *ngIf=\\\"message\\\" [type]=\\\"message.type\\\"><ng-container se-message-description>{{ message.description }}</ng-container></se-message><div class=\\\"se-sync-panel__sync-info\\\" [style.visibility]=\\\"showItemList ? 'visible': 'hidden'\\\"><se-spinner [isSpinning]=\\\"isLoading\\\"></se-spinner><se-synchronization-panel-item *ngFor=\\\"let item of getAllItems(); let i = index\\\" class=\\\"se-sync-panel__row\\\" [index]=\\\"i\\\" [item]=\\\"item\\\" [rootItem]=\\\"getRootItem()\\\" [selectAllLabel]=\\\"selectAllLabel\\\" [disableList]=\\\"disableList\\\" [disableItem]=\\\"api.disableItem\\\" (selectionChange)=\\\"selectionChange($event)\\\"></se-synchronization-panel-item></div><div class=\\\"se-sync-panel__footer\\\" *ngIf=\\\"showFooter\\\"><button class=\\\"se-sync-panel__sync-btn fd-button--emphasized\\\" [disabled]=\\\"isSyncButtonDisabled()\\\" (click)=\\\"syncItems()\\\" translate=\\\"se.cms.actionitem.page.sync\\\"></button></div></div>\",\r\n    styles: [\".se-sync-panel__sync-info{max-height:300px;overflow-y:auto}.se-sync-panel__row{display:flex;flex-direction:row;align-items:center;justify-content:space-between;padding:0 20px;height:40px;border-bottom:1px solid #d9d9d9}.se-sync-panel__row:first-child{height:50px}.se-sync-panel__row:last-child{border-bottom:none}.se-sync-panel__footer{padding:20px;border-top:1px solid #d9d9d9;display:flex;flex-direction:row;align-items:center;justify-content:flex-end}.se-sync-panel__sync-btn{text-transform:capitalize;padding:0 20px;margin-left:8px}\"]\r\n});\r\nvar /* @ngInject */ SynchronizationPanelComponent = /** @class */ (function () {\r\n    function /* @ngInject */ SynchronizationPanelComponent(waitDialogService, logService, crossFrameEventService, systemEventService, timerService, alertService, translateService, sharedDataService, catalogService) {\r\n        var _this = this;\r\n        this.waitDialogService = waitDialogService;\r\n        this.logService = logService;\r\n        this.crossFrameEventService = crossFrameEventService;\r\n        this.systemEventService = systemEventService;\r\n        this.timerService = timerService;\r\n        this.alertService = alertService;\r\n        this.translateService = translateService;\r\n        this.sharedDataService = sharedDataService;\r\n        this.catalogService = catalogService;\r\n        this.getApi = new EventEmitter();\r\n        this.selectedItemsUpdate = new EventEmitter();\r\n        this.syncStatusReady = new EventEmitter();\r\n        this.showFooter = true;\r\n        this.showItemList = true;\r\n        this.message = null;\r\n        this.disableList = false;\r\n        this.isLoading = false;\r\n        this.SYNC_POLLING_SPEED_PREFIX = 'syncPanel-';\r\n        this.syncQueue = new SyncQueue();\r\n        this.api = {\r\n            selectAll: function () {\r\n                if (!_this.isRootItemExist()) {\r\n                    throw new Error(\"Synchronization status is not available. The 'selectAll' function should be used with 'onSyncStatusReady' event.\");\r\n                }\r\n                _this.toogleRootItem(true);\r\n            },\r\n            displayItemList: function (visible) {\r\n                _this.showItemList = visible;\r\n            },\r\n            disableItemList: function (disableList) {\r\n                _this.disableList = disableList;\r\n            },\r\n            setMessage: function (msgConfig) {\r\n                _this.message = msgConfig;\r\n            },\r\n            disableItem: null\r\n        };\r\n    }\r\n    /* @ngInject */ SynchronizationPanelComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.getApi.emit(this.api);\r\n        this.unsubscribeFastFetch = this.crossFrameEventService.subscribe(DEFAULT_SYNCHRONIZATION_POLLING.FAST_FETCH, function (id, data) { return _this.fetchSyncStatus(data); });\r\n        this.fetchSyncStatus();\r\n        this.resynchTimer = this.timerService.createTimer(function () { return _this.fetchSyncStatus(); }, DEFAULT_SYNCHRONIZATION_POLLING.SLOW_POLLING_TIME);\r\n        this.resynchTimer.start();\r\n    };\r\n    /* @ngInject */ SynchronizationPanelComponent.prototype.ngOnDestroy = function () {\r\n        var _this = this;\r\n        var finalizeTimer = this.timerService.createTimer(function () {\r\n            if (_this.syncQueue.isEmpty()) {\r\n                _this.resynchTimer.teardown();\r\n                _this.unsubscribeFastFetch();\r\n                _this.systemEventService.publishAsync(DEFAULT_SYNCHRONIZATION_POLLING.SLOW_DOWN, _this.SYNC_POLLING_SPEED_PREFIX + _this.itemId);\r\n                _this.toggleWaitModal(false);\r\n                finalizeTimer.teardown();\r\n            }\r\n            else {\r\n                _this.toggleWaitModal(true);\r\n            }\r\n        }, 200);\r\n        finalizeTimer.start();\r\n    };\r\n    /* @ngInject */ SynchronizationPanelComponent.prototype.syncItems = function () {\r\n        var _this = this;\r\n        var selectedItemPayloads = this.getSelectedItemPayloads();\r\n        var selectedItemPayloadIds = selectedItemPayloads.map(function (syncItemPayload) { return syncItemPayload.itemId; });\r\n        this.syncQueue.addItems(selectedItemPayloadIds);\r\n        if (this.atLeastOneSelectedItemExists()) {\r\n            this.toggleWaitModal(true);\r\n            return this.performSync(selectedItemPayloads).then(function () {\r\n                _this.speedUpPolling();\r\n            }, function () {\r\n                _this.logService.warn('[synchronizationPanel] - Could not perform synchronization.');\r\n                _this.toggleWaitModal(false);\r\n            });\r\n        }\r\n        else {\r\n            return Promise.resolve();\r\n        }\r\n    };\r\n    /* @ngInject */ SynchronizationPanelComponent.prototype.selectionChange = function (index) {\r\n        if (index === 0) {\r\n            this.toggleAllDependentItems();\r\n        }\r\n        this.saveCurrentlySelectedItemsInStorage();\r\n        this.selectedItemsUpdate.emit(this.getSelectedItems());\r\n    };\r\n    /* @ngInject */ SynchronizationPanelComponent.prototype.isSyncButtonDisabled = function () {\r\n        return this.disableList || this.noSelectedItems() || this.syncQueue.hasAtLeastOneItem();\r\n    };\r\n    /* @ngInject */ SynchronizationPanelComponent.prototype.fetchSyncStatus = function (eventData) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var rootItem;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (eventData && eventData.itemId !== this.itemId) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        this.isLoading = true;\r\n                        return [4 /*yield*/, this.getSyncStatus(this.itemId)];\r\n                    case 1:\r\n                        rootItem = _a.sent();\r\n                        this.setRootItem(rootItem);\r\n                        this.restoreSelectionAfterFetchingUpdatedItems();\r\n                        this.markExternalItems();\r\n                        this.showSyncErrors();\r\n                        this.updateSyncQueue();\r\n                        this.setExternalItemsCatalogVersionName();\r\n                        if (this.syncQueue.isEmpty()) {\r\n                            this.slowDownPolling();\r\n                            this.toggleWaitModal(false);\r\n                        }\r\n                        this.syncStatusReady.emit(this.getRootItem());\r\n                        this.isLoading = false;\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ SynchronizationPanelComponent.prototype.markExternalItems = function () {\r\n        var rootItem = this.getRootItem();\r\n        var rootItemCatalogVersion = rootItem.catalogVersionUuid;\r\n        var dependentItems = this.getDependentItems();\r\n        dependentItems.forEach(function (item) {\r\n            item.isExternal = item.catalogVersionUuid !== rootItemCatalogVersion;\r\n        });\r\n    };\r\n    /* @ngInject */ SynchronizationPanelComponent.prototype.getAllItems = function () {\r\n        return this.isRootItemExist() ? __spreadArrays([this.getRootItem()], this.getDependentItems()) : [];\r\n    };\r\n    /* @ngInject */ SynchronizationPanelComponent.prototype.setExternalItemsCatalogVersionName = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var experience, allItems, externalItems, catalogVersionPromises;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getCurrentExperience()];\r\n                    case 1:\r\n                        experience = _a.sent();\r\n                        allItems = this.getAllItems();\r\n                        externalItems = allItems.filter(function (item) { return synchronizationUtils.isExternalItem(item); });\r\n                        catalogVersionPromises = externalItems.map(function (externalItem) {\r\n                            return new Promise(function (resolve) { return __awaiter(_this, void 0, void 0, function () {\r\n                                var catalogName;\r\n                                return __generator(this, function (_a) {\r\n                                    switch (_a.label) {\r\n                                        case 0: return [4 /*yield*/, this.catalogService.getCatalogVersionByUuid(externalItem.catalogVersionUuid, experience.siteDescriptor.uid)];\r\n                                        case 1:\r\n                                            catalogName = (_a.sent()).catalogName;\r\n                                            externalItem.catalogVersionName = catalogName;\r\n                                            resolve(externalItem);\r\n                                            return [2 /*return*/];\r\n                                    }\r\n                                });\r\n                            }); });\r\n                        });\r\n                        return [4 /*yield*/, Promise.all(catalogVersionPromises)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ SynchronizationPanelComponent.prototype.slowDownPolling = function () {\r\n        this.resynchTimer.restart(DEFAULT_SYNCHRONIZATION_POLLING.SLOW_POLLING_TIME);\r\n        this.systemEventService.publishAsync(DEFAULT_SYNCHRONIZATION_POLLING.SLOW_DOWN, this.SYNC_POLLING_SPEED_PREFIX + this.itemId);\r\n    };\r\n    /* @ngInject */ SynchronizationPanelComponent.prototype.speedUpPolling = function () {\r\n        this.resynchTimer.restart(DEFAULT_SYNCHRONIZATION_POLLING.FAST_POLLING_TIME);\r\n        this.systemEventService.publishAsync(DEFAULT_SYNCHRONIZATION_POLLING.SPEED_UP, this.SYNC_POLLING_SPEED_PREFIX + this.itemId);\r\n    };\r\n    /* @ngInject */ SynchronizationPanelComponent.prototype.setRootItem = function (rootItem) {\r\n        this.rootItem = rootItem;\r\n    };\r\n    /* @ngInject */ SynchronizationPanelComponent.prototype.getRootItem = function () {\r\n        return this.rootItem;\r\n    };\r\n    /* @ngInject */ SynchronizationPanelComponent.prototype.isRootItemExist = function () {\r\n        return this.getRootItem() != null;\r\n    };\r\n    /* @ngInject */ SynchronizationPanelComponent.prototype.getDependentItems = function () {\r\n        return this.isRootItemExist() ? this.getRootItem().selectedDependencies : [];\r\n    };\r\n    /* @ngInject */ SynchronizationPanelComponent.prototype.getCurrentExperience = function () {\r\n        return this.sharedDataService.get(EXPERIENCE_STORAGE_KEY);\r\n    };\r\n    /* @ngInject */ SynchronizationPanelComponent.prototype.getSelectedItemPayloads = function () {\r\n        return this.getSelectedItems().map(function (_a) {\r\n            var itemId = _a.itemId, itemType = _a.itemType;\r\n            return ({\r\n                itemId: itemId,\r\n                itemType: itemType\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ SynchronizationPanelComponent.prototype.getSelectedItems = function () {\r\n        return this.getAllItems().filter(function (item) { return item.selected; });\r\n    };\r\n    /* @ngInject */ SynchronizationPanelComponent.prototype.toogleRootItem = function (selected) {\r\n        if (this.isRootItemExist()) {\r\n            var rootItem = this.getRootItem();\r\n            rootItem.selected = selected;\r\n            this.selectionChange(0);\r\n        }\r\n    };\r\n    /* @ngInject */ SynchronizationPanelComponent.prototype.toggleAllDependentItems = function () {\r\n        var _this = this;\r\n        this.getDependentItems()\r\n            .filter(function (item) { return !synchronizationUtils.isInSync(item); })\r\n            .filter(function (item) { return !synchronizationUtils.isExternalItem(item); })\r\n            .forEach(function (item) {\r\n            item.selected = _this.getRootItem().selected;\r\n        });\r\n    };\r\n    /* @ngInject */ SynchronizationPanelComponent.prototype.toggleWaitModal = function (show) {\r\n        if (show) {\r\n            this.waitDialogService.showWaitModal('se.sync.synchronizing');\r\n        }\r\n        else {\r\n            this.waitDialogService.hideWaitModal();\r\n        }\r\n    };\r\n    /* @ngInject */ SynchronizationPanelComponent.prototype.saveCurrentlySelectedItemsInStorage = function () {\r\n        this.selectedItemsStorage = this.getSelectedItems();\r\n    };\r\n    /* @ngInject */ SynchronizationPanelComponent.prototype.getSelectedItemsFromStorage = function () {\r\n        return this.selectedItemsStorage || [];\r\n    };\r\n    /* @ngInject */ SynchronizationPanelComponent.prototype.restoreSelectionAfterFetchingUpdatedItems = function () {\r\n        var selectedItemsFromStorage = this.getSelectedItemsFromStorage();\r\n        var selectedItemsFromStorageIds = selectedItemsFromStorage.map(function (item) { return item.itemId; });\r\n        this.getAllItems()\r\n            .filter(function (item) { return !synchronizationUtils.isInSync(item); })\r\n            .filter(function (item) { return selectedItemsFromStorageIds.indexOf(item.itemId) > -1; })\r\n            .forEach(function (item) { return (item.selected = true); });\r\n    };\r\n    /* @ngInject */ SynchronizationPanelComponent.prototype.updateSyncQueue = function () {\r\n        var _this = this;\r\n        var syncQueueWasNotEmpty = this.syncQueue.hasAtLeastOneItem();\r\n        var allItems = this.getAllItems();\r\n        allItems\r\n            .filter(function (item) { return _this.syncQueue.itemExists(item); })\r\n            .filter(function (item) {\r\n            return !(synchronizationUtils.isSyncInProgress(item) ||\r\n                synchronizationUtils.isInNotSync(item));\r\n        })\r\n            .forEach(function (item) { return _this.syncQueue.removeItem(item); });\r\n        allItems\r\n            .filter(function (item) { return !_this.syncQueue.itemExists(item); })\r\n            .filter(function (item) { return synchronizationUtils.isSyncInProgress(item); })\r\n            .forEach(function (item) { return _this.syncQueue.addItems([item.itemId]); });\r\n        var syncQueueIsNowEmpty = this.syncQueue.isEmpty();\r\n        if (syncQueueWasNotEmpty && syncQueueIsNowEmpty) {\r\n            this.systemEventService.publishAsync(EVENT_CONTENT_CATALOG_UPDATE);\r\n        }\r\n    };\r\n    /* @ngInject */ SynchronizationPanelComponent.prototype.showSyncErrors = function () {\r\n        var _this = this;\r\n        var itemsInErrors = this.getAllItems()\r\n            .filter(function (item) { return _this.syncQueue.itemExists(item); })\r\n            .filter(function (item) { return synchronizationUtils.isSyncInFailed(item); })\r\n            .map(function (item) { return item.itemId; });\r\n        if (itemsInErrors.length > 0) {\r\n            this.alertService.showDanger({\r\n                message: this.translateService.instant('se.cms.synchronization.panel.failure.message', {\r\n                    items: itemsInErrors.join(' ')\r\n                })\r\n            });\r\n        }\r\n    };\r\n    /* @ngInject */ SynchronizationPanelComponent.prototype.atLeastOneSelectedItemExists = function () {\r\n        return this.getSelectedItems().length > 0;\r\n    };\r\n    /* @ngInject */ SynchronizationPanelComponent.prototype.noSelectedItems = function () {\r\n        return this.getSelectedItems().length === 0;\r\n    };\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], /* @ngInject */ SynchronizationPanelComponent.prototype, \"itemId\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], /* @ngInject */ SynchronizationPanelComponent.prototype, \"selectAllLabel\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Function)\r\n    ], /* @ngInject */ SynchronizationPanelComponent.prototype, \"getSyncStatus\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Function)\r\n    ], /* @ngInject */ SynchronizationPanelComponent.prototype, \"performSync\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], /* @ngInject */ SynchronizationPanelComponent.prototype, \"showFooter\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", Object)\r\n    ], /* @ngInject */ SynchronizationPanelComponent.prototype, \"getApi\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", Object)\r\n    ], /* @ngInject */ SynchronizationPanelComponent.prototype, \"selectedItemsUpdate\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", Object)\r\n    ], /* @ngInject */ SynchronizationPanelComponent.prototype, \"syncStatusReady\", void 0);\r\n    /* @ngInject */ SynchronizationPanelComponent = __decorate([\r\n        SeDowngradeComponent(),\r\n        Component({\r\n            selector: 'se-synchronization-panel',\r\n            template: \"<div class=\\\"se-sync-panel\\\"><se-message *ngIf=\\\"message\\\" [type]=\\\"message.type\\\"><ng-container se-message-description>{{ message.description }}</ng-container></se-message><div class=\\\"se-sync-panel__sync-info\\\" [style.visibility]=\\\"showItemList ? 'visible': 'hidden'\\\"><se-spinner [isSpinning]=\\\"isLoading\\\"></se-spinner><se-synchronization-panel-item *ngFor=\\\"let item of getAllItems(); let i = index\\\" class=\\\"se-sync-panel__row\\\" [index]=\\\"i\\\" [item]=\\\"item\\\" [rootItem]=\\\"getRootItem()\\\" [selectAllLabel]=\\\"selectAllLabel\\\" [disableList]=\\\"disableList\\\" [disableItem]=\\\"api.disableItem\\\" (selectionChange)=\\\"selectionChange($event)\\\"></se-synchronization-panel-item></div><div class=\\\"se-sync-panel__footer\\\" *ngIf=\\\"showFooter\\\"><button class=\\\"se-sync-panel__sync-btn fd-button--emphasized\\\" [disabled]=\\\"isSyncButtonDisabled()\\\" (click)=\\\"syncItems()\\\" translate=\\\"se.cms.actionitem.page.sync\\\"></button></div></div>\",\r\n            styles: [\".se-sync-panel__sync-info{max-height:300px;overflow-y:auto}.se-sync-panel__row{display:flex;flex-direction:row;align-items:center;justify-content:space-between;padding:0 20px;height:40px;border-bottom:1px solid #d9d9d9}.se-sync-panel__row:first-child{height:50px}.se-sync-panel__row:last-child{border-bottom:none}.se-sync-panel__footer{padding:20px;border-top:1px solid #d9d9d9;display:flex;flex-direction:row;align-items:center;justify-content:flex-end}.se-sync-panel__sync-btn{text-transform:capitalize;padding:0 20px;margin-left:8px}\"]\r\n        }),\r\n        __metadata(\"design:paramtypes\", [IWaitDialogService,\r\n            LogService,\r\n            CrossFrameEventService,\r\n            SystemEventService,\r\n            TimerService,\r\n            IAlertService,\r\n            TranslateService,\r\n            ISharedDataService,\r\n            ICatalogService])\r\n    ], /* @ngInject */ SynchronizationPanelComponent);\r\n    return /* @ngInject */ SynchronizationPanelComponent;\r\n}());\r\nexport { /* @ngInject */ SynchronizationPanelComponent };\r\n//# sourceMappingURL=SynchronizationPanelComponent.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@ngx-translate/core@11.0.1_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@ngx-translate/core/ngx-translate-core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/src/modules/synchronizationPanel/constants.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/src/modules/synchronizationPanel/SynchronizationUtils.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/src/modules/synchronizationPanel/SyncQueue.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/src/modules/synchronizationPanel/types.ts"],"map":"{\"version\":3,\"file\":\"SynchronizationPanelComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/modules/synchronizationPanel/components/synchronizationPanel/SynchronizationPanelComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/modules/synchronizationPanel/components/synchronizationPanel/SynchronizationPanelComponent.d.ts","writeByteOrderMark":false,"text":"import { EventEmitter, OnDestroy, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { CrossFrameEventService, IAlertService, ICatalogService, ISharedDataService, IWaitDialogService, LogService, SystemEventService, TimerService, TypedMap } from 'smarteditcommons';\r\nimport { ISynchronizationPanelApi, ISyncStatusItem } from '../../types';\r\nexport declare class SynchronizationPanelComponent implements OnInit, OnDestroy {\r\n    private waitDialogService;\r\n    private logService;\r\n    private crossFrameEventService;\r\n    private systemEventService;\r\n    private timerService;\r\n    private alertService;\r\n    private translateService;\r\n    private sharedDataService;\r\n    private catalogService;\r\n    itemId: string;\r\n    selectAllLabel: string;\r\n    getSyncStatus: (id: string) => Promise<ISyncStatusItem>;\r\n    performSync: (payload: TypedMap<string>[]) => Promise<any>;\r\n    showFooter: boolean;\r\n    getApi: EventEmitter<ISynchronizationPanelApi>;\r\n    selectedItemsUpdate: EventEmitter<ISyncStatusItem[]>;\r\n    syncStatusReady: EventEmitter<ISyncStatusItem>;\r\n    showItemList: boolean;\r\n    message: {\r\n        type: string;\r\n        description: string;\r\n    };\r\n    isLoading: boolean;\r\n    disableList: boolean;\r\n    private SYNC_POLLING_SPEED_PREFIX;\r\n    private syncQueue;\r\n    private selectedItemsStorage;\r\n    private rootItem;\r\n    private resynchTimer;\r\n    private unsubscribeFastFetch;\r\n    private api;\r\n    constructor(waitDialogService: IWaitDialogService, logService: LogService, crossFrameEventService: CrossFrameEventService, systemEventService: SystemEventService, timerService: TimerService, alertService: IAlertService, translateService: TranslateService, sharedDataService: ISharedDataService, catalogService: ICatalogService);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    syncItems(): Promise<void>;\r\n    selectionChange(index?: number): void;\r\n    isSyncButtonDisabled(): boolean;\r\n    fetchSyncStatus(eventData?: ISyncStatusItem): Promise<void>;\r\n    markExternalItems(): void;\r\n    getAllItems(): ISyncStatusItem[];\r\n    private setExternalItemsCatalogVersionName;\r\n    private slowDownPolling;\r\n    private speedUpPolling;\r\n    private setRootItem;\r\n    private getRootItem;\r\n    private isRootItemExist;\r\n    private getDependentItems;\r\n    private getCurrentExperience;\r\n    private getSelectedItemPayloads;\r\n    private getSelectedItems;\r\n    private toogleRootItem;\r\n    private toggleAllDependentItems;\r\n    private toggleWaitModal;\r\n    private saveCurrentlySelectedItemsInStorage;\r\n    private getSelectedItemsFromStorage;\r\n    private restoreSelectionAfterFetchingUpdatedItems;\r\n    private updateSyncQueue;\r\n    private showSyncErrors;\r\n    private atLeastOneSelectedItemExists;\r\n    private noSelectedItems;\r\n}\r\n"}}

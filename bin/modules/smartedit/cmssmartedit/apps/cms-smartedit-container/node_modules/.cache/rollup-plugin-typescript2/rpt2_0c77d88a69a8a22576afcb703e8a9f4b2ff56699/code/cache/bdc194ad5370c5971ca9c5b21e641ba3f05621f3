{"code":"import { __awaiter, __decorate, __generator, __metadata } from \"tslib\";\r\nimport { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\r\nimport { FILE_VALIDATION_CONFIG, SeDowngradeComponent } from 'smarteditcommons';\r\nimport { MediaService } from '../../services';\r\nvar mediaSelectorI18nKeys = {\r\n    UPLOAD: 'se.media.format.upload',\r\n    REPLACE: 'se.media.format.replace',\r\n    UNDER_EDIT: 'se.media.format.under.edit',\r\n    REMOVE: 'se.media.format.remove'\r\n};\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"MediaFormatComponent\", {\r\n    selector: 'se-media-format',\r\n    template: \"<div class=\\\"se-media-format\\\" [ngClass]=\\\"mediaFormat\\\"><div class=\\\"se-media-format__screen-type\\\" [translate]=\\\"mediaFormatI18nKey\\\"></div><se-media-format-uploaded *ngIf=\\\"isMediaPreviewEnabled()\\\" [media]=\\\"media\\\" [replaceLabelI18nKey]=\\\"mediaSelectorI18nKeys.REPLACE\\\" [acceptedFileTypes]=\\\"acceptedFileTypes\\\" [isFieldDisabled]=\\\"isFieldDisabled\\\" (onFileSelect)=\\\"onFileSelectorFileSelect($event)\\\" (onDelete)=\\\"onRemoveButtonClick()\\\"></se-media-format-uploaded><div class=\\\"se-media--absent\\\" *ngIf=\\\"isMediaAbsent()\\\"><se-media-file-selector *ngIf=\\\"isEditable\\\" [selectionMode]=\\\"'upload'\\\" [labelI18nKey]=\\\"mediaSelectorI18nKeys.UPLOAD\\\" [acceptedFileTypes]=\\\"acceptedFileTypes\\\" [customClass]=\\\"isFieldDisabled ? 'file-selector-disabled' : ''\\\" [disabled]=\\\"isFieldDisabled\\\" (onFileSelect)=\\\"onFileSelectorFileSelect($event)\\\"></se-media-file-selector><se-media-file-selector *ngIf=\\\"!isEditable\\\" [selectionMode]=\\\"'upload'\\\" [labelI18nKey]=\\\"mediaSelectorI18nKeys.UPLOAD\\\" [acceptedFileTypes]=\\\"acceptedFileTypes\\\" [customClass]=\\\"!isEditable ? 'file-selector-disabled' : ''\\\" [disabled]=\\\"!isEditable\\\" (onFileSelect)=\\\"onFileSelectorFileSelect($event)\\\"></se-media-file-selector></div><div *ngIf=\\\"isUnderEdit\\\" class=\\\"se-media--edit-wrapper\\\"><se-media-file-selector class=\\\"se-media--edit\\\" [labelI18nKey]=\\\"mediaSelectorI18nKeys.UPLOAD\\\" [acceptedFileTypes]=\\\"acceptedFileTypes\\\" [customClass]=\\\"'file-selector-disabled'\\\" [disabled]=\\\"true\\\" (onFileSelect)=\\\"onFileSelectorFileSelect($event)\\\"></se-media-file-selector><span class=\\\"se-media-preview--edit\\\" [translate]=\\\"mediaSelectorI18nKeys.UNDER_EDIT\\\"></span></div><ng-container *ngIf=\\\"!isUnderEdit\\\"><div class=\\\"error-input se-media-format__error\\\" *ngFor=\\\"let error of getErrors()\\\"><span>{{ error }}</span></div></ng-container></div>\",\r\n    styles: [\".se-media-format{height:100%}.se-media-format__screen-type{font-weight:700;padding-top:4px;padding-bottom:10px;color:#32363a}.se-media-format__error{color:#b00}.se-media--absent{display:flex;flex-direction:row;align-items:center;justify-content:center;height:75px;border:1px dashed #d9d9d9}.se-media--edit-wrapper{height:100%}.se-media--edit{display:flex;flex-direction:row;align-items:center;justify-content:center}.se-media-preview--edit{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;word-break:break-all;display:block;font-style:italic}\", \".se-media-preview-container{position:relative}.se-media-preview-container .se-media-preview__image-wrapper{display:flex;flex-direction:row;align-items:center;justify-content:center;height:75px;background-color:#edeff0}.se-media-preview-container .se-media-preview__image-thumbnail{max-width:100%;max-height:100%}\"],\r\n    encapsulation: ViewEncapsulation.None\r\n});\r\nvar /* @ngInject */ MediaFormatComponent = /** @class */ (function () {\r\n    function /* @ngInject */ MediaFormatComponent(mediaService) {\r\n        this.mediaService = mediaService;\r\n        this.onFileSelect = new EventEmitter();\r\n        this.onDelete = new EventEmitter();\r\n        this.media = null;\r\n        this.mediaSelectorI18nKeys = mediaSelectorI18nKeys;\r\n        this.acceptedFileTypes = FILE_VALIDATION_CONFIG.ACCEPTED_FILE_TYPES;\r\n    }\r\n    /* @ngInject */ MediaFormatComponent.prototype.ngOnInit = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                this.mediaFormatI18nKey = \"se.media.format.\" + this.mediaFormat;\r\n                if (this.mediaUuid) {\r\n                    return [2 /*return*/, this.fetchAndSetMedia()];\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ MediaFormatComponent.prototype.ngOnChanges = function (changes) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var mediaUuidChange;\r\n            return __generator(this, function (_a) {\r\n                mediaUuidChange = changes.mediaUuid;\r\n                if (mediaUuidChange && !mediaUuidChange.firstChange) {\r\n                    if (this.mediaUuid) {\r\n                        return [2 /*return*/, this.fetchAndSetMedia()];\r\n                    }\r\n                    else {\r\n                        this.media = null;\r\n                    }\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ MediaFormatComponent.prototype.onFileSelectorFileSelect = function (file) {\r\n        this.onFileSelect.emit(file);\r\n    };\r\n    /* @ngInject */ MediaFormatComponent.prototype.onRemoveButtonClick = function () {\r\n        this.onDelete.emit();\r\n    };\r\n    /* @ngInject */ MediaFormatComponent.prototype.isMediaPreviewEnabled = function () {\r\n        var _a;\r\n        return this.mediaUuid && !this.isUnderEdit && !!((_a = this.media) === null || _a === void 0 ? void 0 : _a.code);\r\n    };\r\n    /* @ngInject */ MediaFormatComponent.prototype.isMediaAbsent = function () {\r\n        return !this.mediaUuid && !this.isUnderEdit;\r\n    };\r\n    /* @ngInject */ MediaFormatComponent.prototype.getErrors = function () {\r\n        var _this = this;\r\n        return (this.errorMessages || [])\r\n            .filter(function (error) { return error.format === _this.mediaFormat; })\r\n            .map(function (error) { return error.message; });\r\n    };\r\n    /* @ngInject */ MediaFormatComponent.prototype.fetchAndSetMedia = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this;\r\n                        return [4 /*yield*/, this.mediaService.getMedia(this.mediaUuid)];\r\n                    case 1:\r\n                        _a.media = _b.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Array)\r\n    ], /* @ngInject */ MediaFormatComponent.prototype, \"errorMessages\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], /* @ngInject */ MediaFormatComponent.prototype, \"isEditable\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], /* @ngInject */ MediaFormatComponent.prototype, \"isUnderEdit\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], /* @ngInject */ MediaFormatComponent.prototype, \"isFieldDisabled\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], /* @ngInject */ MediaFormatComponent.prototype, \"mediaUuid\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], /* @ngInject */ MediaFormatComponent.prototype, \"mediaFormat\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], /* @ngInject */ MediaFormatComponent.prototype, \"onFileSelect\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], /* @ngInject */ MediaFormatComponent.prototype, \"onDelete\", void 0);\r\n    /* @ngInject */ MediaFormatComponent = __decorate([\r\n        SeDowngradeComponent(),\r\n        Component({\r\n            selector: 'se-media-format',\r\n            template: \"<div class=\\\"se-media-format\\\" [ngClass]=\\\"mediaFormat\\\"><div class=\\\"se-media-format__screen-type\\\" [translate]=\\\"mediaFormatI18nKey\\\"></div><se-media-format-uploaded *ngIf=\\\"isMediaPreviewEnabled()\\\" [media]=\\\"media\\\" [replaceLabelI18nKey]=\\\"mediaSelectorI18nKeys.REPLACE\\\" [acceptedFileTypes]=\\\"acceptedFileTypes\\\" [isFieldDisabled]=\\\"isFieldDisabled\\\" (onFileSelect)=\\\"onFileSelectorFileSelect($event)\\\" (onDelete)=\\\"onRemoveButtonClick()\\\"></se-media-format-uploaded><div class=\\\"se-media--absent\\\" *ngIf=\\\"isMediaAbsent()\\\"><se-media-file-selector *ngIf=\\\"isEditable\\\" [selectionMode]=\\\"'upload'\\\" [labelI18nKey]=\\\"mediaSelectorI18nKeys.UPLOAD\\\" [acceptedFileTypes]=\\\"acceptedFileTypes\\\" [customClass]=\\\"isFieldDisabled ? 'file-selector-disabled' : ''\\\" [disabled]=\\\"isFieldDisabled\\\" (onFileSelect)=\\\"onFileSelectorFileSelect($event)\\\"></se-media-file-selector><se-media-file-selector *ngIf=\\\"!isEditable\\\" [selectionMode]=\\\"'upload'\\\" [labelI18nKey]=\\\"mediaSelectorI18nKeys.UPLOAD\\\" [acceptedFileTypes]=\\\"acceptedFileTypes\\\" [customClass]=\\\"!isEditable ? 'file-selector-disabled' : ''\\\" [disabled]=\\\"!isEditable\\\" (onFileSelect)=\\\"onFileSelectorFileSelect($event)\\\"></se-media-file-selector></div><div *ngIf=\\\"isUnderEdit\\\" class=\\\"se-media--edit-wrapper\\\"><se-media-file-selector class=\\\"se-media--edit\\\" [labelI18nKey]=\\\"mediaSelectorI18nKeys.UPLOAD\\\" [acceptedFileTypes]=\\\"acceptedFileTypes\\\" [customClass]=\\\"'file-selector-disabled'\\\" [disabled]=\\\"true\\\" (onFileSelect)=\\\"onFileSelectorFileSelect($event)\\\"></se-media-file-selector><span class=\\\"se-media-preview--edit\\\" [translate]=\\\"mediaSelectorI18nKeys.UNDER_EDIT\\\"></span></div><ng-container *ngIf=\\\"!isUnderEdit\\\"><div class=\\\"error-input se-media-format__error\\\" *ngFor=\\\"let error of getErrors()\\\"><span>{{ error }}</span></div></ng-container></div>\",\r\n            styles: [\".se-media-format{height:100%}.se-media-format__screen-type{font-weight:700;padding-top:4px;padding-bottom:10px;color:#32363a}.se-media-format__error{color:#b00}.se-media--absent{display:flex;flex-direction:row;align-items:center;justify-content:center;height:75px;border:1px dashed #d9d9d9}.se-media--edit-wrapper{height:100%}.se-media--edit{display:flex;flex-direction:row;align-items:center;justify-content:center}.se-media-preview--edit{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;word-break:break-all;display:block;font-style:italic}\", \".se-media-preview-container{position:relative}.se-media-preview-container .se-media-preview__image-wrapper{display:flex;flex-direction:row;align-items:center;justify-content:center;height:75px;background-color:#edeff0}.se-media-preview-container .se-media-preview__image-thumbnail{max-width:100%;max-height:100%}\"],\r\n            encapsulation: ViewEncapsulation.None\r\n        }),\r\n        __metadata(\"design:paramtypes\", [MediaService])\r\n    ], /* @ngInject */ MediaFormatComponent);\r\n    return /* @ngInject */ MediaFormatComponent;\r\n}());\r\nexport { /* @ngInject */ MediaFormatComponent };\r\n//# sourceMappingURL=MediaFormatComponent.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/genericEditor/media/services/index.ts"],"map":"{\"version\":3,\"file\":\"MediaFormatComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../src/components/genericEditor/media/components/mediaFormat/MediaFormatComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/components/genericEditor/media/components/mediaFormat/MediaFormatComponent.d.ts","writeByteOrderMark":false,"text":"import { EventEmitter, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { FILE_VALIDATION_CONFIG, GenericEditorFieldMessage } from 'smarteditcommons';\r\nimport { Media, MediaService } from '../../services';\r\ndeclare const mediaSelectorI18nKeys: {\r\n    UPLOAD: string;\r\n    REPLACE: string;\r\n    UNDER_EDIT: string;\r\n    REMOVE: string;\r\n};\r\nexport declare class MediaFormatComponent implements OnInit, OnChanges {\r\n    private mediaService;\r\n    errorMessages: GenericEditorFieldMessage[];\r\n    isEditable: boolean;\r\n    isUnderEdit: boolean;\r\n    isFieldDisabled: boolean;\r\n    mediaUuid: string | undefined;\r\n    mediaFormat: string;\r\n    onFileSelect: EventEmitter<FileList>;\r\n    onDelete: EventEmitter<void>;\r\n    media: Media | null;\r\n    mediaFormatI18nKey: string;\r\n    mediaSelectorI18nKeys: typeof mediaSelectorI18nKeys;\r\n    acceptedFileTypes: typeof FILE_VALIDATION_CONFIG.ACCEPTED_FILE_TYPES;\r\n    constructor(mediaService: MediaService);\r\n    ngOnInit(): Promise<void>;\r\n    ngOnChanges(changes: SimpleChanges): Promise<void>;\r\n    onFileSelectorFileSelect(file: FileList): void;\r\n    onRemoveButtonClick(): void;\r\n    isMediaPreviewEnabled(): boolean;\r\n    isMediaAbsent(): boolean;\r\n    getErrors(): string[];\r\n    private fetchAndSetMedia;\r\n}\r\nexport {};\r\n"}}

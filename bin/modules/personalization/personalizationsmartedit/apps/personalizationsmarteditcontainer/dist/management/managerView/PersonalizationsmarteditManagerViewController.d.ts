/// <reference types="angular-translate" />
import * as angular from "angular";
import { LoDashStatic } from 'lodash';
import { PersonalizationsmarteditContextService } from 'personalizationsmarteditcontainer/service/PersonalizationsmarteditContextServiceOuter';
import { PersonalizationsmarteditMessageHandler } from 'personalizationcommons';
import { PersonalizationsmarteditUtils } from 'personalizationcommons';
import { PersonalizationsmarteditManagerViewUtilsService } from 'personalizationsmarteditcontainer/management/managerView/PersonalizationsmarteditManagerViewUtilsService';
import { PersonalizationsmarteditCommerceCustomizationService } from 'personalizationcommons';
import { PaginationHelper } from 'personalizationcommons';
import { PersonalizationsmarteditManager } from 'personalizationsmarteditcontainer/management/manageCustomizationView/PersonalizationsmarteditManager';
import { PersonalizationsmarteditCommerceCustomizationView } from 'personalizationsmarteditcontainer/management/commerceCustomizationView/PersonalizationsmarteditCommerceCustomizationViewService';
import { PersonalizationsmarteditDateUtils } from 'personalizationcommons';
export interface PersonalizationsmarteditManagerViewControllerScope extends angular.IScope {
    scrollZoneElement: any;
    scrollZoneVisible: boolean;
    filteredCustomizationsCount: number;
}
export declare class PersonalizationsmarteditManagerViewController {
    $scope: PersonalizationsmarteditManagerViewControllerScope;
    private $translate;
    private $q;
    private lodash;
    private personalizationsmarteditManagerViewUtilsService;
    private personalizationsmarteditMessageHandler;
    private personalizationsmarteditContextService;
    private personalizationsmarteditUtils;
    private personalizationsmarteditManager;
    private personalizationsmarteditCommerceCustomizationService;
    private personalizationsmarteditCommerceCustomizationView;
    private personalizationsmarteditDateUtils;
    private PERSONALIZATION_VIEW_STATUS_MAPPING_CODES;
    PERSONALIZATION_MODEL_STATUS_CODES: any;
    private waitDialogService;
    private $timeout;
    private systemEventService;
    init: () => void;
    treeOptions: any;
    catalogName: string;
    statuses: any;
    moreCustomizationsRequestProcessing: boolean;
    pagination: PaginationHelper;
    customizations: any;
    search: any;
    state: any;
    context: any;
    constructor($scope: PersonalizationsmarteditManagerViewControllerScope, $translate: angular.translate.ITranslateService, $q: angular.IQService, lodash: LoDashStatic, personalizationsmarteditManagerViewUtilsService: PersonalizationsmarteditManagerViewUtilsService, personalizationsmarteditMessageHandler: PersonalizationsmarteditMessageHandler, personalizationsmarteditContextService: PersonalizationsmarteditContextService, personalizationsmarteditUtils: PersonalizationsmarteditUtils, personalizationsmarteditManager: PersonalizationsmarteditManager, personalizationsmarteditCommerceCustomizationService: PersonalizationsmarteditCommerceCustomizationService, personalizationsmarteditCommerceCustomizationView: PersonalizationsmarteditCommerceCustomizationView, personalizationsmarteditDateUtils: PersonalizationsmarteditDateUtils, PERSONALIZATION_VIEW_STATUS_MAPPING_CODES: any, PERSONALIZATION_MODEL_STATUS_CODES: any, waitDialogService: any, $timeout: any, systemEventService: any);
    searchInputKeypress: (keyEvent: any) => void;
    addMoreItems: () => void;
    getElementToScroll: () => any;
    setScrollZoneElement: (element: any) => void;
    openNewModal: () => void;
    isSearchGridHeaderHidden: () => boolean;
    scrollZoneReturnToTop: () => void;
    isReturnToTopButtonVisible: () => boolean;
    isFilterEnabled: () => boolean;
    setCustomizationRank: (customization: any, increaseValue: number) => void;
    setVariationRank: (customization: any, variation: any, increaseValue: number) => void;
    refreshGrid: () => void;
    editCustomizationAction: (customization: any) => void;
    editVariationAction: (customization: any, variation: any) => void;
    deleteCustomizationAction: (customization: any) => void;
    isCommerceCustomizationEnabled: () => boolean;
    manageCommerceCustomization: (customization: any, variation: any) => void;
    isDeleteVariationEnabled: (customization: any) => boolean;
    deleteVariationAction: (customization: any, variation: any, $event: any) => void;
    toogleVariationActive: (customization: any, variation: any) => void;
    customizationClickAction: (customization: any) => void;
    hasCommerceActions: (variation: any) => boolean;
    getCommerceCustomizationTooltip: (variation: any) => string;
    getFormattedDate: (myDate: any) => any;
    getEnablementTextForCustomization: (customization: any) => string;
    getEnablementTextForVariation: (variation: any) => string;
    getEnablementActionTextForVariation: (variation: any) => string;
    getActivityStateForCustomization: (customization: any) => string;
    getActivityStateForVariation: (customization: any, variation: any) => string;
    allCustomizationsCollapsed: () => any;
    statusNotDeleted: (variation: any) => boolean;
    initCustomization: (customization: any) => void;
    customizationCollapseAction: (customization: any) => void;
    getPage: () => void;
    private isScrollZoneVisible;
    private getCustomizations;
    private getCustomizationsFilterObject;
    private getDefaultStatus;
    private updateCustomizationRank;
    private updateVariationRank;
    private updateRanks;
    private valideRanks;
    private droppedCustomization;
    private droppedTargetGroup;
}

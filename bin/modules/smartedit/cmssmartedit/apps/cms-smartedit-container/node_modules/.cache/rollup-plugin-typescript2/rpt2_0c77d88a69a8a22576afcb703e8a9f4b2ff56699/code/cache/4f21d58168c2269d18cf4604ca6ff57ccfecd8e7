{"code":"import { __awaiter, __decorate, __generator, __metadata, __spreadArrays } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { cmsitemsEvictionTag, CmsitemsRestService, NAVIGATION_NODE_ROOT_NODE_UID, NAVIGATION_NODE_TYPECODE } from 'cmscommons';\r\nimport { assign } from 'lodash';\r\nimport { IConfirmationModalService, InvalidateCache, LogService } from 'smarteditcommons';\r\nimport { NavigationNodeEditorModalService } from '../navigationNodeEditor/NavigationNodeEditorModalService';\r\nimport { NavigationEditorNodeService } from './NavigationEditorNodeService';\r\n// TODO: unit tests\r\nvar /* @ngInject */ NavigationEditorTreeActions = /** @class */ (function () {\r\n    function /* @ngInject */ NavigationEditorTreeActions(logService, cmsitemsRestService, confirmationModalService, navigationEditorNodeService, navigationNodeEditorModalService) {\r\n        this.logService = logService;\r\n        this.cmsitemsRestService = cmsitemsRestService;\r\n        this.confirmationModalService = confirmationModalService;\r\n        this.navigationEditorNodeService = navigationEditorNodeService;\r\n        this.navigationNodeEditorModalService = navigationNodeEditorModalService;\r\n    }\r\n    /* @ngInject */ NavigationEditorTreeActions_1 = /* @ngInject */ NavigationEditorTreeActions;\r\n    /**\r\n     * Sets fields required for this service to work properly\r\n     */\r\n    /* @ngInject */ NavigationEditorTreeActions.prototype.setup = function (readOnly, rootNodeUid, uriContext) {\r\n        this.readOnly = readOnly;\r\n        this.rootNodeUid = rootNodeUid;\r\n        this.uriContext = uriContext;\r\n    };\r\n    /**\r\n     * Exposes methods of this service to a literal object.\r\n     *\r\n     * This literal object is used by `TreeComponent#setNodeActions` (smarteditcommons)\r\n     * It sets new context and \"inject\" treeService param for all methods using `.bind`\r\n     *\r\n     * It is done this way, so TreeComponent can easily iterate over the methods, if we would passed instance of this class it wouldn't be easy to iterate over these methods\r\n     */\r\n    /* @ngInject */ NavigationEditorTreeActions.prototype.getActions = function () {\r\n        var _this = this;\r\n        return {\r\n            isReadOnly: function () { return _this.isReadOnly(); },\r\n            hasChildren: function (treeService, nodeData) { return _this.hasChildren(treeService, nodeData); },\r\n            fetchData: function (treeService, nodeData) {\r\n                return _this.fetchData(treeService, nodeData);\r\n            },\r\n            removeItem: function (treeService, nodeData) { return _this.removeItem(treeService, nodeData); },\r\n            performMove: function (treeService, nodeData, refreshNodeItself) { return _this.performMove(treeService, nodeData, refreshNodeItself); },\r\n            dragAndDrop: function (treeService, event) { return _this.dragAndDrop(treeService, event); },\r\n            moveUp: function (treeService, nodeData) { return _this.moveUp(treeService, nodeData); },\r\n            moveDown: function (treeService, nodeData) { return _this.moveDown(treeService, nodeData); },\r\n            isMoveUpAllowed: function (treeService, nodeData) { return _this.isMoveUpAllowed(treeService, nodeData); },\r\n            isMoveDownAllowed: function (treeService, nodeData) { return _this.isMoveDownAllowed(treeService, nodeData); },\r\n            refreshNode: function (treeService, nodeData) {\r\n                return _this.refreshNode(treeService, nodeData);\r\n            },\r\n            refreshParentNode: function (treeService, nodeData) {\r\n                return _this.refreshParentNode(treeService, nodeData);\r\n            },\r\n            editNavigationNode: function (treeService, nodeData) {\r\n                return _this.editNavigationNode(treeService, nodeData);\r\n            },\r\n            addTopLevelNode: function (treeService, nodeData) { return _this.addTopLevelNode(treeService, nodeData); },\r\n            getEntryString: function (treeService, nodeData) { return _this.getEntryString(treeService, nodeData); },\r\n            getEntryTooltipString: function (treeService, nodeData) { return _this.getEntryTooltipString(treeService, nodeData); },\r\n            addNewChild: function (treeService, nodeData) {\r\n                return _this.addNewChild(treeService, nodeData);\r\n            },\r\n            addNewSibling: function (treeService, nodeData) {\r\n                return _this.addNewSibling(treeService, nodeData);\r\n            },\r\n            getDropdownItems: function (treeService) { return _this.getDropdownItems(treeService); },\r\n            _findNodeById: function (treeService, nodeUid) { return _this._findNodeById(treeService, nodeUid); },\r\n            _expandIfNeeded: function (treeService, nodeData) {\r\n                return _this._expandIfNeeded(treeService, nodeData);\r\n            }\r\n        };\r\n    };\r\n    /* @ngInject */ NavigationEditorTreeActions.prototype.getNavigationNodeCMSItemByUid = function (uid) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.cmsitemsRestService.get({\r\n                            typeCode: NAVIGATION_NODE_TYPECODE,\r\n                            pageSize: 1,\r\n                            currentPage: 0,\r\n                            itemSearchParams: 'uid:' + uid\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result.response[0]];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ NavigationEditorTreeActions.prototype.hasNotMoved = function (source, destinationPosition, destinationParent) {\r\n        return (source.position === destinationPosition && source.parentUid === destinationParent.uid);\r\n    };\r\n    /* @ngInject */ NavigationEditorTreeActions.prototype.getEntriesCommaSeparated = function (entries) {\r\n        return entries.map(function (entry) { return entry.name + \" (\" + entry.itemType + \")\"; }).join(', ');\r\n    };\r\n    /** Actions */\r\n    /* @ngInject */ NavigationEditorTreeActions.prototype.isReadOnly = function () {\r\n        return this.readOnly;\r\n    };\r\n    /* @ngInject */ NavigationEditorTreeActions.prototype.hasChildren = function (_treeService, nodeData) {\r\n        return nodeData.hasChildren;\r\n    };\r\n    /* @ngInject */ NavigationEditorTreeActions.prototype.fetchData = function (treeService, nodeData) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var node;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (nodeData.initiated) {\r\n                            return [2 /*return*/, nodeData.nodes];\r\n                        }\r\n                        if (!(nodeData.uid === NAVIGATION_NODE_ROOT_NODE_UID)) return [3 /*break*/, 2];\r\n                        nodeData.initiated = false;\r\n                        return [4 /*yield*/, this.getNavigationNodeCMSItemByUid(this.rootNodeUid)];\r\n                    case 1:\r\n                        node = _a.sent();\r\n                        assign(nodeData, node);\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        nodeData.removeAllNodes();\r\n                        return [2 /*return*/, treeService.fetchChildren(nodeData)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ NavigationEditorTreeActions.prototype.removeItem = function (treeService, node) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var isConfirmed, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (this.readOnly) {\r\n                            throw /* @ngInject */ NavigationEditorTreeActions_1.READY_ONLY_ERROR_I18N;\r\n                        }\r\n                        isConfirmed = true;\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        _b.trys.push([1, 3, , 4]);\r\n                        // IMPORTANT NOTE\r\n                        // `confirmationModalService.confirm` resolves to null\r\n                        // that's why `isConfirmed` is not set here\r\n                        return [4 /*yield*/, this.confirmationModalService.confirm({\r\n                                description: 'se.cms.navigationmanagement.navnode.removenode.confirmation.message',\r\n                                title: 'se.cms.navigationmanagement.navnode.removenode.confirmation.title'\r\n                            })];\r\n                    case 2:\r\n                        // IMPORTANT NOTE\r\n                        // `confirmationModalService.confirm` resolves to null\r\n                        // that's why `isConfirmed` is not set here\r\n                        _b.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        _a = _b.sent();\r\n                        isConfirmed = false;\r\n                        return [3 /*break*/, 4];\r\n                    case 4:\r\n                        if (!isConfirmed) return [3 /*break*/, 6];\r\n                        return [4 /*yield*/, this.cmsitemsRestService.delete(node.uuid)];\r\n                    case 5:\r\n                        _b.sent();\r\n                        this.refreshParentNode(treeService, node);\r\n                        _b.label = 6;\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ NavigationEditorTreeActions.prototype.performMove = function (treeService, node, refreshNodeItself) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var err_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.readOnly) {\r\n                            throw /* @ngInject */ NavigationEditorTreeActions_1.READY_ONLY_ERROR_I18N;\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 9, , 10]);\r\n                        return [4 /*yield*/, this.navigationEditorNodeService.updateNavigationNodePosition(node)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        if (!!node) return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, this.fetchData(treeService, treeService.root)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 4:\r\n                        if (!refreshNodeItself) return [3 /*break*/, 6];\r\n                        return [4 /*yield*/, this.refreshNode(treeService, node)];\r\n                    case 5:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 6: return [4 /*yield*/, this.refreshParentNode(treeService, node)];\r\n                    case 7:\r\n                        _a.sent();\r\n                        _a.label = 8;\r\n                    case 8: return [3 /*break*/, 10];\r\n                    case 9:\r\n                        err_1 = _a.sent();\r\n                        this.logService.error(\"Error updating node position:\\n\" + err_1);\r\n                        return [3 /*break*/, 10];\r\n                    case 10: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ NavigationEditorTreeActions.prototype.dragAndDrop = function (treeService, event) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var nodeData, destinationNodes, destination, destinationParent;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        nodeData = event.sourceNode;\r\n                        destinationNodes = event.destinationNodes;\r\n                        destination = destinationNodes.find(function (node) { return node.uid !== nodeData.uid; });\r\n                        // this method is still triggered on drop, even if drop is not allowed\r\n                        // so its possible that destination does not exist, in which case we return silently\r\n                        if (!destination) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        destinationParent = destination.parent;\r\n                        if (this.hasNotMoved(nodeData, event.position, destinationParent)) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        nodeData.position = event.position;\r\n                        nodeData.setParent(destinationParent);\r\n                        return [4 /*yield*/, this.performMove(treeService, nodeData, true)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        if (event.sourceParentNode.uid !== event.destinationParentNode.uid) {\r\n                            this.refreshNode(treeService, event.sourceParentNode);\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ NavigationEditorTreeActions.prototype.moveUp = function (treeService, nodeData) {\r\n        if (this.readOnly) {\r\n            throw /* @ngInject */ NavigationEditorTreeActions_1.READY_ONLY_ERROR_I18N;\r\n        }\r\n        nodeData.position = nodeData.position - 1;\r\n        return this.performMove(treeService, nodeData);\r\n    };\r\n    /* @ngInject */ NavigationEditorTreeActions.prototype.moveDown = function (treeService, nodeData) {\r\n        if (this.readOnly) {\r\n            throw /* @ngInject */ NavigationEditorTreeActions_1.READY_ONLY_ERROR_I18N;\r\n        }\r\n        nodeData.position = nodeData.position + 1;\r\n        return this.performMove(treeService, nodeData);\r\n    };\r\n    /* @ngInject */ NavigationEditorTreeActions.prototype.isMoveUpAllowed = function (_treeService, nodeData) {\r\n        return nodeData.position !== 0;\r\n    };\r\n    /* @ngInject */ NavigationEditorTreeActions.prototype.isMoveDownAllowed = function (_treeService, nodeData) {\r\n        nodeData.parent.nodes = nodeData.parent.nodes || [];\r\n        return nodeData.position < nodeData.parent.nodes.length - 1;\r\n    };\r\n    /* @ngInject */ NavigationEditorTreeActions.prototype.refreshNode = function (treeService, nodeData) {\r\n        nodeData.setInitiated(false);\r\n        return treeService.fetchChildren(nodeData);\r\n    };\r\n    /* @ngInject */ NavigationEditorTreeActions.prototype.refreshParentNode = function (treeService, nodeData) {\r\n        return this.refreshNode(treeService, nodeData.parent);\r\n    };\r\n    /* @ngInject */ NavigationEditorTreeActions.prototype.editNavigationNode = function (treeService, nodeData) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var targetNode, refreshedNode, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _b.trys.push([0, 4, , 5]);\r\n                        return [4 /*yield*/, this.navigationNodeEditorModalService.open(this.uriContext, nodeData.parent, nodeData)];\r\n                    case 1:\r\n                        _b.sent();\r\n                        return [4 /*yield*/, this.refreshNode(treeService, nodeData.parent)];\r\n                    case 2:\r\n                        _b.sent();\r\n                        targetNode = void 0;\r\n                        if (nodeData.parent.uid === NAVIGATION_NODE_ROOT_NODE_UID) {\r\n                            targetNode = nodeData;\r\n                        }\r\n                        else {\r\n                            targetNode = nodeData.parent;\r\n                        }\r\n                        return [4 /*yield*/, this.navigationEditorNodeService.getNavigationNode(targetNode.uid, this.uriContext)];\r\n                    case 3:\r\n                        refreshedNode = _b.sent();\r\n                        assign(targetNode, refreshedNode);\r\n                        if (nodeData.parent.uid === NAVIGATION_NODE_ROOT_NODE_UID) {\r\n                            return [2 /*return*/, this.refreshNode(treeService, nodeData)];\r\n                        }\r\n                        return [2 /*return*/, this.refreshParentNode(treeService, nodeData)];\r\n                    case 4:\r\n                        _a = _b.sent();\r\n                        this.logService.warn('navigationNodeEditorModalService closed when editing navigation node');\r\n                        return [3 /*break*/, 5];\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ NavigationEditorTreeActions.prototype.addTopLevelNode = function (treeService, nodeData) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var created, node;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.addNewChild(treeService, nodeData)];\r\n                    case 1:\r\n                        created = !!(_a.sent());\r\n                        if (!created) return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, this.getNavigationNodeCMSItemByUid(this.rootNodeUid)];\r\n                    case 2:\r\n                        node = _a.sent();\r\n                        return [4 /*yield*/, this.fetchData(treeService, node)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        _a.label = 4;\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ NavigationEditorTreeActions.prototype.getEntryString = function (_treeService, node) {\r\n        return this.getEntriesCommaSeparated(node.entries || []);\r\n    };\r\n    /* @ngInject */ NavigationEditorTreeActions.prototype.getEntryTooltipString = function (_treeService, node) {\r\n        return __spreadArrays([\r\n            '<div>'\r\n        ], (node.entries || []).map(function (entry) { return \"<div>\" + entry.name + \" (\" + entry.itemType + \")</div>\"; }), [\r\n            '</div>'\r\n        ]).join('');\r\n    };\r\n    /* @ngInject */ NavigationEditorTreeActions.prototype.addNewChild = function (treeService, nodeData) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var parent, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        parent = nodeData ? nodeData : this._findNodeById(treeService, this.rootNodeUid);\r\n                        return [4 /*yield*/, this._expandIfNeeded(treeService, nodeData)];\r\n                    case 1:\r\n                        _b.sent();\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        _b.trys.push([2, 4, , 5]);\r\n                        return [4 /*yield*/, this.navigationNodeEditorModalService.open(this.uriContext, parent)];\r\n                    case 3:\r\n                        _b.sent();\r\n                        return [2 /*return*/, this.refreshNode(treeService, parent)];\r\n                    case 4:\r\n                        _a = _b.sent();\r\n                        this.logService.warn('navigationNodeEditorModalService closed when adding new child');\r\n                        return [3 /*break*/, 5];\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ NavigationEditorTreeActions.prototype.addNewSibling = function (treeService, nodeData) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var parent, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        parent = nodeData.parent;\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        _b.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.navigationNodeEditorModalService.open(this.uriContext, parent)];\r\n                    case 2:\r\n                        _b.sent();\r\n                        return [2 /*return*/, this.refreshNode(treeService, parent)];\r\n                    case 3:\r\n                        _a = _b.sent();\r\n                        this.logService.warn('navigationNodeEditorModalService closed when adding new sibling');\r\n                        return [3 /*break*/, 4];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ NavigationEditorTreeActions.prototype.getDropdownItems = function (treeService) {\r\n        var _this = this;\r\n        return [\r\n            {\r\n                key: 'se.cms.navigationmanagement.navnode.edit',\r\n                callback: function (node) {\r\n                    _this.editNavigationNode(treeService, node);\r\n                }\r\n            },\r\n            {\r\n                key: 'se.cms.navigationmanagement.navnode.removenode',\r\n                customCss: 'se-dropdown-item__delete',\r\n                callback: function (node) {\r\n                    _this.removeItem(treeService, node);\r\n                }\r\n            },\r\n            {\r\n                key: 'se.cms.navigationmanagement.navnode.move.up',\r\n                condition: function (node) {\r\n                    return _this.isMoveUpAllowed(treeService, node);\r\n                },\r\n                callback: function (node) {\r\n                    _this.moveUp(treeService, node);\r\n                }\r\n            },\r\n            {\r\n                key: 'se.cms.navigationmanagement.navnode.move.down',\r\n                condition: function (node) {\r\n                    return _this.isMoveDownAllowed(treeService, node);\r\n                },\r\n                callback: function (node) {\r\n                    _this.moveDown(treeService, node);\r\n                }\r\n            },\r\n            {\r\n                key: 'se.cms.navigationmanagement.navnode.addchild',\r\n                callback: function (node) {\r\n                    _this.addNewChild(treeService, node);\r\n                }\r\n            },\r\n            {\r\n                key: 'se.cms.navigationmanagement.navnode.addsibling',\r\n                callback: function (node) {\r\n                    _this.addNewSibling(treeService, node);\r\n                }\r\n            }\r\n        ];\r\n    };\r\n    /* @ngInject */ NavigationEditorTreeActions.prototype._findNodeById = function (treeService, nodeUid) {\r\n        return treeService.getNodeById(nodeUid);\r\n    };\r\n    /* @ngInject */ NavigationEditorTreeActions.prototype._expandIfNeeded = function (treeService, nodeData) {\r\n        return nodeData && !nodeData.isExpanded ? treeService.toggle(nodeData) : Promise.resolve();\r\n    };\r\n    var /* @ngInject */ NavigationEditorTreeActions_1;\r\n    /* @ngInject */ NavigationEditorTreeActions.READY_ONLY_ERROR_I18N = 'navigation.in.readonly.mode';\r\n    __decorate([\r\n        InvalidateCache(cmsitemsEvictionTag),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], /* @ngInject */ NavigationEditorTreeActions.prototype, \"getNavigationNodeCMSItemByUid\", null);\r\n    /* @ngInject */ NavigationEditorTreeActions = /* @ngInject */ NavigationEditorTreeActions_1 = __decorate([\r\n        Injectable(),\r\n        __metadata(\"design:paramtypes\", [LogService,\r\n            CmsitemsRestService,\r\n            IConfirmationModalService,\r\n            NavigationEditorNodeService,\r\n            NavigationNodeEditorModalService])\r\n    ], /* @ngInject */ NavigationEditorTreeActions);\r\n    return /* @ngInject */ NavigationEditorTreeActions;\r\n}());\r\nexport { /* @ngInject */ NavigationEditorTreeActions };\r\n//# sourceMappingURL=NavigationEditorTreeActionsService.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types/lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/navigation/navigationNodeEditor/NavigationNodeEditorModalService.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/navigation/types.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/navigation/navigationEditor/NavigationEditorNodeService.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/navigation/navigationEditor/types.ts"],"map":"{\"version\":3,\"file\":\"NavigationEditorTreeActionsService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/components/navigation/navigationEditor/NavigationEditorTreeActionsService.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/components/navigation/navigationEditor/NavigationEditorTreeActionsService.d.ts","writeByteOrderMark":false,"text":"import { CmsitemsRestService } from 'cmscommons';\r\nimport { IConfirmationModalService, IUriContext, LogService } from 'smarteditcommons';\r\nimport { NavigationNodeEditorModalService } from '../navigationNodeEditor/NavigationNodeEditorModalService';\r\nimport { NavigationEditorNodeService } from './NavigationEditorNodeService';\r\nimport { NavigationTreeActions } from './types';\r\nexport declare class NavigationEditorTreeActions {\r\n    private logService;\r\n    private cmsitemsRestService;\r\n    private confirmationModalService;\r\n    private navigationEditorNodeService;\r\n    private navigationNodeEditorModalService;\r\n    private static readonly READY_ONLY_ERROR_I18N;\r\n    private readOnly;\r\n    private rootNodeUid;\r\n    private uriContext;\r\n    constructor(logService: LogService, cmsitemsRestService: CmsitemsRestService, confirmationModalService: IConfirmationModalService, navigationEditorNodeService: NavigationEditorNodeService, navigationNodeEditorModalService: NavigationNodeEditorModalService);\r\n    /**\r\n     * Sets fields required for this service to work properly\r\n     */\r\n    setup(readOnly: boolean, rootNodeUid: string, uriContext: IUriContext): void;\r\n    /**\r\n     * Exposes methods of this service to a literal object.\r\n     *\r\n     * This literal object is used by `TreeComponent#setNodeActions` (smarteditcommons)\r\n     * It sets new context and \"inject\" treeService param for all methods using `.bind`\r\n     *\r\n     * It is done this way, so TreeComponent can easily iterate over the methods, if we would passed instance of this class it wouldn't be easy to iterate over these methods\r\n     */\r\n    getActions(): NavigationTreeActions;\r\n    private getNavigationNodeCMSItemByUid;\r\n    private hasNotMoved;\r\n    private getEntriesCommaSeparated;\r\n    /** Actions */\r\n    private isReadOnly;\r\n    private hasChildren;\r\n    private fetchData;\r\n    private removeItem;\r\n    private performMove;\r\n    private dragAndDrop;\r\n    private moveUp;\r\n    private moveDown;\r\n    private isMoveUpAllowed;\r\n    private isMoveDownAllowed;\r\n    private refreshNode;\r\n    private refreshParentNode;\r\n    private editNavigationNode;\r\n    private addTopLevelNode;\r\n    private getEntryString;\r\n    private getEntryTooltipString;\r\n    private addNewChild;\r\n    private addNewSibling;\r\n    private getDropdownItems;\r\n    private _findNodeById;\r\n    private _expandIfNeeded;\r\n}\r\n"}}

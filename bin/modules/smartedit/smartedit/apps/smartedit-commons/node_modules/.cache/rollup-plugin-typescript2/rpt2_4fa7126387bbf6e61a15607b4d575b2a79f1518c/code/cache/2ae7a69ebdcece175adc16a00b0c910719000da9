{"code":"import { __decorate } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { SeDowngradeService } from '../../../di';\r\n/**\r\n * The genericEditorTabService is used to configure the way in which the tabs in the\r\n * {@link GenericEditorComponent} component are rendered.\r\n */\r\nvar /* @ngInject */ GenericEditorTabService = /** @class */ (function () {\r\n    function /* @ngInject */ GenericEditorTabService() {\r\n        // --------------------------------------------------------------------------------------\r\n        // Variables\r\n        // --------------------------------------------------------------------------------------\r\n        this._tabsConfiguration = {};\r\n        this._defaultTabPredicates = [];\r\n    }\r\n    /* @ngInject */ GenericEditorTabService_1 = /* @ngInject */ GenericEditorTabService;\r\n    // --------------------------------------------------------------------------------------\r\n    // Public Methods\r\n    // --------------------------------------------------------------------------------------\r\n    /**\r\n     * This method stores the configuration of the tab identified by the provided ID.\r\n     *\r\n     * @param tabId The ID of the tab to configure.\r\n     * @param tabConfiguration The object containing the configuration of the tab.\r\n     * @param tabConfiguration.priority The priority of the tab. Higher numbers represent higher priority. This property is used to\r\n     * sort tabs.\r\n     *\r\n     */\r\n    /* @ngInject */ GenericEditorTabService.prototype.configureTab = function (tabId, tabConfiguration) {\r\n        this._tabsConfiguration[tabId] = tabConfiguration;\r\n    };\r\n    /**\r\n     * This method retrieves the configuration of a tab.\r\n     *\r\n     * @param tabId The ID of the tab for which to retrieve its configuration.\r\n     * @returns The configuration of the tab. Can be null if no tab with the provided ID has been configured.\r\n     *\r\n     */\r\n    /* @ngInject */ GenericEditorTabService.prototype.getTabConfiguration = function (tabId) {\r\n        var result = this._tabsConfiguration[tabId];\r\n        return result ? result : null;\r\n    };\r\n    /**\r\n     * This method sorts in place the list of tabs provided. Sorting starts with tab priority. If two or more tabs have the same priority they\r\n     * will be sorted alphabetically by ID.\r\n     *\r\n     * @param tabsToSort The list of tabs to sort.\r\n     */\r\n    /* @ngInject */ GenericEditorTabService.prototype.sortTabs = function (tabsToSort) {\r\n        var _this = this;\r\n        return tabsToSort.sort(function (tab1, tab2) {\r\n            var tab1Priority = _this.getTabPriority(tab1);\r\n            var tab2Priority = _this.getTabPriority(tab2);\r\n            if (tab2Priority - tab1Priority !== 0) {\r\n                return tab2Priority - tab1Priority; // Sort descending priority\r\n            }\r\n            else {\r\n                // Sort alphabetically\r\n                if (tab1.id < tab2.id) {\r\n                    return -1;\r\n                }\r\n                else if (tab1.id > tab2.id) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            }\r\n        });\r\n    };\r\n    // Meant to be used internally. No ng-doc.\r\n    /* @ngInject */ GenericEditorTabService.prototype.getComponentTypeDefaultTab = function (componentTypeStructure) {\r\n        var result = null;\r\n        this._defaultTabPredicates.some(function (predicate) {\r\n            result = predicate(componentTypeStructure);\r\n            return result !== null;\r\n        });\r\n        return result !== null ? result : /* @ngInject */ GenericEditorTabService_1.DEFAULT_TAB_ID;\r\n    };\r\n    // Meant to be used internally. No ng-doc.\r\n    /* @ngInject */ GenericEditorTabService.prototype.addComponentTypeDefaultTabPredicate = function (predicate) {\r\n        if (!predicate || typeof predicate !== 'function') {\r\n            throw new Error('genericEditorTabService - provided predicate must be a function.');\r\n        }\r\n        this._defaultTabPredicates.push(predicate);\r\n    };\r\n    // --------------------------------------------------------------------------------------\r\n    // Helper Methods\r\n    // --------------------------------------------------------------------------------------\r\n    /* @ngInject */ GenericEditorTabService.prototype.getTabPriority = function (tab) {\r\n        var tabId = tab.id;\r\n        if (!tabId) {\r\n            throw new Error('genericEditorTabService - Every tab must have an id.');\r\n        }\r\n        var tabPriority = /* @ngInject */ GenericEditorTabService_1.MIN_PRIORITY;\r\n        if (this._tabsConfiguration[tabId] && this._tabsConfiguration[tabId].priority) {\r\n            tabPriority = this._tabsConfiguration[tabId].priority;\r\n        }\r\n        return tabPriority;\r\n    };\r\n    var /* @ngInject */ GenericEditorTabService_1;\r\n    // --------------------------------------------------------------------------------------\r\n    // Constants\r\n    // --------------------------------------------------------------------------------------\r\n    /* @ngInject */ GenericEditorTabService.MIN_PRIORITY = 0;\r\n    /* @ngInject */ GenericEditorTabService.DEFAULT_TAB_ID = 'default';\r\n    /* @ngInject */ GenericEditorTabService = /* @ngInject */ GenericEditorTabService_1 = __decorate([\r\n        SeDowngradeService(),\r\n        Injectable()\r\n    ], /* @ngInject */ GenericEditorTabService);\r\n    return /* @ngInject */ GenericEditorTabService;\r\n}());\r\nexport { /* @ngInject */ GenericEditorTabService };\r\n//# sourceMappingURL=GenericEditorTabService.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/genericEditor/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/di/index.ts"],"map":"{\"version\":3,\"file\":\"GenericEditorTabService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/components/genericEditor/services/GenericEditorTabService.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/components/genericEditor/services/GenericEditorTabService.d.ts","writeByteOrderMark":false,"text":"import { GenericEditorPredicate, GenericEditorStructure, GenericEditorTab, GenericEditorTabConfiguration } from '../';\r\n/**\r\n * The genericEditorTabService is used to configure the way in which the tabs in the\r\n * {@link GenericEditorComponent} component are rendered.\r\n */\r\nexport declare class GenericEditorTabService {\r\n    private static readonly MIN_PRIORITY;\r\n    private static readonly DEFAULT_TAB_ID;\r\n    private _tabsConfiguration;\r\n    private _defaultTabPredicates;\r\n    /**\r\n     * This method stores the configuration of the tab identified by the provided ID.\r\n     *\r\n     * @param tabId The ID of the tab to configure.\r\n     * @param tabConfiguration The object containing the configuration of the tab.\r\n     * @param tabConfiguration.priority The priority of the tab. Higher numbers represent higher priority. This property is used to\r\n     * sort tabs.\r\n     *\r\n     */\r\n    configureTab(tabId: string, tabConfiguration: GenericEditorTabConfiguration): void;\r\n    /**\r\n     * This method retrieves the configuration of a tab.\r\n     *\r\n     * @param tabId The ID of the tab for which to retrieve its configuration.\r\n     * @returns The configuration of the tab. Can be null if no tab with the provided ID has been configured.\r\n     *\r\n     */\r\n    getTabConfiguration(tabId: string): GenericEditorTabConfiguration;\r\n    /**\r\n     * This method sorts in place the list of tabs provided. Sorting starts with tab priority. If two or more tabs have the same priority they\r\n     * will be sorted alphabetically by ID.\r\n     *\r\n     * @param tabsToSort The list of tabs to sort.\r\n     */\r\n    sortTabs(tabsToSort: GenericEditorTab[]): GenericEditorTab[];\r\n    getComponentTypeDefaultTab(componentTypeStructure: GenericEditorStructure): string;\r\n    addComponentTypeDefaultTabPredicate(predicate: GenericEditorPredicate): void;\r\n    private getTabPriority;\r\n}\r\n"}}

{"code":"import { __decorate, __extends, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { GatewayProxied, IIframeClickDetectionService, SeDowngradeService } from 'smarteditcommons';\r\nvar /* @ngInject */ IframeClickDetectionService = /** @class */ (function (_super) {\r\n    __extends(/* @ngInject */ IframeClickDetectionService, _super);\r\n    function /* @ngInject */ IframeClickDetectionService() {\r\n        var _this = _super.call(this) || this;\r\n        _this.callbacks = {};\r\n        return _this;\r\n    }\r\n    /* @ngInject */ IframeClickDetectionService.prototype.registerCallback = function (id, callback) {\r\n        this.callbacks[id] = callback;\r\n        return this.removeCallback.bind(this, id);\r\n    };\r\n    /* @ngInject */ IframeClickDetectionService.prototype.removeCallback = function (id) {\r\n        if (this.callbacks[id]) {\r\n            delete this.callbacks[id];\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Triggers all callbacks currently registered to the service. This function is registered as a listener through\r\n     * the GatewayProxy\r\n     */\r\n    /* @ngInject */ IframeClickDetectionService.prototype.onIframeClick = function () {\r\n        for (var ref in this.callbacks) {\r\n            if (this.callbacks.hasOwnProperty(ref)) {\r\n                this.callbacks[ref]();\r\n            }\r\n        }\r\n    };\r\n    /* @ngInject */ IframeClickDetectionService = __decorate([\r\n        SeDowngradeService(IIframeClickDetectionService),\r\n        GatewayProxied('onIframeClick'),\r\n        Injectable(),\r\n        __metadata(\"design:paramtypes\", [])\r\n    ], /* @ngInject */ IframeClickDetectionService);\r\n    return /* @ngInject */ IframeClickDetectionService;\r\n}(IIframeClickDetectionService));\r\nexport { /* @ngInject */ IframeClickDetectionService };\r\n//# sourceMappingURL=IframeClickDetectionServiceOuter.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"IframeClickDetectionServiceOuter.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/services/IframeClickDetectionServiceOuter.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EACH,cAAc,EACd,4BAA4B,EAC5B,kBAAkB,EAErB,MAAM,kBAAkB,CAAC;AAK1B;IAAiD,+DAA4B;IAGzE;QAAA,YACI,iBAAO,SACV;QAJO,eAAS,GAAyB,EAAE,CAAC;;IAI7C,CAAC;IAEM,sEAAgB,GAAvB,UAAwB,EAAU,EAAE,QAAoB;QACpD,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC;QAC9B,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IAC9C,CAAC;IAEM,oEAAc,GAArB,UAAsB,EAAU;QAC5B,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE;YACpB,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;YAC1B,OAAO,IAAI,CAAC;SACf;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAED;;;OAGG;IACI,mEAAa,GAApB;QACI,KAAK,IAAM,GAAG,IAAI,IAAI,CAAC,SAAS,EAAE;YAC9B,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;gBACpC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC;aACzB;SACJ;IACL,CAAC;IA9BL;QAHC,kBAAkB,CAAC,4BAA4B,CAAC;QAChD,cAAc,CAAC,eAAe,CAAC;QAC/B,UAAU,EAAE;;mDAgCZ;IAAD,kDAAC;CAAA,AA/BD,CAAiD,4BAA4B,GA+B5E\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/services/IframeClickDetectionServiceOuter.d.ts","writeByteOrderMark":false,"text":"import { IIframeClickDetectionService } from 'smarteditcommons';\r\nexport declare class IframeClickDetectionService extends IIframeClickDetectionService {\r\n    private callbacks;\r\n    constructor();\r\n    registerCallback(id: string, callback: () => void): () => void;\r\n    removeCallback(id: string): boolean;\r\n    /**\r\n     * Triggers all callbacks currently registered to the service. This function is registered as a listener through\r\n     * the GatewayProxy\r\n     */\r\n    onIframeClick(): void;\r\n}\r\n"}}

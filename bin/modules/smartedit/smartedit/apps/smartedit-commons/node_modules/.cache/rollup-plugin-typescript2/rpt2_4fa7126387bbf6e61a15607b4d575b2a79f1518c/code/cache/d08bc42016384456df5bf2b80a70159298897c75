{"code":"import { __assign, __decorate, __metadata } from \"tslib\";\r\nimport './dynamicPageList.scss';\r\nimport { ChangeDetectorRef, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { LogService, RestServiceFactory } from '@smart/utils';\r\nimport { cloneDeep } from 'lodash';\r\nimport { SeDowngradeComponent } from '../../di';\r\nimport { SortDirections } from '../../utils';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"DynamicPagedListComponent\", {\r\n    selector: 'se-dynamic-paged-list',\r\n    template: \"<div *ngIf=\\\"ready\\\" class=\\\"se-dynamic-paged-list\\\"><div class=\\\"fd-panel__body fd-panel__body--bleed\\\"><se-data-table [columns]=\\\"columns\\\" [config]=\\\"config\\\" [items]=\\\"items\\\" (onSortColumn)=\\\"orderByColumn($event)\\\"></se-data-table></div><div class=\\\"fd-panel__footer\\\"><se-pagination *ngIf=\\\"!!items.length\\\" class=\\\"se-dynamic-list__pagination\\\" [totalItems]=\\\"totalItems\\\" [itemsPerPage]=\\\"config.itemsPerPage\\\" [currentPage]=\\\"currentPage\\\" (onChange)=\\\"onCurrentPageChange($event)\\\"></se-pagination><span class=\\\"se-paged-list__page-count-wrapper se-paged-list__page-count-wrapper--footer\\\"><span class=\\\"span-page-list__page-count-text\\\">{{'se.pagelist.countsearchresult' | translate}} </span><span class=\\\"se-page-list__page-count\\\">({{ totalItems }})</span></span></div></div><se-spinner [isSpinning]=\\\"!ready\\\"></se-spinner>\"\r\n});\r\nvar /* @ngInject */ DynamicPagedListComponent = /** @class */ (function () {\r\n    function /* @ngInject */ DynamicPagedListComponent(logService, restServiceFactory, cdr) {\r\n        var _this = this;\r\n        this.logService = logService;\r\n        this.restServiceFactory = restServiceFactory;\r\n        this.cdr = cdr;\r\n        this.getApi = new EventEmitter();\r\n        this.onItemsUpdate = new EventEmitter();\r\n        this.api = {\r\n            reloadItems: function () { return _this.loadItems(); }\r\n        };\r\n    }\r\n    /* @ngInject */ DynamicPagedListComponent.prototype.ngOnInit = function () {\r\n        this._validateInput();\r\n        this.ready = false;\r\n        this.totalItems = 0;\r\n        this.currentPage = 1;\r\n        this.columnSortMode = this.config.reversed\r\n            ? SortDirections.Descending\r\n            : SortDirections.Ascending;\r\n        this.internalSortBy = cloneDeep(this.config.sortBy);\r\n        this.oldMask = this.mask;\r\n        this.columns = [];\r\n        this._buildColumnData();\r\n        this.loadItems();\r\n        this.getApi.emit(this.api);\r\n    };\r\n    /* @ngInject */ DynamicPagedListComponent.prototype.ngOnChanges = function (changes) {\r\n        var maskChange = changes.mask;\r\n        if (!!maskChange && !maskChange.firstChange) {\r\n            if (this.oldMask !== this.mask) {\r\n                this.oldMask = this.mask;\r\n                this.currentPage = 1;\r\n                this.loadItems();\r\n            }\r\n        }\r\n    };\r\n    /* @ngInject */ DynamicPagedListComponent.prototype.orderByColumn = function (event) {\r\n        this.internalSortBy = event.$columnKey.property;\r\n        this.columnSortMode = event.$columnSortMode;\r\n        this.config.reversed = this.columnSortMode === SortDirections.Descending;\r\n        if (event.$columnKey.sortable) {\r\n            this.currentPage = 1;\r\n            this.loadItems();\r\n        }\r\n    };\r\n    /* @ngInject */ DynamicPagedListComponent.prototype.loadItems = function () {\r\n        var _this = this;\r\n        this.ready = false;\r\n        var params = __assign(__assign({}, (this.config.queryParams || {})), { currentPage: this.currentPage - 1, mask: this.mask, pageSize: this.config.itemsPerPage, sort: this.internalSortBy + \":\" + this.columnSortMode });\r\n        return this.restServiceFactory\r\n            .get(this.config.uri)\r\n            .page(params)\r\n            .then(function (result) {\r\n            _this.items = result.results;\r\n            if (_this.items.length === 0) {\r\n                _this.logService.warn('PagedList: No items returned to display');\r\n            }\r\n            _this.totalItems = result.pagination.totalCount;\r\n            _this.currentPage = parseInt(String(result.pagination.page), 10) + 1;\r\n            _this.ready = true;\r\n            _this.cdr.detectChanges();\r\n            _this.onItemsUpdate.emit(result);\r\n            return result;\r\n        });\r\n    };\r\n    /* @ngInject */ DynamicPagedListComponent.prototype.onCurrentPageChange = function (newCurrentPage) {\r\n        if (newCurrentPage === this.currentPage) {\r\n            return;\r\n        }\r\n        this.currentPage = newCurrentPage;\r\n        this.loadItems();\r\n    };\r\n    /* @ngInject */ DynamicPagedListComponent.prototype._validateInput = function () {\r\n        if (!this.config) {\r\n            throw new Error('config object is required');\r\n        }\r\n        if (!(this.config.keys instanceof Array)) {\r\n            throw new Error('keys must be an array');\r\n        }\r\n        if (this.config.keys.length < 1) {\r\n            throw new Error('dynamic paged list requires at least one key');\r\n        }\r\n        if (!this.config.uri) {\r\n            throw new Error('dynamic paged list requires a uri to fetch the list of items');\r\n        }\r\n    };\r\n    /* @ngInject */ DynamicPagedListComponent.prototype._buildColumnData = function () {\r\n        var _this = this;\r\n        this.columns = this.config.keys.map(function (key) { return (__assign(__assign({}, key), { renderer: _this.config.renderers[key.property] })); });\r\n    };\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], /* @ngInject */ DynamicPagedListComponent.prototype, \"config\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], /* @ngInject */ DynamicPagedListComponent.prototype, \"mask\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], /* @ngInject */ DynamicPagedListComponent.prototype, \"getApi\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], /* @ngInject */ DynamicPagedListComponent.prototype, \"onItemsUpdate\", void 0);\r\n    /* @ngInject */ DynamicPagedListComponent = __decorate([\r\n        SeDowngradeComponent(),\r\n        Component({\r\n            selector: 'se-dynamic-paged-list',\r\n            template: \"<div *ngIf=\\\"ready\\\" class=\\\"se-dynamic-paged-list\\\"><div class=\\\"fd-panel__body fd-panel__body--bleed\\\"><se-data-table [columns]=\\\"columns\\\" [config]=\\\"config\\\" [items]=\\\"items\\\" (onSortColumn)=\\\"orderByColumn($event)\\\"></se-data-table></div><div class=\\\"fd-panel__footer\\\"><se-pagination *ngIf=\\\"!!items.length\\\" class=\\\"se-dynamic-list__pagination\\\" [totalItems]=\\\"totalItems\\\" [itemsPerPage]=\\\"config.itemsPerPage\\\" [currentPage]=\\\"currentPage\\\" (onChange)=\\\"onCurrentPageChange($event)\\\"></se-pagination><span class=\\\"se-paged-list__page-count-wrapper se-paged-list__page-count-wrapper--footer\\\"><span class=\\\"span-page-list__page-count-text\\\">{{'se.pagelist.countsearchresult' | translate}} </span><span class=\\\"se-page-list__page-count\\\">({{ totalItems }})</span></span></div></div><se-spinner [isSpinning]=\\\"!ready\\\"></se-spinner>\"\r\n        }),\r\n        __metadata(\"design:paramtypes\", [LogService,\r\n            RestServiceFactory,\r\n            ChangeDetectorRef])\r\n    ], /* @ngInject */ DynamicPagedListComponent);\r\n    return /* @ngInject */ DynamicPagedListComponent;\r\n}());\r\nexport { /* @ngInject */ DynamicPagedListComponent };\r\n//# sourceMappingURL=DynamicPagedListComponent.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types/lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/di/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/utils/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/dynamicPagedList/interfaces.ts"],"map":"{\"version\":3,\"file\":\"DynamicPagedListComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/dynamicPagedList/DynamicPagedListComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/components/dynamicPagedList/DynamicPagedListComponent.d.ts","writeByteOrderMark":false,"text":"import './dynamicPageList.scss';\r\nimport { ChangeDetectorRef, EventEmitter, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { LogService, Page, RestServiceFactory } from '@smart/utils';\r\nimport { DynamicPagedListApi, DynamicPagedListColumnKey, DynamicPagedListConfig } from './interfaces';\r\nexport declare class DynamicPagedListComponent implements OnInit, OnChanges {\r\n    private logService;\r\n    private restServiceFactory;\r\n    private cdr;\r\n    config: DynamicPagedListConfig;\r\n    mask: string;\r\n    getApi: EventEmitter<DynamicPagedListApi>;\r\n    onItemsUpdate: EventEmitter<Page<any>>;\r\n    internalSortBy: string;\r\n    columnSortMode: string;\r\n    currentPage: number;\r\n    ready: boolean;\r\n    totalItems: number;\r\n    items: any[];\r\n    columns: DynamicPagedListColumnKey[];\r\n    private oldMask;\r\n    private api;\r\n    constructor(logService: LogService, restServiceFactory: RestServiceFactory, cdr: ChangeDetectorRef);\r\n    ngOnInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    orderByColumn(event: {\r\n        $columnKey: DynamicPagedListColumnKey;\r\n        $columnSortMode: string;\r\n    }): void;\r\n    loadItems(): Promise<Page<any>>;\r\n    onCurrentPageChange(newCurrentPage: number): void;\r\n    private _validateInput;\r\n    private _buildColumnData;\r\n}\r\n"}}

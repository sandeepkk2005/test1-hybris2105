{"code":"import { downgradeComponent, downgradeInjectable } from '@angular/upgrade/static';\r\nimport { functionsUtils } from '@smart/utils';\r\nimport * as angular from 'angular';\r\nimport { DIBridgeModule } from './DIBridgeModule';\r\nimport { parseDirectiveName } from './SeDirective';\r\n/** @internal */\r\nvar DIBridgeUtils = /** @class */ (function () {\r\n    function DIBridgeUtils() {\r\n    }\r\n    DIBridgeUtils.prototype.downgradeComponent = function (definition, componentConstructor) {\r\n        if (!functionsUtils.isUnitTestMode()) {\r\n            var nameSet = parseDirectiveName(definition.selector, componentConstructor);\r\n            this._getBridgeModule().directive(nameSet.name, downgradeComponent({\r\n                component: componentConstructor\r\n            }));\r\n        }\r\n    };\r\n    DIBridgeUtils.prototype.downgradeService = function (name, serviceConstructor, token) {\r\n        if (!functionsUtils.isUnitTestMode()) {\r\n            window.__smartedit__.downgradedService[name] = serviceConstructor;\r\n            if (serviceConstructor) {\r\n                var definition = window.__smartedit__.getDecoratorPayload('Injectable', serviceConstructor);\r\n                if (definition && definition.providedIn !== 'root') {\r\n                    throw new Error(\"service \" + name + \" is meant to be downgraded but is not provided in root: make sure to mark it with @Injectable({providedIn: 'root'})\");\r\n                }\r\n            }\r\n            this._getBridgeModule().factory(name, downgradeInjectable(token ? token : serviceConstructor));\r\n        }\r\n    };\r\n    /* forbiddenNameSpaces useFactory:false */\r\n    DIBridgeUtils.prototype.upgradeProvider = function (angularJSInjectionKey, angularInjectionToken) {\r\n        return {\r\n            provide: angularInjectionToken ? angularInjectionToken : angularJSInjectionKey,\r\n            // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\r\n            useFactory: function ($injector) {\r\n                return $injector.get(angularJSInjectionKey);\r\n            },\r\n            deps: ['$injector'] // $injector is provided by UpgradeModule\r\n        };\r\n    };\r\n    DIBridgeUtils.prototype._getBridgeModule = function () {\r\n        /* forbiddenNameSpaces angular.module:false */\r\n        return angular.module(DIBridgeModule.moduleName);\r\n    };\r\n    return DIBridgeUtils;\r\n}());\r\nexport { DIBridgeUtils };\r\nexport var diBridgeUtils = new DIBridgeUtils();\r\n//# sourceMappingURL=DIBridgeUtils.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/upgrade@8.2.14_d2ff5303d1bb22207cb4aaa9bb380a83/node_modules/@angular/upgrade/static.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types/angular@1.7.3/node_modules/@types/angular/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/di/DIBridgeModule.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/di/SeDirective.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/di/types.ts"],"map":"{\"version\":3,\"file\":\"DIBridgeUtils.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/di/DIBridgeUtils.ts\"],\"names\":[],\"mappings\":\"AAIA,OAAO,EAAE,kBAAkB,EAAE,mBAAmB,EAAE,MAAM,yBAAyB,CAAC;AAClF,OAAO,EAAE,cAAc,EAAE,MAAM,cAAc,CAAC;AAC9C,OAAO,KAAK,OAAO,MAAM,SAAS,CAAC;AACnC,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAClD,OAAO,EAAE,kBAAkB,EAAE,MAAM,eAAe,CAAC;AAGnD,gBAAgB;AAChB;IAAA;IAkDA,CAAC;IAjDG,0CAAkB,GAAlB,UAAmB,UAAqB,EAAE,oBAAmC;QACzE,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,EAAE;YAClC,IAAM,OAAO,GAAG,kBAAkB,CAAC,UAAU,CAAC,QAAQ,EAAE,oBAAoB,CAAC,CAAC;YAE9E,IAAI,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAC7B,OAAO,CAAC,IAAI,EACZ,kBAAkB,CAAC;gBACf,SAAS,EAAE,oBAAoB;aAClC,CAA8B,CAClC,CAAC;SACL;IACL,CAAC;IAED,wCAAgB,GAAhB,UAAiB,IAAY,EAAE,kBAAiC,EAAE,KAAW;QACzE,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,EAAE;YAClC,MAAM,CAAC,aAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,kBAAkB,CAAC;YAClE,IAAI,kBAAkB,EAAE;gBACpB,IAAM,UAAU,GAAe,MAAM,CAAC,aAAa,CAAC,mBAAmB,CACnE,YAAY,EACZ,kBAAkB,CACrB,CAAC;gBACF,IAAI,UAAU,IAAI,UAAU,CAAC,UAAU,KAAK,MAAM,EAAE;oBAChD,MAAM,IAAI,KAAK,CACX,aAAW,IAAI,wHAAqH,CACvI,CAAC;iBACL;aACJ;YACD,IAAI,CAAC,gBAAgB,EAAE,CAAC,OAAO,CAC3B,IAAI,EACJ,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,kBAAkB,CAAQ,CACjE,CAAC;SACL;IACL,CAAC;IAED,0CAA0C;IAC1C,uCAAe,GAAf,UAAgB,qBAA6B,EAAE,qBAA2B;QACtE,OAAO;YACH,OAAO,EAAE,qBAAqB,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,qBAAqB;YAC9E,4EAA4E;YAC5E,UAAU,EAAE,UAAC,SAAwC;gBACjD,OAAA,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC;YAApC,CAAoC;YACxC,IAAI,EAAE,CAAC,WAAW,CAAC,CAAC,yCAAyC;SAChE,CAAC;IACN,CAAC;IAEO,wCAAgB,GAAxB;QACI,8CAA8C;QAC9C,OAAO,OAAO,CAAC,MAAM,CAAE,cAAsC,CAAC,UAAU,CAAC,CAAC;IAC9E,CAAC;IACL,oBAAC;AAAD,CAAC,AAlDD,IAkDC;;AAED,MAAM,CAAC,IAAM,aAAa,GAAG,IAAI,aAAa,EAAE,CAAC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/di/DIBridgeUtils.d.ts","writeByteOrderMark":false,"text":"import { Component, Provider } from '@angular/core';\r\nimport { SeConstructor } from './types';\r\n/** @internal */\r\nexport declare class DIBridgeUtils {\r\n    downgradeComponent(definition: Component, componentConstructor: SeConstructor): void;\r\n    downgradeService(name: string, serviceConstructor: SeConstructor, token?: any): void;\r\n    upgradeProvider(angularJSInjectionKey: string, angularInjectionToken?: any): Provider;\r\n    private _getBridgeModule;\r\n}\r\nexport declare const diBridgeUtils: DIBridgeUtils;\r\n"}}

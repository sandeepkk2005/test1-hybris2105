{"code":"import { __extends } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { FormArray } from '@angular/forms';\r\nimport { values } from 'lodash';\r\nimport { InputProperties } from './input-properties';\r\nimport { ValidatorParameters } from './validator-parameters';\r\nvar FormList = /** @class */ (function (_super) {\r\n    __extends(FormList, _super);\r\n    function FormList(controls, validatorOrOpts, _a) {\r\n        if (validatorOrOpts === void 0) { validatorOrOpts = {}; }\r\n        var component = _a.component, _b = _a.inputs, inputs = _b === void 0 ? new InputProperties() : _b, _c = _a.validatorParams, validatorParams = _c === void 0 ? new ValidatorParameters() : _c, _d = _a.persist, persist = _d === void 0 ? true : _d;\r\n        var _this = _super.call(this, controls, validatorOrOpts) || this;\r\n        _this.component = component;\r\n        _this.inputs = inputs;\r\n        _this.inputChanges = inputs.changes;\r\n        _this.validatorParams = validatorParams;\r\n        _this.persist = persist;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritdoc\r\n     * @param key\r\n     * @param value\r\n     */\r\n    FormList.prototype.setInput = function (key, value) {\r\n        this.inputs.set(key, value);\r\n    };\r\n    /**\r\n     * @inheritdoc\r\n     * @param key\r\n     */\r\n    FormList.prototype.getInput = function (key) {\r\n        return this.inputs.get(key);\r\n    };\r\n    /**\r\n     * @inheritdoc\r\n     * @override\r\n     */\r\n    FormList.prototype.getPersistedValue = function () {\r\n        return this.controls.reduce(function (acc, child) {\r\n            if (!child.persist) {\r\n                /**\r\n                 * Look ahead and merge the values of the\r\n                 * nested group, array or field.\r\n                 *\r\n                 * If it's a field, the values of the field\r\n                 * would be an empty array, because it's not an object.\r\n                 */\r\n                return acc.concat(values(child.getPersistedValue()));\r\n            }\r\n            acc.push(child.getPersistedValue());\r\n            return acc;\r\n        }, []);\r\n    };\r\n    /**\r\n     * The size of the list.\r\n     */\r\n    FormList.prototype.size = function () {\r\n        return this.controls.length;\r\n    };\r\n    /**\r\n     * Swaps a form element in the array.\r\n     *\r\n     * @param a The index of form a.\r\n     * @param b The index of form b.\r\n     */\r\n    FormList.prototype.swapFormElements = function (a, b) {\r\n        if (!this._isInBounds(a) || !this._isInBounds(b) || a === b) {\r\n            return;\r\n        }\r\n        /**\r\n         * Swapping control's array.\r\n         */\r\n        var control = this.at(a);\r\n        this.insert(a, this.at(b));\r\n        this.insert(b, control);\r\n    };\r\n    /**\r\n     * Moves a form element in the array to a new position.\r\n     *\r\n     * @param from The previous index.\r\n     * @param to The targeted index.\r\n     */\r\n    FormList.prototype.moveFormElement = function (from, to) {\r\n        if (!this._isInBounds(from) || !this._isInBounds(to) || from === to) {\r\n            return;\r\n        }\r\n        var delta = to < from ? -1 : 1;\r\n        var tempControl = this.at(from);\r\n        for (var i = from; i !== to; i += delta) {\r\n            var position = i + delta;\r\n            this.setControl(i, this.at(position));\r\n        }\r\n        this.setControl(to, tempControl);\r\n    };\r\n    /**\r\n     * Checks of the index is in bounds.\r\n     *\r\n     * @internal\r\n     * @param index\r\n     */\r\n    FormList.prototype._isInBounds = function (index) {\r\n        return index < this.controls.length && index >= 0;\r\n    };\r\n    return FormList;\r\n}(FormArray));\r\nexport { FormList };\r\n//# sourceMappingURL=form-list.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/forms@8.2.14_e9fbe5720e9434eb9ae0f6720f1ca3f4/node_modules/@angular/forms/forms.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types/lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/rxjs@6.5.4/node_modules/rxjs/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/modules/form-builder/models/abstract-form.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/modules/form-builder/models/input-properties.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/modules/form-builder/models/interfaces.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/modules/form-builder/models/validator-parameters.ts"],"map":"{\"version\":3,\"file\":\"form-list.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/modules/form-builder/models/form-list.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/modules/form-builder/models/form-list.d.ts","writeByteOrderMark":false,"text":"import { AbstractControlOptions, FormArray } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { AbstractForm } from './abstract-form';\r\nimport { InputProperties, InputPropertyChange } from './input-properties';\r\nimport { ComponentType } from './interfaces';\r\nimport { ValidatorParameters } from './validator-parameters';\r\nexport declare class FormList extends FormArray implements AbstractForm {\r\n    /**\r\n     * @inheritdoc\r\n     * @override\r\n     */\r\n    readonly controls: AbstractForm[];\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    readonly component: ComponentType;\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    readonly inputs: InputProperties;\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    readonly validatorParams: ValidatorParameters;\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    readonly persist: boolean;\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    readonly inputChanges: Observable<InputPropertyChange>;\r\n    constructor(controls: AbstractForm[], validatorOrOpts: AbstractControlOptions, { component, inputs, validatorParams, persist }: {\r\n        component: ComponentType;\r\n        inputs: InputProperties;\r\n        validatorParams: ValidatorParameters;\r\n        persist: boolean;\r\n    });\r\n    /**\r\n     * @inheritdoc\r\n     * @param key\r\n     * @param value\r\n     */\r\n    setInput<T>(key: keyof T, value: T[keyof T]): void;\r\n    /**\r\n     * @inheritdoc\r\n     * @param key\r\n     */\r\n    getInput<T>(key: keyof T): T[keyof T] | undefined;\r\n    /**\r\n     * @inheritdoc\r\n     * @override\r\n     */\r\n    getPersistedValue(): any[];\r\n    /**\r\n     * The size of the list.\r\n     */\r\n    size(): number;\r\n    /**\r\n     * Swaps a form element in the array.\r\n     *\r\n     * @param a The index of form a.\r\n     * @param b The index of form b.\r\n     */\r\n    swapFormElements(a: number, b: number): void;\r\n    /**\r\n     * Moves a form element in the array to a new position.\r\n     *\r\n     * @param from The previous index.\r\n     * @param to The targeted index.\r\n     */\r\n    moveFormElement(from: number, to: number): void;\r\n    /**\r\n     * Checks of the index is in bounds.\r\n     *\r\n     * @internal\r\n     * @param index\r\n     */\r\n    private _isInBounds;\r\n}\r\n"}}

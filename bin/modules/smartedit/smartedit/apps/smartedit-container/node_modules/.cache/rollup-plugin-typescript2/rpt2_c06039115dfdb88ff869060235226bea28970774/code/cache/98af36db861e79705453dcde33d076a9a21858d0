{"code":"import { __decorate, __metadata, __param } from \"tslib\";\r\nimport { forwardRef, Component, Inject, Input } from '@angular/core';\r\nimport { ToolbarDropDownPosition, ToolbarItemType, ToolbarSection } from 'smarteditcommons';\r\nimport { ToolbarComponent } from './ToolbarComponent';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"ToolbarActionComponent\", {\r\n    selector: 'se-toolbar-action',\r\n    template: \"<div *ngIf=\\\"item.isPermissionGranted\\\"><div *ngIf=\\\"item.type == type.ACTION\\\" class=\\\"toolbar-action\\\"><button type=\\\"button\\\" [ngClass]=\\\"{\\n                'toolbar-action--button--compact': isCompact,\\n                'toolbar-action--button': !isCompact\\n            }\\\" class=\\\"btn\\\" (click)=\\\"toolbar.triggerAction(item, $event)\\\" [attr.aria-pressed]=\\\"false\\\" [attr.aria-haspopup]=\\\"true\\\" [attr.aria-expanded]=\\\"false\\\" id=\\\"{{toolbar.toolbarName}}_option_{{item.key}}_btn\\\"><span *ngIf=\\\"item.iconClassName\\\" id=\\\"{{toolbar.toolbarName}}_option_{{item.key}}_btn_iconclass\\\" class=\\\"{{item.iconClassName}}\\\" [ngClass]=\\\"{ 'se-toolbar-actions__icon': isCompact }\\\"></span> <img *ngIf=\\\"!item.iconClassName && item.icons\\\" id=\\\"{{toolbar.toolbarName}}_option_{{item.key}}\\\" src=\\\"{{toolbar.imageRoot}}{{item.icons[0]}}\\\" class=\\\"file\\\" title=\\\"{{item.name | translate}}\\\" alt=\\\"{{item.name | translate}}\\\"/> <span *ngIf=\\\"!isCompact\\\" class=\\\"toolbar-action-button__txt\\\" id=\\\"{{toolbar.toolbarName}}_option_{{item.key}}_btn_lbl\\\">{{item.name | translate}}</span></button></div><fd-popover class=\\\"se-toolbar-action__wrapper toolbar-action toolbar-action--hybrid\\\" *ngIf=\\\"item.type === type.HYBRID_ACTION\\\" [attr.data-item-key]=\\\"item.key\\\" [triggers]=\\\"['click']\\\" [noArrow]=\\\"false\\\" [isOpen]=\\\"item.isOpen\\\" (isOpenChange)=\\\"onOpenChange()\\\" [placement]=\\\"placement\\\" seClickOutside (clickOutside)=\\\"onOutsideClicked()\\\"><fd-popover-control><button *ngIf=\\\"item.iconClassName || item.icons\\\" type=\\\"button\\\" class=\\\"btn\\\" [ngClass]=\\\"{\\n                    'toolbar-action--button--compact': isCompact,\\n                    'toolbar-action--button': !isCompact\\n                }\\\" [disabled]=\\\"disabled\\\" [attr.aria-pressed]=\\\"false \\\" (click)=\\\"toolbar.triggerAction(item, $event)\\\"><span *ngIf=\\\"item.iconClassName\\\" class=\\\"{{item.iconClassName}}\\\" [ngClass]=\\\"{ 'se-toolbar-actions__icon': isCompact }\\\"></span> <img *ngIf=\\\"!item.iconClassName && item.icons\\\" id=\\\"{{toolbar.toolbarName}}_option_{{item.key}}\\\" src=\\\"{{toolbar.imageRoot}}{{item.icons[0]}}\\\" class=\\\"file\\\" title=\\\"{{item.name | translate}}\\\" alt=\\\"{{item.name | translate}}\\\"/> <span *ngIf=\\\"!isCompact\\\" class=\\\"toolbar-action-button__txt\\\">{{item.name | translate}}</span></button></fd-popover-control><fd-popover-body class=\\\"se-toolbar-action__body\\\" [ngClass]=\\\"{\\n                'toolbar-action--include--compact': isCompact,\\n                'toolbar-action--include': !isCompact\\n              \\n            }\\\"><se-prevent-vertical-overflow><div *ngIf=\\\"toolbar.getItemVisibility(item) && item.include\\\" [ngInclude]=\\\"item.include\\\" [scope]=\\\"{ item: item }\\\" [compileHtmlNgController]=\\\"legacyController\\\"></div><ng-container *ngIf=\\\"toolbar.getItemVisibility(item) && item.component\\\"><ng-container *ngComponentOutlet=\\\"item.component; injector: actionInjector\\\"></ng-container></ng-container></se-prevent-vertical-overflow></fd-popover-body></fd-popover></div>\"\r\n});\r\nvar ToolbarActionComponent = /** @class */ (function () {\r\n    function ToolbarActionComponent(toolbar) {\r\n        this.toolbar = toolbar;\r\n        this.type = ToolbarItemType;\r\n    }\r\n    ToolbarActionComponent.prototype.ngOnInit = function () {\r\n        this.setup();\r\n    };\r\n    ToolbarActionComponent.prototype.ngOnChanges = function (changes) {\r\n        if (changes.item) {\r\n            this.setup();\r\n        }\r\n    };\r\n    Object.defineProperty(ToolbarActionComponent.prototype, \"isCompact\", {\r\n        get: function () {\r\n            return this.item.actionButtonFormat === 'compact';\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ToolbarActionComponent.prototype, \"placement\", {\r\n        get: function () {\r\n            if (this.item.section === ToolbarSection.left ||\r\n                this.item.section === ToolbarSection.middle) {\r\n                return 'bottom-start';\r\n            }\r\n            else if (this.item.section === ToolbarSection.right) {\r\n                return 'bottom-end';\r\n            }\r\n            switch (this.item.dropdownPosition) {\r\n                case ToolbarDropDownPosition.left:\r\n                    return 'bottom-start';\r\n                case ToolbarDropDownPosition.right:\r\n                    return 'bottom-end';\r\n                default:\r\n                    return 'bottom';\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    ToolbarActionComponent.prototype.onOutsideClicked = function () {\r\n        this.item.isOpen = false;\r\n    };\r\n    ToolbarActionComponent.prototype.onOpenChange = function () {\r\n        this.item.isOpen = !this.item.isOpen;\r\n    };\r\n    ToolbarActionComponent.prototype.setup = function () {\r\n        this.legacyController = this.toolbar.createLegacyController();\r\n        this.actionInjector = this.toolbar.createInjector(this.item);\r\n    };\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], ToolbarActionComponent.prototype, \"item\", void 0);\r\n    ToolbarActionComponent = __decorate([\r\n        Component({\r\n            selector: 'se-toolbar-action',\r\n            template: \"<div *ngIf=\\\"item.isPermissionGranted\\\"><div *ngIf=\\\"item.type == type.ACTION\\\" class=\\\"toolbar-action\\\"><button type=\\\"button\\\" [ngClass]=\\\"{\\n                'toolbar-action--button--compact': isCompact,\\n                'toolbar-action--button': !isCompact\\n            }\\\" class=\\\"btn\\\" (click)=\\\"toolbar.triggerAction(item, $event)\\\" [attr.aria-pressed]=\\\"false\\\" [attr.aria-haspopup]=\\\"true\\\" [attr.aria-expanded]=\\\"false\\\" id=\\\"{{toolbar.toolbarName}}_option_{{item.key}}_btn\\\"><span *ngIf=\\\"item.iconClassName\\\" id=\\\"{{toolbar.toolbarName}}_option_{{item.key}}_btn_iconclass\\\" class=\\\"{{item.iconClassName}}\\\" [ngClass]=\\\"{ 'se-toolbar-actions__icon': isCompact }\\\"></span> <img *ngIf=\\\"!item.iconClassName && item.icons\\\" id=\\\"{{toolbar.toolbarName}}_option_{{item.key}}\\\" src=\\\"{{toolbar.imageRoot}}{{item.icons[0]}}\\\" class=\\\"file\\\" title=\\\"{{item.name | translate}}\\\" alt=\\\"{{item.name | translate}}\\\"/> <span *ngIf=\\\"!isCompact\\\" class=\\\"toolbar-action-button__txt\\\" id=\\\"{{toolbar.toolbarName}}_option_{{item.key}}_btn_lbl\\\">{{item.name | translate}}</span></button></div><fd-popover class=\\\"se-toolbar-action__wrapper toolbar-action toolbar-action--hybrid\\\" *ngIf=\\\"item.type === type.HYBRID_ACTION\\\" [attr.data-item-key]=\\\"item.key\\\" [triggers]=\\\"['click']\\\" [noArrow]=\\\"false\\\" [isOpen]=\\\"item.isOpen\\\" (isOpenChange)=\\\"onOpenChange()\\\" [placement]=\\\"placement\\\" seClickOutside (clickOutside)=\\\"onOutsideClicked()\\\"><fd-popover-control><button *ngIf=\\\"item.iconClassName || item.icons\\\" type=\\\"button\\\" class=\\\"btn\\\" [ngClass]=\\\"{\\n                    'toolbar-action--button--compact': isCompact,\\n                    'toolbar-action--button': !isCompact\\n                }\\\" [disabled]=\\\"disabled\\\" [attr.aria-pressed]=\\\"false \\\" (click)=\\\"toolbar.triggerAction(item, $event)\\\"><span *ngIf=\\\"item.iconClassName\\\" class=\\\"{{item.iconClassName}}\\\" [ngClass]=\\\"{ 'se-toolbar-actions__icon': isCompact }\\\"></span> <img *ngIf=\\\"!item.iconClassName && item.icons\\\" id=\\\"{{toolbar.toolbarName}}_option_{{item.key}}\\\" src=\\\"{{toolbar.imageRoot}}{{item.icons[0]}}\\\" class=\\\"file\\\" title=\\\"{{item.name | translate}}\\\" alt=\\\"{{item.name | translate}}\\\"/> <span *ngIf=\\\"!isCompact\\\" class=\\\"toolbar-action-button__txt\\\">{{item.name | translate}}</span></button></fd-popover-control><fd-popover-body class=\\\"se-toolbar-action__body\\\" [ngClass]=\\\"{\\n                'toolbar-action--include--compact': isCompact,\\n                'toolbar-action--include': !isCompact\\n              \\n            }\\\"><se-prevent-vertical-overflow><div *ngIf=\\\"toolbar.getItemVisibility(item) && item.include\\\" [ngInclude]=\\\"item.include\\\" [scope]=\\\"{ item: item }\\\" [compileHtmlNgController]=\\\"legacyController\\\"></div><ng-container *ngIf=\\\"toolbar.getItemVisibility(item) && item.component\\\"><ng-container *ngComponentOutlet=\\\"item.component; injector: actionInjector\\\"></ng-container></ng-container></se-prevent-vertical-overflow></fd-popover-body></fd-popover></div>\"\r\n        }),\r\n        __param(0, Inject(forwardRef(function () { return ToolbarComponent; }))),\r\n        __metadata(\"design:paramtypes\", [ToolbarComponent])\r\n    ], ToolbarActionComponent);\r\n    return ToolbarActionComponent;\r\n}());\r\nexport { ToolbarActionComponent };\r\n//# sourceMappingURL=ToolbarActionComponent.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/popper.js@1.16.1/node_modules/popper.js/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/src/services/toolbar/components/ToolbarComponent.ts"],"map":"{\"version\":3,\"file\":\"ToolbarActionComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/services/toolbar/components/ToolbarActionComponent.ts\"],\"names\":[],\"mappings\":\";AACA,OAAO,EACH,UAAU,EACV,SAAS,EACT,MAAM,EAEN,KAAK,EAIR,MAAM,eAAe,CAAC;AAGvB,OAAO,EAEH,uBAAuB,EAEvB,eAAe,EACf,cAAc,EACjB,MAAM,kBAAkB,CAAC;AAC1B,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;gFAG3C;IACP,QAAQ,EAAE,mBAAmB;IAC7B,QAAQ,EAAE,g5FAU0b;CACvc;AACD;IAOI,gCAA+D,OAAyB;QAAzB,YAAO,GAAP,OAAO,CAAkB;QAFjF,SAAI,GAAG,eAAe,CAAC;IAE6D,CAAC;IAE5F,yCAAQ,GAAR;QACI,IAAI,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;IAED,4CAAW,GAAX,UAAY,OAAsB;QAC9B,IAAI,OAAO,CAAC,IAAI,EAAE;YACd,IAAI,CAAC,KAAK,EAAE,CAAC;SAChB;IACL,CAAC;IAED,sBAAW,6CAAS;aAApB;YACI,OAAO,IAAI,CAAC,IAAI,CAAC,kBAAkB,KAAK,SAAS,CAAC;QACtD,CAAC;;;OAAA;IAED,sBAAW,6CAAS;aAApB;YACI,IACI,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,cAAc,CAAC,IAAI;gBACzC,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,cAAc,CAAC,MAAM,EAC7C;gBACE,OAAO,cAAc,CAAC;aACzB;iBAAM,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,cAAc,CAAC,KAAK,EAAE;gBACnD,OAAO,YAAY,CAAC;aACvB;YAED,QAAQ,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;gBAChC,KAAK,uBAAuB,CAAC,IAAI;oBAC7B,OAAO,cAAc,CAAC;gBAC1B,KAAK,uBAAuB,CAAC,KAAK;oBAC9B,OAAO,YAAY,CAAC;gBACxB;oBACI,OAAO,QAAQ,CAAC;aACvB;QACL,CAAC;;;OAAA;IAEM,iDAAgB,GAAvB;QACI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IAC7B,CAAC;IAEM,6CAAY,GAAnB;QACI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;IACzC,CAAC;IAEO,sCAAK,GAAb;QACI,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,sBAAsB,EAAE,CAAC;QAC9D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjE,CAAC;IArDQ;QAAR,KAAK,EAAE;;wDAA2B;IAD1B,sBAAsB;QAdlC,SAAS,CAAC;YACP,QAAQ,EAAE,mBAAmB;YAC7B,QAAQ,EAAE,g5FAU0b;SACvc,CAAC;QAQe,WAAA,MAAM,CAAC,UAAU,CAAC,cAAM,OAAA,gBAAgB,EAAhB,CAAgB,CAAC,CAAC,CAAA;yCAAiB,gBAAgB;OAP/E,sBAAsB,CAuDlC;IAAD,6BAAC;CAAA,AAvDD,IAuDC;SAvDY,sBAAsB\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/services/toolbar/components/ToolbarActionComponent.d.ts","writeByteOrderMark":false,"text":"import { Injector, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { Placement } from 'popper.js';\r\nimport { CompileHtmlNgController, ToolbarItemInternal, ToolbarItemType } from 'smarteditcommons';\r\nimport { ToolbarComponent } from './ToolbarComponent';\r\nexport declare class ToolbarActionComponent implements OnInit, OnChanges {\r\n    toolbar: ToolbarComponent;\r\n    item: ToolbarItemInternal;\r\n    legacyController: CompileHtmlNgController;\r\n    actionInjector: Injector;\r\n    type: typeof ToolbarItemType;\r\n    constructor(toolbar: ToolbarComponent);\r\n    ngOnInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    get isCompact(): boolean;\r\n    get placement(): Placement;\r\n    onOutsideClicked(): void;\r\n    onOpenChange(): void;\r\n    private setup;\r\n}\r\n"}}

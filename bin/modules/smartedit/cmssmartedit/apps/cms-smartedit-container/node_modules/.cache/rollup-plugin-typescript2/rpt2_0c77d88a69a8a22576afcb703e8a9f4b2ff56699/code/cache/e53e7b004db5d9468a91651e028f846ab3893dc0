{"code":"import { __awaiter, __decorate, __generator, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { CMSModesService } from 'cmscommons';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { CrossFrameEventService, EVENTS, EVENT_PERSPECTIVE_CHANGED, EVENT_PERSPECTIVE_REFRESHED, HIDE_TOOLBAR_ITEM_CONTEXT, IAlertService, IExperienceService, IPageInfoService, SeDowngradeService, SHOW_TOOLBAR_ITEM_CONTEXT } from 'smarteditcommons';\r\nimport { PageVersioningService } from './PageVersioningService';\r\n/**\r\n * This service is meant to be used internally by the page versions menu.\r\n * It allows selecting and deselecting a page version to be rendered in the Versioning Mode.\r\n */\r\nvar /* @ngInject */ PageVersionSelectionService = /** @class */ (function () {\r\n    function /* @ngInject */ PageVersionSelectionService(crossFrameEventService, alertService, experienceService, cMSModesService, pageInfoService, pageVersioningService, translateService) {\r\n        var _this = this;\r\n        this.crossFrameEventService = crossFrameEventService;\r\n        this.alertService = alertService;\r\n        this.experienceService = experienceService;\r\n        this.cMSModesService = cMSModesService;\r\n        this.pageInfoService = pageInfoService;\r\n        this.pageVersioningService = pageVersioningService;\r\n        this.translateService = translateService;\r\n        this.PAGE_VERSIONS_TOOLBAR_ITEM_KEY = 'se.cms.pageVersionsMenu';\r\n        this.PAGE_VERSION_UNSELECTED_MSG_KEY = 'se.cms.versions.unselect.version';\r\n        this.selectedPageVersionSubject = new BehaviorSubject(null);\r\n        this.unSubEventPerspectiveChanged = this.crossFrameEventService.subscribe(EVENT_PERSPECTIVE_CHANGED, function () { return _this.removePageVersionOnPerspectiveChange(); });\r\n        this.unSubEventPerspectiveRefreshed = this.crossFrameEventService.subscribe(EVENT_PERSPECTIVE_REFRESHED, function () { return _this.resetPageVersionContext(); });\r\n        this.unSubEventPageChange = this.crossFrameEventService.subscribe(EVENTS.PAGE_CHANGE, function (_eventId, experience) { return _this.initOnPageChange(experience); });\r\n        this.unSubSelectedPageVersion = this.selectedPageVersionSubject.subscribe(function (value) { return (_this.selectedPageVersion = value); });\r\n    }\r\n    /* @ngInject */ PageVersionSelectionService.prototype.ngOnDestroy = function () {\r\n        this.unSubEventPerspectiveChanged();\r\n        this.unSubEventPerspectiveRefreshed();\r\n        this.unSubEventPageChange();\r\n        this.unSubSelectedPageVersion.unsubscribe();\r\n    };\r\n    /* @ngInject */ PageVersionSelectionService.prototype.getSelectedPageVersion = function () {\r\n        return this.selectedPageVersion;\r\n    };\r\n    /* @ngInject */ PageVersionSelectionService.prototype.getSelectedPageVersion$ = function () {\r\n        return this.selectedPageVersionSubject.asObservable();\r\n    };\r\n    /* @ngInject */ PageVersionSelectionService.prototype.hideToolbarContextIfNotNeeded = function () {\r\n        if (!this.selectedPageVersion) {\r\n            this.crossFrameEventService.publish(HIDE_TOOLBAR_ITEM_CONTEXT, this.PAGE_VERSIONS_TOOLBAR_ITEM_KEY);\r\n        }\r\n    };\r\n    /* @ngInject */ PageVersionSelectionService.prototype.showToolbarContextIfNeeded = function () {\r\n        if (this.selectedPageVersion) {\r\n            this.crossFrameEventService.publish(SHOW_TOOLBAR_ITEM_CONTEXT, this.PAGE_VERSIONS_TOOLBAR_ITEM_KEY);\r\n        }\r\n    };\r\n    /* @ngInject */ PageVersionSelectionService.prototype.selectPageVersion = function (version) {\r\n        if (!this.isSameVersion(this.selectedPageVersion, version)) {\r\n            this.selectedPageVersionSubject.next(version);\r\n            this.experienceService.updateExperience({\r\n                versionId: version.uid\r\n            });\r\n            this.showToolbarContextIfNeeded();\r\n            this.crossFrameEventService.publish(EVENTS.PAGE_SELECTED);\r\n        }\r\n    };\r\n    /* @ngInject */ PageVersionSelectionService.prototype.deselectPageVersion = function (showAlert) {\r\n        if (showAlert === void 0) { showAlert = true; }\r\n        if (this.selectedPageVersion && showAlert) {\r\n            var msgTranslated = this.translateService.instant(this.PAGE_VERSION_UNSELECTED_MSG_KEY);\r\n            this.alertService.showInfo(msgTranslated);\r\n        }\r\n        this.selectedPageVersionSubject.next(null);\r\n        this.experienceService.updateExperience({\r\n            versionId: null\r\n        });\r\n        this.crossFrameEventService.publish(HIDE_TOOLBAR_ITEM_CONTEXT, this.PAGE_VERSIONS_TOOLBAR_ITEM_KEY);\r\n    };\r\n    /* @ngInject */ PageVersionSelectionService.prototype.updatePageVersionDetails = function (version) {\r\n        this.selectedPageVersionSubject.next(version);\r\n    };\r\n    /**\r\n     * Required especially when a version is selected and you refresh the browser.\r\n     */\r\n    /* @ngInject */ PageVersionSelectionService.prototype.initOnPageChange = function (experience) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var pageUuid, version;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!(experience.versionId && !this.selectedPageVersion)) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, this.pageInfoService.getPageUUID()];\r\n                    case 1:\r\n                        pageUuid = _a.sent();\r\n                        return [4 /*yield*/, this.pageVersioningService.getPageVersionForId(pageUuid, String(experience.versionId))];\r\n                    case 2:\r\n                        version = _a.sent();\r\n                        this.selectedPageVersionSubject.next(version);\r\n                        this.showToolbarContextIfNeeded();\r\n                        this.crossFrameEventService.publish(EVENTS.PAGE_SELECTED);\r\n                        _a.label = 3;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ PageVersionSelectionService.prototype.isSameVersion = function (selectedPageVersion, newVersion) {\r\n        return selectedPageVersion !== null && newVersion !== null\r\n            ? this.selectedPageVersion.uid === newVersion.uid\r\n            : false;\r\n    };\r\n    /* @ngInject */ PageVersionSelectionService.prototype.removePageVersionOnPerspectiveChange = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var isVersioningModeActive, pageUuid;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.cMSModesService.isVersioningPerspectiveActive()];\r\n                    case 1:\r\n                        isVersioningModeActive = _a.sent();\r\n                        if (!this.selectedPageVersion) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, this.pageInfoService.getPageUUID()];\r\n                    case 2:\r\n                        pageUuid = _a.sent();\r\n                        if (!isVersioningModeActive || this.selectedPageVersion.itemUUID !== pageUuid) {\r\n                            this.deselectPageVersion();\r\n                        }\r\n                        _a.label = 3;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ PageVersionSelectionService.prototype.resetPageVersionContext = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var experience;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.experienceService.getCurrentExperience()];\r\n                    case 1:\r\n                        experience = _a.sent();\r\n                        if (!experience.versionId && this.selectedPageVersion) {\r\n                            this.selectedPageVersionSubject.next(null);\r\n                            this.hideToolbarContextIfNotNeeded();\r\n                        }\r\n                        else {\r\n                            this.showToolbarContextIfNeeded();\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ PageVersionSelectionService = __decorate([\r\n        SeDowngradeService(),\r\n        __metadata(\"design:paramtypes\", [CrossFrameEventService,\r\n            IAlertService,\r\n            IExperienceService,\r\n            CMSModesService,\r\n            IPageInfoService,\r\n            PageVersioningService,\r\n            TranslateService])\r\n    ], /* @ngInject */ PageVersionSelectionService);\r\n    return /* @ngInject */ PageVersionSelectionService;\r\n}());\r\nexport { /* @ngInject */ PageVersionSelectionService };\r\n//# sourceMappingURL=PageVersionSelectionService.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@ngx-translate/core@11.0.1_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@ngx-translate/core/ngx-translate-core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/rxjs@6.5.4/node_modules/rxjs/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/versioning/services/PageVersioningService.ts"],"map":"{\"version\":3,\"file\":\"PageVersionSelectionService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/components/versioning/services/PageVersionSelectionService.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/components/versioning/services/PageVersionSelectionService.d.ts","writeByteOrderMark":false,"text":"import { TranslateService } from '@ngx-translate/core';\r\nimport { CMSModesService } from 'cmscommons';\r\nimport { Observable } from 'rxjs';\r\nimport { CrossFrameEventService, IAlertService, IExperienceService, IPageInfoService } from 'smarteditcommons';\r\nimport { PageVersioningService, IPageVersion } from './PageVersioningService';\r\n/**\r\n * This service is meant to be used internally by the page versions menu.\r\n * It allows selecting and deselecting a page version to be rendered in the Versioning Mode.\r\n */\r\nexport declare class PageVersionSelectionService {\r\n    private crossFrameEventService;\r\n    private alertService;\r\n    private experienceService;\r\n    private cMSModesService;\r\n    private pageInfoService;\r\n    private pageVersioningService;\r\n    private translateService;\r\n    private PAGE_VERSIONS_TOOLBAR_ITEM_KEY;\r\n    private PAGE_VERSION_UNSELECTED_MSG_KEY;\r\n    private selectedPageVersionSubject;\r\n    private selectedPageVersion;\r\n    private unSubEventPerspectiveChanged;\r\n    private unSubEventPerspectiveRefreshed;\r\n    private unSubEventPageChange;\r\n    private unSubSelectedPageVersion;\r\n    constructor(crossFrameEventService: CrossFrameEventService, alertService: IAlertService, experienceService: IExperienceService, cMSModesService: CMSModesService, pageInfoService: IPageInfoService, pageVersioningService: PageVersioningService, translateService: TranslateService);\r\n    ngOnDestroy(): void;\r\n    getSelectedPageVersion(): IPageVersion;\r\n    getSelectedPageVersion$(): Observable<IPageVersion>;\r\n    hideToolbarContextIfNotNeeded(): void;\r\n    showToolbarContextIfNeeded(): void;\r\n    selectPageVersion(version: IPageVersion): void;\r\n    deselectPageVersion(showAlert?: boolean): void;\r\n    updatePageVersionDetails(version: IPageVersion): void;\r\n    /**\r\n     * Required especially when a version is selected and you refresh the browser.\r\n     */\r\n    private initOnPageChange;\r\n    private isSameVersion;\r\n    private removePageVersionOnPerspectiveChange;\r\n    private resetPageVersionContext;\r\n}\r\n"}}

{"code":"import { __awaiter, __decorate, __generator, __metadata } from \"tslib\";\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { FileValidatorFactory, FILE_VALIDATION_CONFIG, SeDowngradeComponent, stringUtils } from 'smarteditcommons';\r\nimport { MediaBackendValidationHandler, MediaUploaderService } from '../../services';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"MediaUploadFormComponent\", {\r\n    selector: 'se-media-upload-form',\r\n    template: \"<div class=\\\"se-media-upload-form\\\"><div class=\\\"se-media-upload-form__header\\\"><div class=\\\"se-media-upload-form__header-title\\\" translate=\\\"se.upload.image.to.library\\\"></div><div class=\\\"se-media-upload-form__header-actions\\\"><button type=\\\"button\\\" class=\\\"fd-button--light se-media-upload-btn__cancel fd-button--compact\\\" translate=\\\"se.upload.image.cancel\\\" (click)=\\\"cancel()\\\"></button> <button type=\\\"button\\\" class=\\\"fd-button se-media-upload-btn__submit fd-button--compact\\\" translate=\\\"se.upload.image.submit\\\" (click)=\\\"uploadMedia()\\\"></button></div></div><div class=\\\"se-media-upload-form__replace-file\\\"><div class=\\\"se-media-upload-form__file-name\\\">{{ image.name }}</div><se-media-file-selector [labelI18nKey]=\\\"'se.upload.image.replace'\\\" [acceptedFileTypes]=\\\"acceptedFileTypes\\\" (onFileSelect)=\\\"onFileSelect($event)\\\"></se-media-file-selector></div><form class=\\\"se-media-upload-form__file-info\\\"><se-media-upload-field [fieldName]=\\\"'code'\\\" [fieldValue]=\\\"imageParams.code\\\" [fieldErrors]=\\\"getErrorsForFieldByCode('code')\\\" [isRequired]=\\\"true\\\" [labelI18nKey]=\\\"'se.uploaded.image.code'\\\" (fieldValueChange)=\\\"onChangeFieldValue($event, 'code')\\\"></se-media-upload-field><se-media-upload-field [fieldName]=\\\"'description'\\\" [fieldValue]=\\\"imageParams.description\\\" [fieldErrors]=\\\"getErrorsForFieldByCode('description')\\\" [labelI18nKey]=\\\"'se.uploaded.image.description'\\\" (fieldValueChange)=\\\"onChangeFieldValue($event, 'description')\\\"></se-media-upload-field><se-media-upload-field [fieldName]=\\\"'alt-text'\\\" [fieldValue]=\\\"imageParams.altText\\\" [fieldErrors]=\\\"getErrorsForFieldByCode('altText')\\\" [labelI18nKey]=\\\"'se.uploaded.image.alt.text'\\\" (fieldValueChange)=\\\"onChangeFieldValue($event, 'altText')\\\"></se-media-upload-field></form><se-spinner [isSpinning]=\\\"isUploading\\\"></se-spinner></div>\",\r\n    styles: [\".se-media-upload-form{box-shadow:0 6px 12px rgba(0,0,0,.175);border-radius:4px}.se-media-upload-form__header{display:flex;flex-direction:row;align-items:center;justify-content:space-between;border-bottom:1px solid #d9d9d9;height:53px;padding:20px}.se-media-upload-form__header-title{font-size:1.1428571429rem;line-height:1.25;font-weight:400;color:#32363a}.se-media-upload-form__replace-file{display:flex;flex-direction:row;align-items:center;justify-content:space-between;padding:16px 20px 0}.se-media-upload-form__file-name{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;word-break:break-all;max-width:80%}.se-media-upload-form__file-info{display:grid;grid-template-columns:repeat(2,1fr);grid-gap:16px;padding:20px}\"],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n});\r\nvar /* @ngInject */ MediaUploadFormComponent = /** @class */ (function () {\r\n    function /* @ngInject */ MediaUploadFormComponent(cdr, fileValidatorFactory, mediaBackendValidationHandler, mediaUploaderService) {\r\n        this.cdr = cdr;\r\n        this.fileValidatorFactory = fileValidatorFactory;\r\n        this.mediaBackendValidationHandler = mediaBackendValidationHandler;\r\n        this.mediaUploaderService = mediaUploaderService;\r\n        this.onCancel = new EventEmitter();\r\n        this.onSelect = new EventEmitter();\r\n        this.onUploadSuccess = new EventEmitter();\r\n        this.acceptedFileTypes = FILE_VALIDATION_CONFIG.ACCEPTED_FILE_TYPES;\r\n        this.fieldErrors = [];\r\n        this.imageParams = null;\r\n        this.fileValidator = this.fileValidatorFactory.build([\r\n            {\r\n                subject: 'code',\r\n                message: 'se.uploaded.image.code.is.required',\r\n                validate: function (code) { return !!code; }\r\n            }\r\n        ]);\r\n    }\r\n    /* @ngInject */ MediaUploadFormComponent.prototype.ngOnChanges = function (changes) {\r\n        var imageChange = changes.image;\r\n        if (imageChange) {\r\n            var imageName = this.image.name;\r\n            this.imageParams = {\r\n                code: imageName,\r\n                description: imageName,\r\n                altText: imageName\r\n            };\r\n        }\r\n    };\r\n    /* @ngInject */ MediaUploadFormComponent.prototype.getErrorsForFieldByCode = function (code) {\r\n        return this.fieldErrors\r\n            .filter(function (error) { return error.subject === code; })\r\n            .map(function (error) { return error.message; });\r\n    };\r\n    /* @ngInject */ MediaUploadFormComponent.prototype.uploadMedia = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var uploadedMedia, error_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.fieldErrors = [];\r\n                        if (!this.fileValidator.validate(this.imageParams, this.fieldErrors)) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        this.isUploading = true;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, 4, 5]);\r\n                        return [4 /*yield*/, this.mediaUploaderService.uploadMedia({\r\n                                file: this.image,\r\n                                code: stringUtils.escapeHtml(this.imageParams.code),\r\n                                description: stringUtils.escapeHtml(this.imageParams.description),\r\n                                altText: stringUtils.escapeHtml(this.imageParams.altText)\r\n                            })];\r\n                    case 2:\r\n                        uploadedMedia = _a.sent();\r\n                        this.onMediaUploadSuccess(uploadedMedia);\r\n                        return [3 /*break*/, 5];\r\n                    case 3:\r\n                        error_1 = _a.sent();\r\n                        this.onMediaUploadFail(error_1);\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        this.isUploading = false;\r\n                        return [7 /*endfinally*/];\r\n                    case 5:\r\n                        this.cdr.detectChanges();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ MediaUploadFormComponent.prototype.cancel = function () {\r\n        this.reset();\r\n        this.onCancel.emit();\r\n    };\r\n    /* @ngInject */ MediaUploadFormComponent.prototype.onChangeFieldValue = function (value, paramName) {\r\n        this.imageParams[paramName] = value;\r\n    };\r\n    /* @ngInject */ MediaUploadFormComponent.prototype.onFileSelect = function (fileList) {\r\n        this.onSelect.emit(fileList);\r\n    };\r\n    /* @ngInject */ MediaUploadFormComponent.prototype.onMediaUploadSuccess = function (_a) {\r\n        var uuid = _a.uuid;\r\n        this.reset();\r\n        this.onUploadSuccess.emit(uuid);\r\n    };\r\n    /* @ngInject */ MediaUploadFormComponent.prototype.onMediaUploadFail = function (response) {\r\n        this.mediaBackendValidationHandler.handleResponse(response, this.fieldErrors);\r\n    };\r\n    /* @ngInject */ MediaUploadFormComponent.prototype.reset = function () {\r\n        this.imageParams = null;\r\n        this.fieldErrors = [];\r\n        this.isUploading = false;\r\n    };\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", File)\r\n    ], /* @ngInject */ MediaUploadFormComponent.prototype, \"image\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], /* @ngInject */ MediaUploadFormComponent.prototype, \"onCancel\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], /* @ngInject */ MediaUploadFormComponent.prototype, \"onSelect\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], /* @ngInject */ MediaUploadFormComponent.prototype, \"onUploadSuccess\", void 0);\r\n    /* @ngInject */ MediaUploadFormComponent = __decorate([\r\n        SeDowngradeComponent(),\r\n        Component({\r\n            selector: 'se-media-upload-form',\r\n            template: \"<div class=\\\"se-media-upload-form\\\"><div class=\\\"se-media-upload-form__header\\\"><div class=\\\"se-media-upload-form__header-title\\\" translate=\\\"se.upload.image.to.library\\\"></div><div class=\\\"se-media-upload-form__header-actions\\\"><button type=\\\"button\\\" class=\\\"fd-button--light se-media-upload-btn__cancel fd-button--compact\\\" translate=\\\"se.upload.image.cancel\\\" (click)=\\\"cancel()\\\"></button> <button type=\\\"button\\\" class=\\\"fd-button se-media-upload-btn__submit fd-button--compact\\\" translate=\\\"se.upload.image.submit\\\" (click)=\\\"uploadMedia()\\\"></button></div></div><div class=\\\"se-media-upload-form__replace-file\\\"><div class=\\\"se-media-upload-form__file-name\\\">{{ image.name }}</div><se-media-file-selector [labelI18nKey]=\\\"'se.upload.image.replace'\\\" [acceptedFileTypes]=\\\"acceptedFileTypes\\\" (onFileSelect)=\\\"onFileSelect($event)\\\"></se-media-file-selector></div><form class=\\\"se-media-upload-form__file-info\\\"><se-media-upload-field [fieldName]=\\\"'code'\\\" [fieldValue]=\\\"imageParams.code\\\" [fieldErrors]=\\\"getErrorsForFieldByCode('code')\\\" [isRequired]=\\\"true\\\" [labelI18nKey]=\\\"'se.uploaded.image.code'\\\" (fieldValueChange)=\\\"onChangeFieldValue($event, 'code')\\\"></se-media-upload-field><se-media-upload-field [fieldName]=\\\"'description'\\\" [fieldValue]=\\\"imageParams.description\\\" [fieldErrors]=\\\"getErrorsForFieldByCode('description')\\\" [labelI18nKey]=\\\"'se.uploaded.image.description'\\\" (fieldValueChange)=\\\"onChangeFieldValue($event, 'description')\\\"></se-media-upload-field><se-media-upload-field [fieldName]=\\\"'alt-text'\\\" [fieldValue]=\\\"imageParams.altText\\\" [fieldErrors]=\\\"getErrorsForFieldByCode('altText')\\\" [labelI18nKey]=\\\"'se.uploaded.image.alt.text'\\\" (fieldValueChange)=\\\"onChangeFieldValue($event, 'altText')\\\"></se-media-upload-field></form><se-spinner [isSpinning]=\\\"isUploading\\\"></se-spinner></div>\",\r\n            styles: [\".se-media-upload-form{box-shadow:0 6px 12px rgba(0,0,0,.175);border-radius:4px}.se-media-upload-form__header{display:flex;flex-direction:row;align-items:center;justify-content:space-between;border-bottom:1px solid #d9d9d9;height:53px;padding:20px}.se-media-upload-form__header-title{font-size:1.1428571429rem;line-height:1.25;font-weight:400;color:#32363a}.se-media-upload-form__replace-file{display:flex;flex-direction:row;align-items:center;justify-content:space-between;padding:16px 20px 0}.se-media-upload-form__file-name{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;word-break:break-all;max-width:80%}.se-media-upload-form__file-info{display:grid;grid-template-columns:repeat(2,1fr);grid-gap:16px;padding:20px}\"],\r\n            changeDetection: ChangeDetectionStrategy.OnPush\r\n        }),\r\n        __metadata(\"design:paramtypes\", [ChangeDetectorRef,\r\n            FileValidatorFactory,\r\n            MediaBackendValidationHandler,\r\n            MediaUploaderService])\r\n    ], /* @ngInject */ MediaUploadFormComponent);\r\n    return /* @ngInject */ MediaUploadFormComponent;\r\n}());\r\nexport { /* @ngInject */ MediaUploadFormComponent };\r\n//# sourceMappingURL=MediaUploadFormComponent.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/genericEditor/media/services/index.ts"],"map":"{\"version\":3,\"file\":\"MediaUploadFormComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../src/components/genericEditor/media/components/mediaUploadForm/MediaUploadFormComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/components/genericEditor/media/components/mediaUploadForm/MediaUploadFormComponent.d.ts","writeByteOrderMark":false,"text":"import { ChangeDetectorRef, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { ErrorContext, FileValidatorFactory } from 'smarteditcommons';\r\nimport { MediaBackendValidationHandler, MediaUploaderService } from '../../services';\r\ninterface ImageEditableParams {\r\n    code: string;\r\n    description: string;\r\n    altText: string;\r\n}\r\nexport declare class MediaUploadFormComponent implements OnChanges {\r\n    private cdr;\r\n    private fileValidatorFactory;\r\n    private mediaBackendValidationHandler;\r\n    private mediaUploaderService;\r\n    image: File;\r\n    onCancel: EventEmitter<void>;\r\n    onSelect: EventEmitter<FileList>;\r\n    onUploadSuccess: EventEmitter<string>;\r\n    acceptedFileTypes: string[];\r\n    isUploading: boolean;\r\n    fieldErrors: ErrorContext[];\r\n    imageParams: ImageEditableParams | null;\r\n    private fileValidator;\r\n    constructor(cdr: ChangeDetectorRef, fileValidatorFactory: FileValidatorFactory, mediaBackendValidationHandler: MediaBackendValidationHandler, mediaUploaderService: MediaUploaderService);\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    getErrorsForFieldByCode(code: keyof ImageEditableParams): string[];\r\n    uploadMedia(): Promise<void>;\r\n    cancel(): void;\r\n    onChangeFieldValue(value: string, paramName: keyof ImageEditableParams): void;\r\n    onFileSelect(fileList: FileList): void;\r\n    private onMediaUploadSuccess;\r\n    private onMediaUploadFail;\r\n    private reset;\r\n}\r\nexport {};\r\n"}}

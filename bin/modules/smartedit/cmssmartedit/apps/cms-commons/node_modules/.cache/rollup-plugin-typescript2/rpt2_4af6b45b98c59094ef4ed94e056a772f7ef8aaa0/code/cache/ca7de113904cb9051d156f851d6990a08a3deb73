{"code":"/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nexport var COMPONENT_IN_SLOT_STATUS;\r\n(function (COMPONENT_IN_SLOT_STATUS) {\r\n    COMPONENT_IN_SLOT_STATUS[\"ALLOWED\"] = \"allowed\";\r\n    COMPONENT_IN_SLOT_STATUS[\"DISALLOWED\"] = \"disallowed\";\r\n    COMPONENT_IN_SLOT_STATUS[\"MAYBEALLOWED\"] = \"mayBeAllowed\";\r\n})(COMPONENT_IN_SLOT_STATUS || (COMPONENT_IN_SLOT_STATUS = {}));\r\n/**\r\n * Provide methods that cache and return the restrictions of a slot in a page.\r\n * This restrictions determine whether a component of a certain type is allowed or forbidden in a particular slot.\r\n */\r\nvar ISlotRestrictionsService = /** @class */ (function () {\r\n    function ISlotRestrictionsService() {\r\n    }\r\n    /**\r\n     * This methods retrieves the list of component types droppable in at least one of the slots of the current page.\r\n     *\r\n     * @returns Promise containing an array with the component types droppable on the current page.\r\n     *\r\n     * **Deprecated since 2005**\r\n     * @deprecated\r\n     */\r\n    ISlotRestrictionsService.prototype.getAllComponentTypesSupportedOnPage = function () {\r\n        'proxyFunction';\r\n        return null;\r\n    };\r\n    /**\r\n     * This methods retrieves the list of restrictions applied to the slot identified by the provided ID.\r\n     *\r\n     * @returns Promise containing an array with the restrictions applied to the slot.\r\n     */\r\n    ISlotRestrictionsService.prototype.getSlotRestrictions = function (slotId) {\r\n        'proxyFunction';\r\n        return null;\r\n    };\r\n    ISlotRestrictionsService.prototype.isSlotEditable = function (slotId) {\r\n        'proxyFunction';\r\n        return null;\r\n    };\r\n    ISlotRestrictionsService.prototype.isComponentAllowedInSlot = function (slot, dragInfo) {\r\n        'proxyFunction';\r\n        return null;\r\n    };\r\n    return ISlotRestrictionsService;\r\n}());\r\nexport { ISlotRestrictionsService };\r\n//# sourceMappingURL=ISlotRestrictionsService.js.map","references":[],"map":"{\"version\":3,\"file\":\"ISlotRestrictionsService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/services/ISlotRestrictionsService.ts\"],\"names\":[],\"mappings\":\"AAAA;;GAEG;AACH,MAAM,CAAN,IAAY,wBAIX;AAJD,WAAY,wBAAwB;IAChC,+CAAmB,CAAA;IACnB,qDAAyB,CAAA;IACzB,yDAA6B,CAAA;AACjC,CAAC,EAJW,wBAAwB,KAAxB,wBAAwB,QAInC;AAED;;;GAGG;AACH;IAAA;IAiCA,CAAC;IAhCG;;;;;;;OAOG;IACI,sEAAmC,GAA1C;QACI,eAAe,CAAC;QAChB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,sDAAmB,GAA1B,UAA2B,MAAc;QACrC,eAAe,CAAC;QAChB,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,iDAAc,GAArB,UAAsB,MAAc;QAChC,eAAe,CAAC;QAChB,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,2DAAwB,GAA/B,UAAgC,IAAS,EAAE,QAAa;QACpD,eAAe,CAAC;QAChB,OAAO,IAAI,CAAC;IAChB,CAAC;IACL,+BAAC;AAAD,CAAC,AAjCD,IAiCC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/services/ISlotRestrictionsService.d.ts","writeByteOrderMark":false,"text":"export declare enum COMPONENT_IN_SLOT_STATUS {\r\n    ALLOWED = \"allowed\",\r\n    DISALLOWED = \"disallowed\",\r\n    MAYBEALLOWED = \"mayBeAllowed\"\r\n}\r\n/**\r\n * Provide methods that cache and return the restrictions of a slot in a page.\r\n * This restrictions determine whether a component of a certain type is allowed or forbidden in a particular slot.\r\n */\r\nexport declare abstract class ISlotRestrictionsService {\r\n    /**\r\n     * This methods retrieves the list of component types droppable in at least one of the slots of the current page.\r\n     *\r\n     * @returns Promise containing an array with the component types droppable on the current page.\r\n     *\r\n     * **Deprecated since 2005**\r\n     * @deprecated\r\n     */\r\n    getAllComponentTypesSupportedOnPage(): Promise<any[] | void>;\r\n    /**\r\n     * This methods retrieves the list of restrictions applied to the slot identified by the provided ID.\r\n     *\r\n     * @returns Promise containing an array with the restrictions applied to the slot.\r\n     */\r\n    getSlotRestrictions(slotId: string): Promise<string[] | void>;\r\n    isSlotEditable(slotId: string): Promise<boolean>;\r\n    isComponentAllowedInSlot(slot: any, dragInfo: any): Promise<COMPONENT_IN_SLOT_STATUS>;\r\n}\r\n"}}

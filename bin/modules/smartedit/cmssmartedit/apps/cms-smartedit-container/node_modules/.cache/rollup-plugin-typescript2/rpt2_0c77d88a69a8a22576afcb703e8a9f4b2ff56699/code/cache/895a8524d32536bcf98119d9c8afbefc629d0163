{"code":"import { __decorate } from \"tslib\";\r\nimport { SeDowngradeService } from 'smarteditcommons';\r\n/**\r\n * Service used to handle standard OCC validation errors received from the backend.\r\n */\r\nvar /* @ngInject */ MediaBackendValidationHandler = /** @class */ (function () {\r\n    function /* @ngInject */ MediaBackendValidationHandler() {\r\n    }\r\n    /**\r\n     * Extracts validation errors from the provided response and appends them to a specified contextual errors list.\r\n     *\r\n     * The expected error response from the backend matches the contract of the following response example:\r\n     *\r\n     * ```\r\n     *      var response = {\r\n     *          data: {\r\n     *              errors: [{\r\n     *                  type: 'ValidationError',\r\n     *                  subject: 'mySubject',\r\n     *                  message: 'Some validation exception occurred'\r\n     *              }, {\r\n     *                  type: 'SomeOtherError',\r\n     *                  subject: 'mySubject'\r\n     *                  message: 'Some other exception occurred'\r\n     *              }]\r\n     *          }\r\n     *      }\r\n     * ```\r\n     *\r\n     * Example of use:\r\n     * ```\r\n     *      const errorsContext = [];\r\n     *      mediaBackendValidationHandler.handleResponse(response, errorsContext);\r\n     * ```\r\n     *\r\n     * The resulting errorsContext would be as follows:\r\n     * ```\r\n     *      [{\r\n     *          subject: 'mySubject',\r\n     *          message: 'Some validation exception occurred'\r\n     *      }]\r\n     * ```\r\n     *\r\n     * @param response A response consisting of a list of errors. For details of the expected format, see the example above.\r\n     * @param errorsContext An array that all validation errors are appended to. It is an output parameter.\r\n     * @returns The error context list originally provided, or a new list, appended with the validation errors.\r\n     */\r\n    /* @ngInject */ MediaBackendValidationHandler.prototype.handleResponse = function (response, errorsContext) {\r\n        var _this = this;\r\n        var _a;\r\n        errorsContext = errorsContext || [];\r\n        if ((_a = response === null || response === void 0 ? void 0 : response.error) === null || _a === void 0 ? void 0 : _a.errors) {\r\n            response.error.errors\r\n                .filter(function (error) { return _this.isValidationError(error); })\r\n                .forEach(function (_a) {\r\n                var subject = _a.subject, message = _a.message;\r\n                if (subject) {\r\n                    errorsContext.push({\r\n                        subject: subject,\r\n                        message: message\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        return errorsContext;\r\n    };\r\n    /* @ngInject */ MediaBackendValidationHandler.prototype.isValidationError = function (error) {\r\n        return error.type === 'ValidationError';\r\n    };\r\n    /* @ngInject */ MediaBackendValidationHandler = __decorate([\r\n        SeDowngradeService()\r\n    ], /* @ngInject */ MediaBackendValidationHandler);\r\n    return /* @ngInject */ MediaBackendValidationHandler;\r\n}());\r\nexport { /* @ngInject */ MediaBackendValidationHandler };\r\n//# sourceMappingURL=MediaBackendValidationHandler.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"MediaBackendValidationHandler.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/components/genericEditor/media/services/MediaBackendValidationHandler.ts\"],\"names\":[],\"mappings\":\";AAIA,OAAO,EAAgB,kBAAkB,EAAmB,MAAM,kBAAkB,CAAC;AAErF;;GAEG;AAEH;IAAA;IA4DA,CAAC;IA3DG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAsCG;IACI,sEAAc,GAArB,UAAsB,QAAuB,EAAE,aAAqB;QAApE,iBAeC;;QAdG,aAAa,GAAG,aAAa,IAAI,EAAE,CAAC;QACpC,UAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,KAAK,0CAAE,MAAM,EAAE;YACzB,QAAQ,CAAC,KAAK,CAAC,MAAM;iBAChB,MAAM,CAAC,UAAC,KAAK,IAAK,OAAA,KAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAA7B,CAA6B,CAAC;iBAChD,OAAO,CAAC,UAAC,EAAqC;oBAAnC,OAAO,aAAA,EAAE,OAAO,aAAA;gBACxB,IAAI,OAAO,EAAE;oBACT,aAAa,CAAC,IAAI,CAAC;wBACf,OAAO,SAAA;wBACP,OAAO,SAAA;qBACV,CAAC,CAAC;iBACN;YACL,CAAC,CAAC,CAAC;SACV;QACD,OAAO,aAAa,CAAC;IACzB,CAAC;IAEO,yEAAiB,GAAzB,UAA0B,KAAmB;QACzC,OAAO,KAAK,CAAC,IAAI,KAAK,iBAAiB,CAAC;IAC5C,CAAC;IA3DL;QADC,kBAAkB,EAAE;qDA6DpB;IAAD,oDAAC;CAAA,AA5DD,IA4DC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/components/genericEditor/media/services/MediaBackendValidationHandler.d.ts","writeByteOrderMark":false,"text":"import { ErrorResponse } from 'cmscommons';\r\n/**\r\n * Service used to handle standard OCC validation errors received from the backend.\r\n */\r\nexport declare class MediaBackendValidationHandler {\r\n    /**\r\n     * Extracts validation errors from the provided response and appends them to a specified contextual errors list.\r\n     *\r\n     * The expected error response from the backend matches the contract of the following response example:\r\n     *\r\n     * ```\r\n     *      var response = {\r\n     *          data: {\r\n     *              errors: [{\r\n     *                  type: 'ValidationError',\r\n     *                  subject: 'mySubject',\r\n     *                  message: 'Some validation exception occurred'\r\n     *              }, {\r\n     *                  type: 'SomeOtherError',\r\n     *                  subject: 'mySubject'\r\n     *                  message: 'Some other exception occurred'\r\n     *              }]\r\n     *          }\r\n     *      }\r\n     * ```\r\n     *\r\n     * Example of use:\r\n     * ```\r\n     *      const errorsContext = [];\r\n     *      mediaBackendValidationHandler.handleResponse(response, errorsContext);\r\n     * ```\r\n     *\r\n     * The resulting errorsContext would be as follows:\r\n     * ```\r\n     *      [{\r\n     *          subject: 'mySubject',\r\n     *          message: 'Some validation exception occurred'\r\n     *      }]\r\n     * ```\r\n     *\r\n     * @param response A response consisting of a list of errors. For details of the expected format, see the example above.\r\n     * @param errorsContext An array that all validation errors are appended to. It is an output parameter.\r\n     * @returns The error context list originally provided, or a new list, appended with the validation errors.\r\n     */\r\n    handleResponse(response: ErrorResponse, errorsContext?: any[]): any[];\r\n    private isValidationError;\r\n}\r\n"}}

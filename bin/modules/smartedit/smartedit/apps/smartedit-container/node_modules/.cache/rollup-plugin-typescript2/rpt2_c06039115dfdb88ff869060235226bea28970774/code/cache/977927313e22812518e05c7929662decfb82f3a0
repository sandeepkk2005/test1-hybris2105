{"code":"import { __decorate, __metadata } from \"tslib\";\r\nimport './ConfigurationModalComponent.scss';\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { from as rxFrom } from 'rxjs';\r\nimport { FundamentalModalButtonAction, FundamentalModalButtonStyle, FundamentalModalManagerService, IConfirmationModalService } from 'smarteditcommons';\r\nimport { ConfigurationService } from '../../services/ConfigurationService';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"ConfigurationModalComponent\", {\r\n    selector: 'se-configuration-modal',\r\n    template: \"<div id=\\\"editConfigurationsBody\\\" class=\\\"se-config\\\"><form #form=\\\"ngForm\\\" novalidate><div class=\\\"se-config__sub-header\\\"><span class=\\\"se-config__sub-title\\\">{{'se.configurationform.label.keyvalue' | translate}}</span> <button class=\\\"se-config__add-entry-btn fd-button--compact\\\" type=\\\"button\\\" (click)=\\\"editor.addEntry()\\\">{{ \\\"se.general.configuration.add.button\\\" | translate }}</button></div><div class=\\\"se-config__entry\\\" *ngFor=\\\"let entry of editor.filterConfiguration(); let $index = index\\\"><div class=\\\"se-config__entry-data\\\"><div class=\\\"se-config__entry-key\\\"><input type=\\\"text\\\" [ngClass]=\\\"{\\n                            'is-invalid': entry.errors &&  entry.errors.keys && entry.errors.keys.length > 0,\\n                            'se-config__entry-key--disabled': !entry.isNew }\\\" name=\\\"{{entry.key}}_{{entry.uuid}}_key\\\" placeholder=\\\"{{'se.configurationform.header.key.name' | translate}}\\\" [(ngModel)]=\\\"entry.key\\\" [required]=\\\"true\\\" [disabled]=\\\"!entry.isNew\\\" class=\\\"se-config__entry-key-input fd-form__control\\\" [title]=\\\"entry.key\\\"/><ng-container *ngIf=\\\"entry.errors && entry.errors.keys\\\"><span id=\\\"{{entry.key}}_error_{{$index}}\\\" *ngFor=\\\"let error of entry.errors.keys; let $index = index\\\" class=\\\"error-input help-block\\\">{{error.message|translate}}</span></ng-container></div><div class=\\\"se-config__entry-value\\\"><textarea [ngClass]=\\\"{'is-invalid': entry.errors && entry.errors.values && entry.errors.values.length>0}\\\" name=\\\"{{entry.key}}_{{entry.uuid}}_value\\\" placeholder=\\\"{{'se.configurationform.header.value.name' | translate}}\\\" [(ngModel)]=\\\"entry.value\\\" [required]=\\\"true\\\" class=\\\"se-config__entry-text-area fd-form__control\\\" (change)=\\\"editor.validateUserInput(entry)\\\"></textarea><div *ngIf=\\\"entry.requiresUserCheck\\\"><input id=\\\"{{entry.key}}_absoluteUrl_check_{{$index}}\\\" type=\\\"checkbox\\\" name=\\\"{{entry.key}}_{{entry.uuid}}_isCheckedByUser\\\" [(ngModel)]=\\\"entry.isCheckedByUser\\\"/> <span id=\\\"{{entry.key}}_absoluteUrl_msg_{{$index}}\\\" [ngClass]=\\\"{\\n                                'warning-check-msg': true,\\n                                'not-checked': entry.hasErrors && !entry.isCheckedByUser\\n                            }\\\">{{'se.configurationform.absoluteurl.check' | translate}}</span></div><ng-container *ngIf=\\\"entry.errors && entry.errors.values && entry.errors.values\\\"><span id=\\\"{{entry.key}}_error_{{$index}}\\\" *ngFor=\\\"let error of entry.errors.values; let $index = index\\\" class=\\\"error-input help-block\\\">{{error.message|translate}}</span></ng-container></div></div><button type=\\\"button\\\" id=\\\"{{entry.key}}_removeButton_{{$index}}\\\" class=\\\"se-config__entry-remove-btn fd-button--light sap-icon--delete\\\" (click)=\\\"editor.removeEntry(entry, form);\\\"></button></div></form></div>\"\r\n});\r\nvar ConfigurationModalComponent = /** @class */ (function () {\r\n    function ConfigurationModalComponent(editor, modalManager, confirmationModalService) {\r\n        this.editor = editor;\r\n        this.modalManager = modalManager;\r\n        this.confirmationModalService = confirmationModalService;\r\n    }\r\n    ConfigurationModalComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.editor.init();\r\n        this.form.statusChanges.subscribe(function () {\r\n            if (_this.form.valid && _this.form.dirty) {\r\n                _this.modalManager.enableButton('save');\r\n            }\r\n            if (_this.form.invalid || !_this.form.dirty) {\r\n                _this.modalManager.disableButton('save');\r\n            }\r\n        });\r\n        this.modalManager.addButtons([\r\n            {\r\n                id: 'cancel',\r\n                label: 'se.cms.component.confirmation.modal.cancel',\r\n                style: FundamentalModalButtonStyle.Default,\r\n                action: FundamentalModalButtonAction.Dismiss,\r\n                callback: function () { return rxFrom(_this.onCancel()); }\r\n            },\r\n            {\r\n                id: 'save',\r\n                style: FundamentalModalButtonStyle.Primary,\r\n                label: 'se.cms.component.confirmation.modal.save',\r\n                callback: function () { return rxFrom(_this.onSave()); },\r\n                disabled: true\r\n            }\r\n        ]);\r\n    };\r\n    ConfigurationModalComponent.prototype.trackByFn = function (_, item) {\r\n        return item.uuid;\r\n    };\r\n    ConfigurationModalComponent.prototype.onCancel = function () {\r\n        var _this = this;\r\n        var dirty = this.form.dirty;\r\n        var confirmationData = {\r\n            description: 'se.editor.cancel.confirm'\r\n        };\r\n        if (!dirty) {\r\n            return Promise.resolve();\r\n        }\r\n        return this.confirmationModalService\r\n            .confirm(confirmationData)\r\n            .then(function () { return _this.modalManager.close(null); });\r\n    };\r\n    ConfigurationModalComponent.prototype.onSave = function () {\r\n        var _this = this;\r\n        return this.editor.submit(this.form).then(function () {\r\n            _this.modalManager.close(null);\r\n        });\r\n    };\r\n    __decorate([\r\n        ViewChild('form', { static: true }),\r\n        __metadata(\"design:type\", NgForm)\r\n    ], ConfigurationModalComponent.prototype, \"form\", void 0);\r\n    ConfigurationModalComponent = __decorate([\r\n        Component({\r\n            selector: 'se-configuration-modal',\r\n            template: \"<div id=\\\"editConfigurationsBody\\\" class=\\\"se-config\\\"><form #form=\\\"ngForm\\\" novalidate><div class=\\\"se-config__sub-header\\\"><span class=\\\"se-config__sub-title\\\">{{'se.configurationform.label.keyvalue' | translate}}</span> <button class=\\\"se-config__add-entry-btn fd-button--compact\\\" type=\\\"button\\\" (click)=\\\"editor.addEntry()\\\">{{ \\\"se.general.configuration.add.button\\\" | translate }}</button></div><div class=\\\"se-config__entry\\\" *ngFor=\\\"let entry of editor.filterConfiguration(); let $index = index\\\"><div class=\\\"se-config__entry-data\\\"><div class=\\\"se-config__entry-key\\\"><input type=\\\"text\\\" [ngClass]=\\\"{\\n                            'is-invalid': entry.errors &&  entry.errors.keys && entry.errors.keys.length > 0,\\n                            'se-config__entry-key--disabled': !entry.isNew }\\\" name=\\\"{{entry.key}}_{{entry.uuid}}_key\\\" placeholder=\\\"{{'se.configurationform.header.key.name' | translate}}\\\" [(ngModel)]=\\\"entry.key\\\" [required]=\\\"true\\\" [disabled]=\\\"!entry.isNew\\\" class=\\\"se-config__entry-key-input fd-form__control\\\" [title]=\\\"entry.key\\\"/><ng-container *ngIf=\\\"entry.errors && entry.errors.keys\\\"><span id=\\\"{{entry.key}}_error_{{$index}}\\\" *ngFor=\\\"let error of entry.errors.keys; let $index = index\\\" class=\\\"error-input help-block\\\">{{error.message|translate}}</span></ng-container></div><div class=\\\"se-config__entry-value\\\"><textarea [ngClass]=\\\"{'is-invalid': entry.errors && entry.errors.values && entry.errors.values.length>0}\\\" name=\\\"{{entry.key}}_{{entry.uuid}}_value\\\" placeholder=\\\"{{'se.configurationform.header.value.name' | translate}}\\\" [(ngModel)]=\\\"entry.value\\\" [required]=\\\"true\\\" class=\\\"se-config__entry-text-area fd-form__control\\\" (change)=\\\"editor.validateUserInput(entry)\\\"></textarea><div *ngIf=\\\"entry.requiresUserCheck\\\"><input id=\\\"{{entry.key}}_absoluteUrl_check_{{$index}}\\\" type=\\\"checkbox\\\" name=\\\"{{entry.key}}_{{entry.uuid}}_isCheckedByUser\\\" [(ngModel)]=\\\"entry.isCheckedByUser\\\"/> <span id=\\\"{{entry.key}}_absoluteUrl_msg_{{$index}}\\\" [ngClass]=\\\"{\\n                                'warning-check-msg': true,\\n                                'not-checked': entry.hasErrors && !entry.isCheckedByUser\\n                            }\\\">{{'se.configurationform.absoluteurl.check' | translate}}</span></div><ng-container *ngIf=\\\"entry.errors && entry.errors.values && entry.errors.values\\\"><span id=\\\"{{entry.key}}_error_{{$index}}\\\" *ngFor=\\\"let error of entry.errors.values; let $index = index\\\" class=\\\"error-input help-block\\\">{{error.message|translate}}</span></ng-container></div></div><button type=\\\"button\\\" id=\\\"{{entry.key}}_removeButton_{{$index}}\\\" class=\\\"se-config__entry-remove-btn fd-button--light sap-icon--delete\\\" (click)=\\\"editor.removeEntry(entry, form);\\\"></button></div></form></div>\"\r\n        }),\r\n        __metadata(\"design:paramtypes\", [ConfigurationService,\r\n            FundamentalModalManagerService,\r\n            IConfirmationModalService])\r\n    ], ConfigurationModalComponent);\r\n    return ConfigurationModalComponent;\r\n}());\r\nexport { ConfigurationModalComponent };\r\n//# sourceMappingURL=ConfigurationModalComponent.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/forms@8.2.14_e9fbe5720e9434eb9ae0f6720f1ca3f4/node_modules/@angular/forms/forms.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/rxjs@6.5.4/node_modules/rxjs/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/src/services/bootstrap/Configuration.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/src/services/ConfigurationService.ts"],"map":"{\"version\":3,\"file\":\"ConfigurationModalComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/generalConfiguration/ConfigurationModalComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/components/generalConfiguration/ConfigurationModalComponent.d.ts","writeByteOrderMark":false,"text":"import './ConfigurationModalComponent.scss';\r\nimport { OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { FundamentalModalManagerService, IConfirmationModalService } from 'smarteditcommons';\r\nimport { ConfigurationItem } from '../../services/bootstrap/Configuration';\r\nimport { ConfigurationService } from '../../services/ConfigurationService';\r\nexport declare class ConfigurationModalComponent implements OnInit {\r\n    editor: ConfigurationService;\r\n    modalManager: FundamentalModalManagerService;\r\n    private confirmationModalService;\r\n    form: NgForm;\r\n    constructor(editor: ConfigurationService, modalManager: FundamentalModalManagerService, confirmationModalService: IConfirmationModalService);\r\n    ngOnInit(): void;\r\n    trackByFn(_: number, item: ConfigurationItem): string;\r\n    private onCancel;\r\n    private onSave;\r\n}\r\n"}}

{"code":"import { EVENT_OUTER_FRAME_CLICKED } from '../../utils';\r\nvar IRenderService = /** @class */ (function () {\r\n    function IRenderService(yjQuery, systemEventService, notificationService, pageInfoService, perspectiveService, crossFrameEventService, windowUtils, modalService) {\r\n        this.yjQuery = yjQuery;\r\n        this.systemEventService = systemEventService;\r\n        this.notificationService = notificationService;\r\n        this.pageInfoService = pageInfoService;\r\n        this.perspectiveService = perspectiveService;\r\n        this.crossFrameEventService = crossFrameEventService;\r\n        this.windowUtils = windowUtils;\r\n        this.modalService = modalService;\r\n        this.KEY_CODES = {\r\n            ESC: 27\r\n        };\r\n        this.HOTKEY_NOTIFICATION_CONFIGURATION = {\r\n            id: 'HOTKEY_NOTIFICATION_ID',\r\n            componentName: 'PerspectiveSelectorHotkeyNotificationComponent'\r\n        };\r\n        this._bindEvents();\r\n    }\r\n    /**\r\n     * Re-renders a slot in the page\r\n     */\r\n    IRenderService.prototype.renderSlots = function (_slotIds) {\r\n        'proxyFunction';\r\n        return null;\r\n    };\r\n    /**\r\n     * Re-renders a component in the page.\r\n     *\r\n     * @param customContent The custom content to replace the component content with. If specified, the\r\n     * component content will be rendered with it, instead of the accelerator's. Optional.\r\n     *\r\n     * @returns Promise that will resolve on render success or reject if there's an error. When rejected,\r\n     * the promise returns an Object{message, stack}.\r\n     */\r\n    IRenderService.prototype.renderComponent = function (componentId, componentType) {\r\n        'proxyFunction';\r\n        return null;\r\n    };\r\n    /**\r\n     * This method removes a component from a slot in the current page. Note that the component is only removed\r\n     * on the frontend; the operation does not propagate to the backend.\r\n     *\r\n     * @param componentId The ID of the component to remove.\r\n     *\r\n     * @returns Object wrapping the removed component.\r\n     */\r\n    IRenderService.prototype.renderRemoval = function (componentId, componentType, slotId) {\r\n        'proxyFunction';\r\n        return null;\r\n    };\r\n    /**\r\n     * Re-renders all components in the page.\r\n     * this method first resets the HTML content all of components to the values saved by {@link /smartedit/injectables/DecoratorService.html#storePrecompiledComponent storePrecompiledComponent} at the last $compile time\r\n     * then requires a new compilation.\r\n     */\r\n    IRenderService.prototype.renderPage = function (isRerender) {\r\n        'proxyFunction';\r\n        return null;\r\n    };\r\n    /**\r\n     * Toggles on/off the visibility of the page overlay (containing the decorators).\r\n     *\r\n     * @param isVisible Flag that indicates if the overlay must be displayed.\r\n     */\r\n    IRenderService.prototype.toggleOverlay = function (isVisible) {\r\n        'proxyFunction';\r\n        return null;\r\n    };\r\n    /**\r\n     * This method updates the position of the decorators in the overlay. Normally, this method must be executed every\r\n     * time the original storefront content is updated to keep the decorators correctly positioned.\r\n     */\r\n    IRenderService.prototype.refreshOverlayDimensions = function () {\r\n        'proxyFunction';\r\n        return null;\r\n    };\r\n    /**\r\n     * Toggles the rendering to be blocked or not which determines whether the overlay should be rendered or not.\r\n     *\r\n     * @param isBlocked Flag that indicates if the rendering should be blocked or not.\r\n     */\r\n    IRenderService.prototype.blockRendering = function (isBlocked) {\r\n        'proxyFunction';\r\n        return null;\r\n    };\r\n    /**\r\n     * This method returns a boolean that determines whether the rendering is blocked or not.\r\n     *\r\n     * @returns True if the rendering is blocked. Otherwise false.\r\n     */\r\n    IRenderService.prototype.isRenderingBlocked = function () {\r\n        'proxyFunction';\r\n        return null;\r\n    };\r\n    IRenderService.prototype._getDocument = function () {\r\n        return document;\r\n    };\r\n    IRenderService.prototype._bindEvents = function () {\r\n        var _this = this;\r\n        this._getDocument().addEventListener('keyup', function (event) {\r\n            return _this._keyUpEventHandler(event);\r\n        });\r\n        this._getDocument().addEventListener('click', function () { return _this._clickEvent(); });\r\n    };\r\n    IRenderService.prototype._keyUpEventHandler = function (event) {\r\n        var _this = this;\r\n        if (!this._areAllModalWindowsClosed()) {\r\n            return Promise.resolve();\r\n        }\r\n        return this._shouldEnableKeyPressEvent(event).then(function (enableKeyPressEvent) {\r\n            if (enableKeyPressEvent) {\r\n                _this._keyPressEvent();\r\n            }\r\n        });\r\n    };\r\n    IRenderService.prototype._shouldEnableKeyPressEvent = function (event) {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            try {\r\n                return _this.pageInfoService.getPageUUID().then(function (pageUUID) {\r\n                    if (pageUUID) {\r\n                        return _this.perspectiveService\r\n                            .isHotkeyEnabledForActivePerspective()\r\n                            .then(function (isHotkeyEnabled) {\r\n                            return resolve(event.which === _this.KEY_CODES.ESC && isHotkeyEnabled);\r\n                        });\r\n                    }\r\n                    return resolve(false);\r\n                });\r\n            }\r\n            catch (e) {\r\n                return resolve(false);\r\n            }\r\n        });\r\n    };\r\n    IRenderService.prototype._keyPressEvent = function () {\r\n        var _this = this;\r\n        this.isRenderingBlocked().then(function (isBlocked) {\r\n            if (!isBlocked) {\r\n                _this.blockRendering(true);\r\n                _this.renderPage(false);\r\n                _this.notificationService.pushNotification(_this.HOTKEY_NOTIFICATION_CONFIGURATION);\r\n                _this.systemEventService.publishAsync('OVERLAY_DISABLED');\r\n            }\r\n            else {\r\n                _this.blockRendering(false);\r\n                _this.renderPage(true);\r\n                _this.notificationService.removeNotification(_this.HOTKEY_NOTIFICATION_CONFIGURATION.id);\r\n            }\r\n        });\r\n    };\r\n    IRenderService.prototype._clickEvent = function () {\r\n        var _this = this;\r\n        if (!this.windowUtils.isIframe()) {\r\n            this.crossFrameEventService.publish(EVENT_OUTER_FRAME_CLICKED);\r\n        }\r\n        return this.isRenderingBlocked().then(function (isBlocked) {\r\n            if (isBlocked && !_this.windowUtils.isIframe()) {\r\n                _this.blockRendering(false);\r\n                _this.renderPage(true);\r\n                return _this.notificationService.removeNotification(_this.HOTKEY_NOTIFICATION_CONFIGURATION.id);\r\n            }\r\n            return null;\r\n        });\r\n    };\r\n    IRenderService.prototype._areAllModalWindowsClosed = function () {\r\n        return !this.modalService.hasOpenModals();\r\n    };\r\n    return IRenderService;\r\n}());\r\nexport { IRenderService };\r\n//# sourceMappingURL=IRenderService.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/utils/WindowUtils.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/utils/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/interfaces/INotificationService.ts"],"map":"{\"version\":3,\"file\":\"IRenderService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/interfaces/IRenderService.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/services/interfaces/IRenderService.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"angular\" />\r\n/// <reference types=\"jquery\" />\r\n/// <reference types=\"eonasdan-bootstrap-datetimepicker\" />\r\n/**\r\n * The renderService is responsible for rendering and resizing component overlays, and re-rendering components and slots\r\n * from the storefront.\r\n */\r\nimport { WindowUtils } from 'smarteditcommons/utils/WindowUtils';\r\nimport { CrossFrameEventService, INotificationService, IPageInfoService, IPerspectiveService, ModalService, SystemEventService } from '../';\r\nexport declare abstract class IRenderService {\r\n    protected yjQuery: JQueryStatic;\r\n    protected systemEventService: SystemEventService;\r\n    private notificationService;\r\n    private pageInfoService;\r\n    private perspectiveService;\r\n    protected crossFrameEventService: CrossFrameEventService;\r\n    private windowUtils;\r\n    private modalService;\r\n    private readonly HOTKEY_NOTIFICATION_CONFIGURATION;\r\n    private readonly KEY_CODES;\r\n    constructor(yjQuery: JQueryStatic, systemEventService: SystemEventService, notificationService: INotificationService, pageInfoService: IPageInfoService, perspectiveService: IPerspectiveService, crossFrameEventService: CrossFrameEventService, windowUtils: WindowUtils, modalService: ModalService);\r\n    /**\r\n     * Re-renders a slot in the page\r\n     */\r\n    renderSlots(_slotIds: string[] | string): Promise<any>;\r\n    /**\r\n     * Re-renders a component in the page.\r\n     *\r\n     * @param customContent The custom content to replace the component content with. If specified, the\r\n     * component content will be rendered with it, instead of the accelerator's. Optional.\r\n     *\r\n     * @returns Promise that will resolve on render success or reject if there's an error. When rejected,\r\n     * the promise returns an Object{message, stack}.\r\n     */\r\n    renderComponent(componentId: string, componentType: string): Promise<string | boolean>;\r\n    /**\r\n     * This method removes a component from a slot in the current page. Note that the component is only removed\r\n     * on the frontend; the operation does not propagate to the backend.\r\n     *\r\n     * @param componentId The ID of the component to remove.\r\n     *\r\n     * @returns Object wrapping the removed component.\r\n     */\r\n    renderRemoval(componentId: string, componentType: string, slotId: string): JQuery;\r\n    /**\r\n     * Re-renders all components in the page.\r\n     * this method first resets the HTML content all of components to the values saved by {@link /smartedit/injectables/DecoratorService.html#storePrecompiledComponent storePrecompiledComponent} at the last $compile time\r\n     * then requires a new compilation.\r\n     */\r\n    renderPage(isRerender: boolean): void;\r\n    /**\r\n     * Toggles on/off the visibility of the page overlay (containing the decorators).\r\n     *\r\n     * @param isVisible Flag that indicates if the overlay must be displayed.\r\n     */\r\n    toggleOverlay(isVisible: boolean): void;\r\n    /**\r\n     * This method updates the position of the decorators in the overlay. Normally, this method must be executed every\r\n     * time the original storefront content is updated to keep the decorators correctly positioned.\r\n     */\r\n    refreshOverlayDimensions(): void;\r\n    /**\r\n     * Toggles the rendering to be blocked or not which determines whether the overlay should be rendered or not.\r\n     *\r\n     * @param isBlocked Flag that indicates if the rendering should be blocked or not.\r\n     */\r\n    blockRendering(isBlocked: boolean): void;\r\n    /**\r\n     * This method returns a boolean that determines whether the rendering is blocked or not.\r\n     *\r\n     * @returns True if the rendering is blocked. Otherwise false.\r\n     */\r\n    isRenderingBlocked(): Promise<boolean>;\r\n    protected _getDocument(): Document;\r\n    private _bindEvents;\r\n    private _keyUpEventHandler;\r\n    private _shouldEnableKeyPressEvent;\r\n    private _keyPressEvent;\r\n    private _clickEvent;\r\n    private _areAllModalWindowsClosed;\r\n}\r\n"}}

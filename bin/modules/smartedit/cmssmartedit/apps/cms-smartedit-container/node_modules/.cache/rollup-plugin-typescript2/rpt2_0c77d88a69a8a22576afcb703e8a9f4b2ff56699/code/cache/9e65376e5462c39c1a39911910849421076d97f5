{"code":"import { __awaiter, __decorate, __generator, __metadata } from \"tslib\";\r\nimport { IAlertService, IConfirmationModalService, IExperienceService, IPageInfoService, SeDowngradeService } from 'smarteditcommons';\r\nimport { GenericEditorModalService } from '../../../services/GenericEditorModalService';\r\nimport { PageVersioningService } from './PageVersioningService';\r\nimport { PageVersionSelectionService } from './PageVersionSelectionService';\r\n/**\r\n * Used to manage a page version.\r\n */\r\nvar /* @ngInject */ ManagePageVersionService = /** @class */ (function () {\r\n    function /* @ngInject */ ManagePageVersionService(alertService, experienceService, confirmationModalService, genericEditorModalService, pageInfoService, pageVersioningService, pageVersionSelectionService) {\r\n        this.alertService = alertService;\r\n        this.experienceService = experienceService;\r\n        this.confirmationModalService = confirmationModalService;\r\n        this.genericEditorModalService = genericEditorModalService;\r\n        this.pageInfoService = pageInfoService;\r\n        this.pageVersioningService = pageVersioningService;\r\n        this.pageVersionSelectionService = pageVersionSelectionService;\r\n    }\r\n    /* @ngInject */ ManagePageVersionService.prototype.createPageVersion = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var pageUuid, componentData;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.pageInfoService.getPageUUID()];\r\n                    case 1:\r\n                        pageUuid = _a.sent();\r\n                        componentData = this.getComponentDataForEditor(pageUuid, null);\r\n                        return [2 /*return*/, this.genericEditorModalService.open(componentData, function (result) { return __awaiter(_this, void 0, void 0, function () {\r\n                                var experience;\r\n                                return __generator(this, function (_a) {\r\n                                    switch (_a.label) {\r\n                                        case 0:\r\n                                            experience = {\r\n                                                versionId: result.uid\r\n                                            };\r\n                                            return [4 /*yield*/, this.experienceService.updateExperience(experience)];\r\n                                        case 1:\r\n                                            _a.sent();\r\n                                            this.alertService.showSuccess('se.cms.versions.create.alert.success');\r\n                                            this.pageVersionSelectionService.selectPageVersion(result);\r\n                                            return [2 /*return*/];\r\n                                    }\r\n                                });\r\n                            }); })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ ManagePageVersionService.prototype.editPageVersion = function (versionDetails) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var pageUuid, componentData;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.pageInfoService.getPageUUID()];\r\n                    case 1:\r\n                        pageUuid = _a.sent();\r\n                        componentData = this.getComponentDataForEditor(pageUuid, versionDetails);\r\n                        return [2 /*return*/, this.genericEditorModalService.open(componentData, function (result) {\r\n                                _this.pageVersionSelectionService.updatePageVersionDetails(result);\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ ManagePageVersionService.prototype.deletePageVersion = function (versionId) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var pageUuid, selectedVersion;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.pageInfoService.getPageUUID()];\r\n                    case 1:\r\n                        pageUuid = _a.sent();\r\n                        return [4 /*yield*/, this.confirmationModalService.confirm({\r\n                                title: 'se.cms.actionitem.page.version.delete.confirmation.title',\r\n                                description: 'se.cms.actionitem.page.version.delete.confirmation.description'\r\n                            })];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.pageVersioningService.deletePageVersion(pageUuid, versionId)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        this.alertService.showSuccess('se.cms.versions.delete.alert.success');\r\n                        selectedVersion = this.pageVersionSelectionService.getSelectedPageVersion();\r\n                        if (!(selectedVersion && selectedVersion.uid === versionId)) return [3 /*break*/, 5];\r\n                        return [4 /*yield*/, this.experienceService.updateExperience()];\r\n                    case 4:\r\n                        _a.sent();\r\n                        this.pageVersionSelectionService.deselectPageVersion();\r\n                        _a.label = 5;\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns an object that contains the information to be displayed and edited in the modal.\r\n     *\r\n     * @param pageUuid the uuid of the page.\r\n     * @param content the content to be populated in the editor, null for create mode.\r\n     */\r\n    /* @ngInject */ ManagePageVersionService.prototype.getComponentDataForEditor = function (pageUuid, content) {\r\n        var componentData = {\r\n            title: content ? 'se.cms.versions.edit' : 'se.cms.versions.create',\r\n            structure: {\r\n                attributes: [\r\n                    {\r\n                        cmsStructureType: 'ShortString',\r\n                        qualifier: 'label',\r\n                        i18nKey: 'se.cms.versions.editor.label.name',\r\n                        required: true\r\n                    },\r\n                    {\r\n                        cmsStructureType: 'ShortString',\r\n                        qualifier: 'description',\r\n                        i18nKey: 'se.cms.versions.editor.description.name'\r\n                    }\r\n                ]\r\n            },\r\n            contentApi: this.pageVersioningService.getResourceURI().replace(':pageUuid', pageUuid)\r\n        };\r\n        if (content) {\r\n            componentData.content = content;\r\n            componentData.componentUuid = content.uid;\r\n            componentData.componentType = 'versioning';\r\n        }\r\n        return componentData;\r\n    };\r\n    /* @ngInject */ ManagePageVersionService = __decorate([\r\n        SeDowngradeService(),\r\n        __metadata(\"design:paramtypes\", [IAlertService,\r\n            IExperienceService,\r\n            IConfirmationModalService,\r\n            GenericEditorModalService,\r\n            IPageInfoService,\r\n            PageVersioningService,\r\n            PageVersionSelectionService])\r\n    ], /* @ngInject */ ManagePageVersionService);\r\n    return /* @ngInject */ ManagePageVersionService;\r\n}());\r\nexport { /* @ngInject */ ManagePageVersionService };\r\n//# sourceMappingURL=ManagePageVersionService.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/services/GenericEditorModalService.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/versioning/services/PageVersioningService.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/versioning/services/PageVersionSelectionService.ts"],"map":"{\"version\":3,\"file\":\"ManagePageVersionService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/components/versioning/services/ManagePageVersionService.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/components/versioning/services/ManagePageVersionService.d.ts","writeByteOrderMark":false,"text":"import { IAlertService, IConfirmationModalService, IExperienceService, IPageInfoService } from 'smarteditcommons';\r\nimport { GenericEditorModalService } from '../../../services/GenericEditorModalService';\r\nimport { IPageVersion, PageVersioningService } from './PageVersioningService';\r\nimport { PageVersionSelectionService } from './PageVersionSelectionService';\r\n/**\r\n * Used to manage a page version.\r\n */\r\nexport declare class ManagePageVersionService {\r\n    private alertService;\r\n    private experienceService;\r\n    private confirmationModalService;\r\n    private genericEditorModalService;\r\n    private pageInfoService;\r\n    private pageVersioningService;\r\n    private pageVersionSelectionService;\r\n    constructor(alertService: IAlertService, experienceService: IExperienceService, confirmationModalService: IConfirmationModalService, genericEditorModalService: GenericEditorModalService, pageInfoService: IPageInfoService, pageVersioningService: PageVersioningService, pageVersionSelectionService: PageVersionSelectionService);\r\n    createPageVersion(): Promise<IPageVersion>;\r\n    editPageVersion(versionDetails: IPageVersion): Promise<IPageVersion>;\r\n    deletePageVersion(versionId: string): Promise<void>;\r\n    /**\r\n     * Returns an object that contains the information to be displayed and edited in the modal.\r\n     *\r\n     * @param pageUuid the uuid of the page.\r\n     * @param content the content to be populated in the editor, null for create mode.\r\n     */\r\n    private getComponentDataForEditor;\r\n}\r\n"}}

{"code":"import { __decorate } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { SeComponent } from '../../di';\r\n/**\r\n * **Deprecated since 2005, use {@link DynamicPagedListComponent}.**\r\n *\r\n * Component responsible for displaying a server-side paginated list of items with custom renderers. It allows the user to search and sort the list.\r\n *\r\n * ### Parameters\r\n * `config` - See {@link DynamicPagedListConfig}.\r\n *\r\n * `mask` - The string value used to filter the result.\r\n *\r\n * `getApi` - {@link OnGetApiEvent} Exposes the dynamic paged list module's api object\r\n *\r\n * `onItemsUpdate` - {@link OnItemsUpdateEvent} Exposes the item list.\r\n *\r\n * ### Example of a <strong>renderers</strong> object\r\n *\r\n *      renderers = {\r\n *          name: function(item, key) {\r\n *              return \"<a data-ng-click=\\\"$ctrl.config.injectedContext.onLink( item.path )\\\">{{ item[key.property] }}</a>\";\r\n *          }\r\n *      };\r\n *\r\n *\r\n * ### Example of an <strong>injectedContext</strong> object\r\n *\r\n *      injectedContext = {\r\n *          onLink: function(link) {\r\n *              if (link) {\r\n *                  var experiencePath = this._buildExperiencePath();\r\n *                  iframeManagerService.setCurrentLocation(link);\r\n *                  $location.path(experiencePath);\r\n *              }\r\n *          }.bind(this),\r\n *          dropdownItems: []\r\n *      };\r\n *\r\n */\r\nvar /* @ngInject */ LegacyDynamicPagedListComponent = /** @class */ (function () {\r\n    function /* @ngInject */ LegacyDynamicPagedListComponent() {\r\n    }\r\n    /**\r\n     * Backwards compatibility getApi adapter\r\n     */\r\n    /* @ngInject */ LegacyDynamicPagedListComponent.prototype.internalGetApi = function ($api) {\r\n        this.getApi({ $api: $api });\r\n    };\r\n    /* @ngInject */ LegacyDynamicPagedListComponent = __decorate([\r\n        SeComponent({\r\n            selector: 'dynamic-paged-list',\r\n            templateUrl: 'legacyDynamicPagedListTemplate.html',\r\n            inputs: ['config:=', 'mask:=?', 'getApi:&?', 'onItemsUpdate:&?']\r\n        })\r\n    ], /* @ngInject */ LegacyDynamicPagedListComponent);\r\n    return /* @ngInject */ LegacyDynamicPagedListComponent;\r\n}());\r\nexport { /* @ngInject */ LegacyDynamicPagedListComponent };\r\n//# sourceMappingURL=LegacyDynamicPagedListComponent.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/di/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/dynamicPagedList/interfaces.ts"],"map":"{\"version\":3,\"file\":\"LegacyDynamicPagedListComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/dynamicPagedList/LegacyDynamicPagedListComponent.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAAE,WAAW,EAAE,MAAM,UAAU,CAAC;AAGvC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAoCG;AAMH;IAAA;IAUA,CAAC;IAPG;;OAEG;IAEI,wEAAc,GAArB,UAAsB,IAAyB;QAC3C,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,MAAA,EAAE,CAAC,CAAC;IAC1B,CAAC;IATL;QALC,WAAW,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,WAAW,EAAE,qCAAqC;YAClD,MAAM,EAAE,CAAC,UAAU,EAAE,SAAS,EAAE,WAAW,EAAE,kBAAkB,CAAC;SACnE,CAAC;uDAWD;IAAD,sDAAC;CAAA,AAVD,IAUC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/components/dynamicPagedList/LegacyDynamicPagedListComponent.d.ts","writeByteOrderMark":false,"text":"import { DynamicPagedListApi } from './interfaces';\r\n/**\r\n * **Deprecated since 2005, use {@link DynamicPagedListComponent}.**\r\n *\r\n * Component responsible for displaying a server-side paginated list of items with custom renderers. It allows the user to search and sort the list.\r\n *\r\n * ### Parameters\r\n * `config` - See {@link DynamicPagedListConfig}.\r\n *\r\n * `mask` - The string value used to filter the result.\r\n *\r\n * `getApi` - {@link OnGetApiEvent} Exposes the dynamic paged list module's api object\r\n *\r\n * `onItemsUpdate` - {@link OnItemsUpdateEvent} Exposes the item list.\r\n *\r\n * ### Example of a <strong>renderers</strong> object\r\n *\r\n *      renderers = {\r\n *          name: function(item, key) {\r\n *              return \"<a data-ng-click=\\\"$ctrl.config.injectedContext.onLink( item.path )\\\">{{ item[key.property] }}</a>\";\r\n *          }\r\n *      };\r\n *\r\n *\r\n * ### Example of an <strong>injectedContext</strong> object\r\n *\r\n *      injectedContext = {\r\n *          onLink: function(link) {\r\n *              if (link) {\r\n *                  var experiencePath = this._buildExperiencePath();\r\n *                  iframeManagerService.setCurrentLocation(link);\r\n *                  $location.path(experiencePath);\r\n *              }\r\n *          }.bind(this),\r\n *          dropdownItems: []\r\n *      };\r\n *\r\n */\r\nexport declare class LegacyDynamicPagedListComponent {\r\n    private getApi;\r\n    /**\r\n     * Backwards compatibility getApi adapter\r\n     */\r\n    internalGetApi($api: DynamicPagedListApi): void;\r\n}\r\n"}}

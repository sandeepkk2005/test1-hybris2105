{"code":"import { __decorate, __metadata } from \"tslib\";\r\nimport { SeComponent } from 'smarteditcommons/di';\r\nimport { genericEditorDropdownComponentOnInit } from '../../../genericEditor/components/dropdown';\r\n/**\r\n * **Deprecated since 2105, use {@link GenericEditorDropdownComponent}.**\r\n *\r\n * ### Parameters\r\n *\r\n * `field` - The field description of the field being edited as defined by the structure API described in {@link GenericEditorFactoryService}.\r\n *\r\n * `field.options` - An array of options to be populated.\r\n *\r\n * `field.uri` - The uri to fetch the list of options from a REST call, especially if the dropdown is dependent on another one.\r\n *\r\n * `field.propertyType` - If a propertyType is defined, the seDropdown will use the populator associated to it with the following AngularJS recipe name : `propertyType + \"DropdownPopulator\"`.\r\n *\r\n * `field.dependsOn` - The qualifier of the parent dropdown that this dropdown depends on.\r\n *\r\n * `field.idAttribute` - The name of the id attribute to use when populating dropdown items.\r\n *\r\n * `field.labelAttributes` - An array of attributes to use when determining the label for each item in the dropdown\r\n *\r\n * `field.paged` - A boolean to determine if we are in paged mode as opposed to retrieving all items at once.\r\n *\r\n * `qualifier` - If the field is not localized, this is the actual field.qualifier, if it is localized, it is the language identifier such as en, de...\r\n *\r\n * `model` - If the field is not localized, this is the actual full parent model object, if it is localized, it is the language map: model[field.qualifier].\r\n *\r\n * `id` - An identifier of the generated DOM element.\r\n *\r\n * `itemTemplateUrl` - The path to the template that will be used to display items in both the dropdown menu and the selection.\r\n *\r\n * `getApi` - Exposes API used for setting resultsHeaderTemplateUrl or resultsHeaderTemplate.\r\n *\r\n * @deprecated\r\n */\r\nvar /* @ngInject */ SeDropdownComponent = /** @class */ (function () {\r\n    function /* @ngInject */ SeDropdownComponent(SEDropdownService, CONTEXT_CATALOG, CONTEXT_CATALOG_VERSION, yjQuery) {\r\n        this.SEDropdownService = SEDropdownService;\r\n        this.CONTEXT_CATALOG = CONTEXT_CATALOG;\r\n        this.CONTEXT_CATALOG_VERSION = CONTEXT_CATALOG_VERSION;\r\n        this.yjQuery = yjQuery;\r\n    }\r\n    /* @ngInject */ SeDropdownComponent.prototype.$onInit = function () {\r\n        genericEditorDropdownComponentOnInit.call(this);\r\n    };\r\n    /* @ngInject */ SeDropdownComponent.prototype.onClickOtherDropdown = function () {\r\n        this.closeSelect();\r\n    };\r\n    /* @ngInject */ SeDropdownComponent.prototype.closeSelect = function () {\r\n        var uiSelectCtrl = this.getUiSelectCtrl();\r\n        if (uiSelectCtrl) {\r\n            uiSelectCtrl.open = false;\r\n        }\r\n    };\r\n    /* @ngInject */ SeDropdownComponent.prototype.getUiSelectCtrl = function () {\r\n        var uiSelectId = '#' + this.field.qualifier + '-selector';\r\n        return this.yjQuery(uiSelectId).controller('uiSelect');\r\n    };\r\n    /* @ngInject */ SeDropdownComponent = __decorate([\r\n        SeComponent({\r\n            templateUrl: 'seDropdownTemplate.html',\r\n            inputs: [\r\n                'field:=',\r\n                'qualifier:=',\r\n                'model:=',\r\n                'id:=',\r\n                'getApi:&?',\r\n                'itemTemplateUrl',\r\n                'showRemoveButton'\r\n            ]\r\n        }),\r\n        __metadata(\"design:paramtypes\", [Object, String, String, Function])\r\n    ], /* @ngInject */ SeDropdownComponent);\r\n    return /* @ngInject */ SeDropdownComponent;\r\n}());\r\nexport { /* @ngInject */ SeDropdownComponent };\r\n//# sourceMappingURL=SeDropdownComponent.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/di/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/genericEditor/components/dropdown/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/genericEditor/types.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/legacyGenericEditor/components/dropdown/types.ts"],"map":"{\"version\":3,\"file\":\"SeDropdownComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/components/legacyGenericEditor/components/dropdown/SeDropdownComponent.ts\"],\"names\":[],\"mappings\":\";AAIA,OAAO,EAAgB,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAChE,OAAO,EAAE,oCAAoC,EAAE,MAAM,4CAA4C,CAAC;AAIlG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgCG;AAaH;IAUI,6CACW,iBAAgD,EAChD,eAAuB,EACvB,uBAA+B,EAC9B,OAAqB;QAHtB,sBAAiB,GAAjB,iBAAiB,CAA+B;QAChD,oBAAe,GAAf,eAAe,CAAQ;QACvB,4BAAuB,GAAvB,uBAAuB,CAAQ;QAC9B,YAAO,GAAP,OAAO,CAAc;IAC9B,CAAC;IAEJ,qDAAO,GAAP;QACI,oCAAoC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpD,CAAC;IAEM,kEAAoB,GAA3B;QACI,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAEO,yDAAW,GAAnB;QACI,IAAM,YAAY,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QAC5C,IAAI,YAAY,EAAE;YACd,YAAY,CAAC,IAAI,GAAG,KAAK,CAAC;SAC7B;IACL,CAAC;IAEO,6DAAe,GAAvB;QACI,IAAM,UAAU,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,WAAW,CAAC;QAE5D,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;IAC3D,CAAC;IApCL;QAZC,WAAW,CAAC;YACT,WAAW,EAAE,yBAAyB;YACtC,MAAM,EAAE;gBACJ,SAAS;gBACT,aAAa;gBACb,SAAS;gBACT,MAAM;gBACN,WAAW;gBACX,iBAAiB;gBACjB,kBAAkB;aACrB;SACJ,CAAC;;2CAsCD;IAAD,0CAAC;CAAA,AArCD,IAqCC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/components/legacyGenericEditor/components/dropdown/SeDropdownComponent.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"angular\" />\r\n/// <reference types=\"jquery\" />\r\nimport { TypedMap } from '@smart/utils';\r\nimport { ISeComponent } from 'smarteditcommons/di';\r\nimport { GenericEditorField } from '../../../genericEditor/types';\r\nimport { ISEDropdownService, ISEDropdownServiceConstructor, SEDropdownAPI } from './types';\r\n/**\r\n * **Deprecated since 2105, use {@link GenericEditorDropdownComponent}.**\r\n *\r\n * ### Parameters\r\n *\r\n * `field` - The field description of the field being edited as defined by the structure API described in {@link GenericEditorFactoryService}.\r\n *\r\n * `field.options` - An array of options to be populated.\r\n *\r\n * `field.uri` - The uri to fetch the list of options from a REST call, especially if the dropdown is dependent on another one.\r\n *\r\n * `field.propertyType` - If a propertyType is defined, the seDropdown will use the populator associated to it with the following AngularJS recipe name : `propertyType + \"DropdownPopulator\"`.\r\n *\r\n * `field.dependsOn` - The qualifier of the parent dropdown that this dropdown depends on.\r\n *\r\n * `field.idAttribute` - The name of the id attribute to use when populating dropdown items.\r\n *\r\n * `field.labelAttributes` - An array of attributes to use when determining the label for each item in the dropdown\r\n *\r\n * `field.paged` - A boolean to determine if we are in paged mode as opposed to retrieving all items at once.\r\n *\r\n * `qualifier` - If the field is not localized, this is the actual field.qualifier, if it is localized, it is the language identifier such as en, de...\r\n *\r\n * `model` - If the field is not localized, this is the actual full parent model object, if it is localized, it is the language map: model[field.qualifier].\r\n *\r\n * `id` - An identifier of the generated DOM element.\r\n *\r\n * `itemTemplateUrl` - The path to the template that will be used to display items in both the dropdown menu and the selection.\r\n *\r\n * `getApi` - Exposes API used for setting resultsHeaderTemplateUrl or resultsHeaderTemplate.\r\n *\r\n * @deprecated\r\n */\r\nexport declare class SeDropdownComponent implements ISeComponent {\r\n    SEDropdownService: ISEDropdownServiceConstructor;\r\n    CONTEXT_CATALOG: string;\r\n    CONTEXT_CATALOG_VERSION: string;\r\n    private yjQuery;\r\n    field: GenericEditorField;\r\n    qualifier: string;\r\n    model: TypedMap<any>;\r\n    id: string;\r\n    itemTemplateUrl: string;\r\n    getApi: ($api: {\r\n        $api: SEDropdownAPI;\r\n    }) => void;\r\n    dropdown: ISEDropdownService;\r\n    constructor(SEDropdownService: ISEDropdownServiceConstructor, CONTEXT_CATALOG: string, CONTEXT_CATALOG_VERSION: string, yjQuery: JQueryStatic);\r\n    $onInit(): void;\r\n    onClickOtherDropdown(): void;\r\n    private closeSelect;\r\n    private getUiSelectCtrl;\r\n}\r\n"}}

{"code":"import { __awaiter, __decorate, __generator, __metadata } from \"tslib\";\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\r\nimport { cmsitemsUri } from 'cmscommons';\r\nimport { SeDowngradeComponent, SystemEventService, URIBuilder } from 'smarteditcommons';\r\nimport { RestrictionsService } from '../../../../services/RestrictionsService';\r\nimport { RestrictionManagementSelectModelFactory } from '../../services/RestrictionManagementSelectModelFactory';\r\nimport { RestrictionManagementSelectItemComponent } from './restrictionManagementSelectItem/RestrictionManagementSelectItemComponent';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"RestrictionManagementSelectComponent\", {\r\n    selector: 'se-restriction-management-select',\r\n    template: \"<div><se-message [style.display]=\\\"showWarningMessage() ? 'block' : 'none'\\\" [type]=\\\"'warning'\\\"><span se-message-title translate=\\\"se.cms.restriction.management.select.type.not.supported.warning\\\"></span></se-message><div class=\\\"se-restriction-management-select__select\\\"><label class=\\\"se-control-label\\\">{{ 'se.cms.restriction.management.select.type.label' | translate }}</label><se-select id=\\\"restriction-type\\\" [fetchStrategy]=\\\"fetchStrategy\\\" [itemComponent]=\\\"itemComponent\\\" [placeholder]=\\\"'se.cms.restriction.management.select.type.placeholder'\\\" [(model)]=\\\"selectModel.selectedIds.restrictionType\\\" (modelChange)=\\\"selectRestrictionType()\\\" [searchEnabled]=\\\"false\\\"></se-select></div><div *ngIf=\\\"viewConfig.showRestrictionSelector\\\" class=\\\"se-restriction-management-select__restriction-info\\\"><label class=\\\"se-control-label\\\" translate=\\\"se.cms.restriction.management.select.restriction.label\\\"></label><se-select id=\\\"restriction-name\\\" [fetchStrategy]=\\\"fetchOptions\\\" [(model)]=\\\"selectModel.selectedIds.restriction\\\" (modelChange)=\\\"selectRestriction()\\\" [placeholder]=\\\"'se.cms.restriction.management.select.restriction.placeholder'\\\" [disableChoiceFn]=\\\"disableRestrictionChoice\\\" [itemComponent]=\\\"itemComponent\\\" [resultsHeaderLabel]=\\\"resultsHeaderLabel\\\" [actionableSearchItem]=\\\"{ eventId: RESTRICTION_CREATE_BUTTON_PRESSED_EVENT_ID }\\\" [(reset)]=\\\"reset\\\"></se-select></div><div class=\\\"se-restriction-management-select__restriction-editor\\\" *ngIf=\\\"viewConfig.showRestrictionEditor\\\"><p class=\\\"se-restriction-management-select__new-restriction-message\\\" [translate]=\\\"editorHeader\\\"></p><div *ngIf=\\\"selectModel.isTypeSupported()\\\"><se-item-manager [item]=\\\"selectModel.getRestriction()\\\" [mode]=\\\"viewConfig.mode\\\" [structureApi]=\\\"viewConfig.structureApi\\\" [contentApi]=\\\"viewConfig.contentApi\\\" [uriContext]=\\\"uriContext\\\" [componentType]=\\\"selectModel.getRestrictionTypeCode()\\\" [(submitFunction)]=\\\"submitInternal\\\" [(isDirty)]=\\\"isDirtyInternal\\\"></se-item-manager></div><div *ngIf=\\\"!selectModel.isTypeSupported()\\\"><p class=\\\"se-restriction__item-name\\\">{{ selectModel.getRestriction().name }}</p><div class=\\\"se-restriction__item-description\\\">{{ selectModel.getRestriction().description }}</div></div></div></div>\",\r\n    styles: [\"se-restriction-management-select .se-restriction-management-select__restriction-info,se-restriction-management-select .se-restriction-management-select__select{margin-bottom:16px}se-restriction-management-select .se-restriction-management-select__restriction-editor{border-top:1px solid #d9d9d9;padding-top:16px}se-restriction-management-select .se-restriction-management-select__new-restriction-message{font-weight:700}se-restriction-management-select .fd-menu__list-header{font-size:1.1428571429rem;line-height:1.25;font-weight:400;padding:8px 12px;border-bottom:1px solid #d9d9d9;color:#51555a;list-style:none;padding-left:24px}se-restriction-management-select .se-select-list__item.is-disabled{opacity:.65}se-restriction-management-select .se-select-list__item.is-disabled .fd-menu__item{cursor:not-allowed}se-restriction-management-select div.se-actionable-search-item{display:flex;align-items:center;justify-content:space-between;padding:0 0 0 13px}\"],\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n});\r\nvar /* @ngInject */ RestrictionManagementSelectComponent = /** @class */ (function () {\r\n    function /* @ngInject */ RestrictionManagementSelectComponent(restrictionManagementSelectModelFactory, restrictionsService, systemEventService, cdr) {\r\n        this.restrictionManagementSelectModelFactory = restrictionManagementSelectModelFactory;\r\n        this.restrictionsService = restrictionsService;\r\n        this.systemEventService = systemEventService;\r\n        this.cdr = cdr;\r\n        this.RESTRICTION_CREATE_BUTTON_PRESSED_EVENT_ID = 'RESTRICTION_CREATE_BUTTON_PRESSED_EVENT_ID';\r\n        this.resultsHeaderLabel = 'se.cms.restrictionmanagement.restrictionresults.header';\r\n        this.itemComponent = RestrictionManagementSelectItemComponent;\r\n        this.editorHeader = '';\r\n        this.isDirtyFnChange = new EventEmitter();\r\n        this.submitFnChange = new EventEmitter();\r\n    }\r\n    /* @ngInject */ RestrictionManagementSelectComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.selectModel = this.restrictionManagementSelectModelFactory.createRestrictionManagementSelectModel(this.fetchRestrictionTypes, this.getSupportedRestrictionTypes);\r\n        var dryRunCmsItemsUri = cmsitemsUri + '/:identifier';\r\n        this.viewConfig = {\r\n            showRestrictionSelector: false,\r\n            showRestrictionEditor: false,\r\n            mode: 'add',\r\n            contentApi: new URIBuilder(dryRunCmsItemsUri).replaceParams(this.uriContext).build()\r\n        };\r\n        this.fetchOptions = {\r\n            fetchPage: function (search, pageSize, currentPage) {\r\n                return _this.selectModel.getRestrictionsPaged(search, pageSize, currentPage);\r\n            },\r\n            fetchEntity: function () { return _this.selectModel.getRestrictionFromBackend(); }\r\n        };\r\n        this.fetchStrategy = {\r\n            fetchAll: function () { return _this.selectModel.getRestrictionTypes(); }\r\n        };\r\n        this.disableRestrictionChoice = function (restriction) {\r\n            return !!_this.existingRestrictions.find(function (existingRestriction) { return restriction.uid === existingRestriction.uid; });\r\n        };\r\n        setTimeout(function () {\r\n            _this.submitFnChange.emit(function () { return __awaiter(_this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    if (this.selectModel.isTypeSupported()) {\r\n                        return [2 /*return*/, this.submitInternal().then(function (value) { return value; })];\r\n                    }\r\n                    return [2 /*return*/, this.selectModel.getRestriction()];\r\n                });\r\n            }); });\r\n            _this.isDirtyFnChange.emit(function () {\r\n                if (_this.viewConfig.mode === 'add') {\r\n                    return _this.viewConfig.showRestrictionEditor;\r\n                }\r\n                else if (_this.isDirtyInternal) {\r\n                    return _this.isDirtyInternal();\r\n                }\r\n                return false;\r\n            });\r\n        });\r\n        this.createButtonUnsubscribe = this.systemEventService.subscribe(this.RESTRICTION_CREATE_BUTTON_PRESSED_EVENT_ID, function (_eventId, eventData) { return _this.createButtonEventHandler(eventData); });\r\n    };\r\n    /* @ngInject */ RestrictionManagementSelectComponent.prototype.ngOnDestroy = function () {\r\n        if (this.createButtonUnsubscribe) {\r\n            this.createButtonUnsubscribe();\r\n        }\r\n    };\r\n    /* @ngInject */ RestrictionManagementSelectComponent.prototype.selectRestrictionType = function () {\r\n        if (this.selectModel.restrictionTypeSelected()) {\r\n            if (this.viewConfig.showRestrictionSelector) {\r\n                this.resetSelector();\r\n            }\r\n            else {\r\n                this.viewConfig.showRestrictionSelector = true;\r\n            }\r\n            this.viewConfig.showRestrictionEditor = false;\r\n        }\r\n    };\r\n    /* @ngInject */ RestrictionManagementSelectComponent.prototype.selectRestriction = function () {\r\n        if (this.selectModel.restrictionSelected()) {\r\n            this.setViewConfig('se.cms.restriction.management.select.editor.header.add', 'add');\r\n            if (!this.viewConfig.showRestrictionEditor) {\r\n                this.viewConfig.showRestrictionEditor = true;\r\n            }\r\n        }\r\n    };\r\n    /* @ngInject */ RestrictionManagementSelectComponent.prototype.createRestriction = function (name) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.selectModel.createRestrictionSelected(name, this.uriContext)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        this.setViewConfig('se.cms.restriction.management.select.editor.header.create', 'create');\r\n                        if (this.viewConfig.showRestrictionEditor) {\r\n                            this.resetSelector();\r\n                        }\r\n                        else {\r\n                            this.viewConfig.showRestrictionEditor = true;\r\n                        }\r\n                        this.cdr.detectChanges();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ RestrictionManagementSelectComponent.prototype.showWarningMessage = function () {\r\n        return this.selectModel.getRestriction() && !this.selectModel.isTypeSupported();\r\n    };\r\n    /* @ngInject */ RestrictionManagementSelectComponent.prototype.createButtonEventHandler = function (name) {\r\n        this.createRestriction(name);\r\n    };\r\n    /* @ngInject */ RestrictionManagementSelectComponent.prototype.resetSelector = function () {\r\n        if (typeof this.reset === 'function') {\r\n            this.reset(true);\r\n        }\r\n    };\r\n    /* @ngInject */ RestrictionManagementSelectComponent.prototype.setViewConfig = function (editorHeader, mode) {\r\n        this.editorHeader = editorHeader;\r\n        this.viewConfig.mode = mode;\r\n        this.viewConfig.structureApi = this.restrictionsService.getStructureApiUri(this.viewConfig.mode);\r\n    };\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], /* @ngInject */ RestrictionManagementSelectComponent.prototype, \"uriContext\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Array)\r\n    ], /* @ngInject */ RestrictionManagementSelectComponent.prototype, \"existingRestrictions\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Function)\r\n    ], /* @ngInject */ RestrictionManagementSelectComponent.prototype, \"fetchRestrictionTypes\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Function)\r\n    ], /* @ngInject */ RestrictionManagementSelectComponent.prototype, \"getSupportedRestrictionTypes\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Function)\r\n    ], /* @ngInject */ RestrictionManagementSelectComponent.prototype, \"isDirtyFn\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Function)\r\n    ], /* @ngInject */ RestrictionManagementSelectComponent.prototype, \"submitFn\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], /* @ngInject */ RestrictionManagementSelectComponent.prototype, \"isDirtyFnChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], /* @ngInject */ RestrictionManagementSelectComponent.prototype, \"submitFnChange\", void 0);\r\n    /* @ngInject */ RestrictionManagementSelectComponent = __decorate([\r\n        SeDowngradeComponent(),\r\n        Component({\r\n            selector: 'se-restriction-management-select',\r\n            template: \"<div><se-message [style.display]=\\\"showWarningMessage() ? 'block' : 'none'\\\" [type]=\\\"'warning'\\\"><span se-message-title translate=\\\"se.cms.restriction.management.select.type.not.supported.warning\\\"></span></se-message><div class=\\\"se-restriction-management-select__select\\\"><label class=\\\"se-control-label\\\">{{ 'se.cms.restriction.management.select.type.label' | translate }}</label><se-select id=\\\"restriction-type\\\" [fetchStrategy]=\\\"fetchStrategy\\\" [itemComponent]=\\\"itemComponent\\\" [placeholder]=\\\"'se.cms.restriction.management.select.type.placeholder'\\\" [(model)]=\\\"selectModel.selectedIds.restrictionType\\\" (modelChange)=\\\"selectRestrictionType()\\\" [searchEnabled]=\\\"false\\\"></se-select></div><div *ngIf=\\\"viewConfig.showRestrictionSelector\\\" class=\\\"se-restriction-management-select__restriction-info\\\"><label class=\\\"se-control-label\\\" translate=\\\"se.cms.restriction.management.select.restriction.label\\\"></label><se-select id=\\\"restriction-name\\\" [fetchStrategy]=\\\"fetchOptions\\\" [(model)]=\\\"selectModel.selectedIds.restriction\\\" (modelChange)=\\\"selectRestriction()\\\" [placeholder]=\\\"'se.cms.restriction.management.select.restriction.placeholder'\\\" [disableChoiceFn]=\\\"disableRestrictionChoice\\\" [itemComponent]=\\\"itemComponent\\\" [resultsHeaderLabel]=\\\"resultsHeaderLabel\\\" [actionableSearchItem]=\\\"{ eventId: RESTRICTION_CREATE_BUTTON_PRESSED_EVENT_ID }\\\" [(reset)]=\\\"reset\\\"></se-select></div><div class=\\\"se-restriction-management-select__restriction-editor\\\" *ngIf=\\\"viewConfig.showRestrictionEditor\\\"><p class=\\\"se-restriction-management-select__new-restriction-message\\\" [translate]=\\\"editorHeader\\\"></p><div *ngIf=\\\"selectModel.isTypeSupported()\\\"><se-item-manager [item]=\\\"selectModel.getRestriction()\\\" [mode]=\\\"viewConfig.mode\\\" [structureApi]=\\\"viewConfig.structureApi\\\" [contentApi]=\\\"viewConfig.contentApi\\\" [uriContext]=\\\"uriContext\\\" [componentType]=\\\"selectModel.getRestrictionTypeCode()\\\" [(submitFunction)]=\\\"submitInternal\\\" [(isDirty)]=\\\"isDirtyInternal\\\"></se-item-manager></div><div *ngIf=\\\"!selectModel.isTypeSupported()\\\"><p class=\\\"se-restriction__item-name\\\">{{ selectModel.getRestriction().name }}</p><div class=\\\"se-restriction__item-description\\\">{{ selectModel.getRestriction().description }}</div></div></div></div>\",\r\n            styles: [\"se-restriction-management-select .se-restriction-management-select__restriction-info,se-restriction-management-select .se-restriction-management-select__select{margin-bottom:16px}se-restriction-management-select .se-restriction-management-select__restriction-editor{border-top:1px solid #d9d9d9;padding-top:16px}se-restriction-management-select .se-restriction-management-select__new-restriction-message{font-weight:700}se-restriction-management-select .fd-menu__list-header{font-size:1.1428571429rem;line-height:1.25;font-weight:400;padding:8px 12px;border-bottom:1px solid #d9d9d9;color:#51555a;list-style:none;padding-left:24px}se-restriction-management-select .se-select-list__item.is-disabled{opacity:.65}se-restriction-management-select .se-select-list__item.is-disabled .fd-menu__item{cursor:not-allowed}se-restriction-management-select div.se-actionable-search-item{display:flex;align-items:center;justify-content:space-between;padding:0 0 0 13px}\"],\r\n            encapsulation: ViewEncapsulation.None,\r\n            changeDetection: ChangeDetectionStrategy.OnPush\r\n        }),\r\n        __metadata(\"design:paramtypes\", [RestrictionManagementSelectModelFactory,\r\n            RestrictionsService,\r\n            SystemEventService,\r\n            ChangeDetectorRef])\r\n    ], /* @ngInject */ RestrictionManagementSelectComponent);\r\n    return /* @ngInject */ RestrictionManagementSelectComponent;\r\n}());\r\nexport { /* @ngInject */ RestrictionManagementSelectComponent };\r\n//# sourceMappingURL=RestrictionManagementSelectComponent.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/dao/RestrictionTypesRestService.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/services/RestrictionsService.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/restrictions/services/RestrictionManagementSelectModelFactory.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/restrictions/components/restrictionManagementSelect/restrictionManagementSelectItem/RestrictionManagementSelectItemComponent.ts"],"map":"{\"version\":3,\"file\":\"RestrictionManagementSelectComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/components/restrictions/components/restrictionManagementSelect/RestrictionManagementSelectComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/components/restrictions/components/restrictionManagementSelect/RestrictionManagementSelectComponent.d.ts","writeByteOrderMark":false,"text":"import { ChangeDetectorRef, EventEmitter, Type } from '@angular/core';\r\nimport { CMSItem } from 'cmscommons';\r\nimport { FetchStrategy, IUriContext, SelectReset, SystemEventService } from 'smarteditcommons';\r\nimport { IRestrictionType } from '../../../../dao/RestrictionTypesRestService';\r\nimport { RestrictionsService } from '../../../../services/RestrictionsService';\r\nimport { RestrictionManagementSelectModel, RestrictionManagementSelectModelFactory } from '../../services/RestrictionManagementSelectModelFactory';\r\nimport { RestrictionManagementSelectItemComponent } from './restrictionManagementSelectItem/RestrictionManagementSelectItemComponent';\r\nexport declare class RestrictionManagementSelectComponent {\r\n    private restrictionManagementSelectModelFactory;\r\n    private restrictionsService;\r\n    private systemEventService;\r\n    private cdr;\r\n    uriContext: IUriContext;\r\n    existingRestrictions: CMSItem[];\r\n    fetchRestrictionTypes: () => Promise<IRestrictionType[]>;\r\n    getSupportedRestrictionTypes: () => Promise<string[]>;\r\n    isDirtyFn: () => boolean;\r\n    submitFn: () => Promise<CMSItem>;\r\n    isDirtyFnChange: EventEmitter<() => boolean>;\r\n    submitFnChange: EventEmitter<() => Promise<CMSItem>>;\r\n    readonly RESTRICTION_CREATE_BUTTON_PRESSED_EVENT_ID = \"RESTRICTION_CREATE_BUTTON_PRESSED_EVENT_ID\";\r\n    reset: SelectReset;\r\n    submitInternal: () => Promise<CMSItem>;\r\n    isDirtyInternal: () => boolean;\r\n    disableRestrictionChoice: (restriction: CMSItem) => boolean;\r\n    itemComponent: Type<RestrictionManagementSelectItemComponent>;\r\n    resultsHeaderLabel: string;\r\n    editorHeader: string;\r\n    selectModel: RestrictionManagementSelectModel;\r\n    fetchOptions: FetchStrategy<CMSItem>;\r\n    fetchStrategy: FetchStrategy<IRestrictionType>;\r\n    viewConfig: {\r\n        showRestrictionSelector: boolean;\r\n        showRestrictionEditor: boolean;\r\n        mode: string;\r\n        contentApi: string;\r\n        structureApi?: string;\r\n    };\r\n    private createButtonUnsubscribe;\r\n    constructor(restrictionManagementSelectModelFactory: RestrictionManagementSelectModelFactory, restrictionsService: RestrictionsService, systemEventService: SystemEventService, cdr: ChangeDetectorRef);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    selectRestrictionType(): void;\r\n    selectRestriction(): void;\r\n    createRestriction(name: string): Promise<void>;\r\n    showWarningMessage(): boolean;\r\n    private createButtonEventHandler;\r\n    private resetSelector;\r\n    private setViewConfig;\r\n}\r\n"}}

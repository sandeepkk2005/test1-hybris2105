{"code":"import { __assign, __decorate, __metadata, __param } from \"tslib\";\r\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Component, HostBinding, Inject, Optional } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ModalRef } from '@fundamental-ngx/core';\r\nimport { DEFAULT_AUTHENTICATION_ENTRY_POINT } from '../../constants';\r\nimport { ISessionService, IStorageService } from '../../interfaces';\r\nimport { SSOAuthenticationHelper } from '../../services/authentication/sso-authentication.helper';\r\nimport { LogService } from '../../services/log.service';\r\nimport { UrlUtils } from '../../utils';\r\nimport { LoginDialogResourceProvider } from './login-dialog-resource-provider';\r\nvar LoginDialogComponent = /** @class */ (function () {\r\n    function LoginDialogComponent(modalRef, logService, httpClient, sessionService, storageService, urlUtils, ssoAuthenticationHelper, resource) {\r\n        var _this = this;\r\n        this.modalRef = modalRef;\r\n        this.logService = logService;\r\n        this.httpClient = httpClient;\r\n        this.sessionService = sessionService;\r\n        this.storageService = storageService;\r\n        this.urlUtils = urlUtils;\r\n        this.ssoAuthenticationHelper = ssoAuthenticationHelper;\r\n        this.resource = resource;\r\n        this.hostClass = true;\r\n        this.data = null;\r\n        this.authURIKey = '';\r\n        this.authURI = '';\r\n        this.isFullScreen = false;\r\n        this.ssoEnabled = false;\r\n        this.form = new FormGroup({\r\n            username: new FormControl('', Validators.required),\r\n            password: new FormControl('', Validators.required)\r\n        });\r\n        this.signinWithSSO = function () {\r\n            _this.form.setErrors(null);\r\n            return _this.ssoAuthenticationHelper\r\n                .launchSSODialog()\r\n                .then(function (data) { return _this.storeAccessToken(data); }, function (error) { return _this.APIAuthenticationFailureReportFactory(error); })\r\n                .then(function (userHasChanged) { return _this.acceptUser(userHasChanged); });\r\n        };\r\n        this.sendCredentials = function (payload) {\r\n            return _this.httpClient\r\n                .request('POST', _this.authURI, {\r\n                headers: new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded'),\r\n                body: _this.urlUtils.getQueryString(payload).replace('?', ''),\r\n                observe: 'response'\r\n            })\r\n                .toPromise();\r\n        };\r\n    }\r\n    LoginDialogComponent.prototype.ngOnInit = function () {\r\n        this.data = this.modalRef.data || {};\r\n        this.authURI = this.data.authURI;\r\n        this.isFullScreen = this.data.isFullScreen;\r\n        this.ssoEnabled = this.data.ssoEnabled && this.isMainEndPoint();\r\n        this.storageService.removeAuthToken(this.authURI);\r\n        this.authURIKey = btoa(this.authURI).replace(/=/g, '');\r\n        if (this.ssoAuthenticationHelper.isAutoSSOMain()) {\r\n            this.signinWithSSO();\r\n        }\r\n    };\r\n    LoginDialogComponent.prototype.signinWithCredentials = function () {\r\n        var _this = this;\r\n        this.form.setErrors(null);\r\n        if (this.hasRequiredCredentialsError()) {\r\n            this.form.setErrors({\r\n                credentialsRequiredError: 'se.logindialogform.username.and.password.required'\r\n            });\r\n            return Promise.reject();\r\n        }\r\n        var payload = __assign(__assign({}, (this.data.clientCredentials || {})), { username: this.form.get('username').value, password: this.form.get('password').value, grant_type: 'password' });\r\n        return this.sendCredentials(payload)\r\n            .then(function (response) {\r\n            return _this.storeAccessToken(response);\r\n        }, function (error) { return _this.APIAuthenticationFailureReportFactory(error); })\r\n            .then(function (hasUserChanged) { return _this.acceptUser(hasUserChanged); });\r\n    };\r\n    LoginDialogComponent.prototype.isMainEndPoint = function () {\r\n        return DEFAULT_AUTHENTICATION_ENTRY_POINT === this.authURI;\r\n    };\r\n    LoginDialogComponent.prototype.storeAccessToken = function (response) {\r\n        var token = response instanceof HttpResponse ? response.body : response;\r\n        this.storageService.storeAuthToken(this.authURI, token);\r\n        this.logService.debug(\"API Authentication Success: \" + this.authURI);\r\n        return this.isMainEndPoint()\r\n            ? this.sessionService.hasUserChanged()\r\n            : Promise.resolve(false);\r\n    };\r\n    LoginDialogComponent.prototype.APIAuthenticationFailureReportFactory = function (error) {\r\n        this.logService.debug(\"API Authentication Failure: \" + this.authURI + \" status: \" + error.status);\r\n        this.form.setErrors({\r\n            asyncValidationError: (error.error && error.error.error_description) ||\r\n                'se.logindialogform.oauth.error.default'\r\n        });\r\n        return Promise.reject(error);\r\n    };\r\n    LoginDialogComponent.prototype.acceptUser = function (userHasChanged) {\r\n        this.modalRef.close({\r\n            userHasChanged: userHasChanged\r\n        });\r\n        if (this.isMainEndPoint()) {\r\n            this.sessionService.setCurrentUsername();\r\n        }\r\n        return Promise.resolve({ userHasChanged: userHasChanged });\r\n    };\r\n    LoginDialogComponent.prototype.hasRequiredCredentialsError = function () {\r\n        var username = this.form.get('username');\r\n        var password = this.form.get('password');\r\n        return ((username.errors && username.errors.required) ||\r\n            (password.errors && password.errors.required));\r\n    };\r\n    __decorate([\r\n        HostBinding('class.su-login-dialog'),\r\n        __metadata(\"design:type\", Object)\r\n    ], LoginDialogComponent.prototype, \"hostClass\", void 0);\r\n    LoginDialogComponent = __decorate([\r\n        Component({\r\n            selector: 'su-login-dialog',\r\n            styles: [\".su-login{width:500px;min-height:440px;box-shadow:0 1px 4px 0 rgba(0,0,0,.1);background-color:#fff;border-radius:4px;border:1px solid rgba(0,0,0,.2);padding:20px;margin:0 auto}.su-login--wrapper{padding:40px 100px;width:100%}.su-login--form-group{margin-bottom:20px}.su-login--form-sso{margin-top:20px}.su-login--logo-wrapper{display:flex;justify-content:flex-start;align-items:center}.su-login--logo-wrapper.su-login--logo-wrapper_full{padding-bottom:45px}.su-login--logo{height:44px}.su-login--logo-text{font-family:\\\"72\\\",web,\\\"Open Sans\\\",sans-serif;font-size:1.7142857143rem;line-height:1.3333333333;font-weight:400;padding-left:16px;color:#32363a;font-weight:700}.su-login--logo__best-run{position:absolute;bottom:30px;left:30px}.su-login--btn{font-size:1rem;line-height:1.4285714286;font-weight:400;width:100%}.su-login--auth-message{padding-top:20px;padding-bottom:20px;font-size:1rem;line-height:1.4285714286;font-weight:400}.su-login--alert-error{margin-bottom:0;box-shadow:none}\"],\r\n            template: \"<div class=\\\"su-login\\\"><div class=\\\"su-login--wrapper\\\"><div class=\\\"su-login--logo-wrapper\\\" [ngClass]=\\\"{ 'su-login--logo-wrapper_full': !isFullScreen }\\\"><img *ngIf=\\\"resource?.topLogoURL\\\" [src]=\\\"resource?.topLogoURL\\\" class=\\\"su-login--logo\\\"/> <span class=\\\"su-login--logo-text\\\" translate=\\\"se.application.name\\\"></span></div><form autocomplete=\\\"off\\\" novalidate [formGroup]=\\\"form\\\" (submit)=\\\"signinWithCredentials()\\\" class=\\\"su-login--form\\\"><div class=\\\"su-login--auth-message\\\" *ngIf=\\\"isFullScreen\\\"><div translate=\\\"se.logindialogform.reauth.message1\\\"></div><div translate=\\\"se.logindialogform.reauth.message2\\\"></div></div><div *ngIf=\\\"form.errors\\\" class=\\\"su-login--form-group\\\"><fd-alert type=\\\"error\\\" class=\\\"su-login--alert-error\\\" id=\\\"invalidError\\\" [dismissible]=\\\"false\\\"><ng-container *ngIf=\\\"form.errors?.credentialsRequiredError\\\">{{ form.errors.credentialsRequiredError | translate }}</ng-container><ng-container *ngIf=\\\"form.errors?.asyncValidationError\\\">{{ form.errors.asyncValidationError | translate }}</ng-container></fd-alert></div><div class=\\\"su-login--form-group\\\"><input fd-form-control type=\\\"text\\\" id=\\\"username_{{ authURIKey }}\\\" name=\\\"username\\\" formControlName=\\\"username\\\" placeholder=\\\"{{ 'se.authentication.form.input.username' | translate }}\\\" autofocus autocomplete=\\\"username\\\"/></div><div class=\\\"su-login--form-group\\\"><input fd-form-control type=\\\"password\\\" id=\\\"password_{{ authURIKey }}\\\" name=\\\"password\\\" placeholder=\\\"{{ 'se.authentication.form.input.password' | translate }}\\\" formControlName=\\\"password\\\" autocomplete=\\\"current-password\\\" required/></div><div class=\\\"su-login--form-group\\\"><su-language-dropdown class=\\\"su-login-language\\\"></su-language-dropdown></div><button fd-button options=\\\"emphasized\\\" class=\\\"su-login--btn\\\" id=\\\"submit_{{ authURIKey }}\\\" name=\\\"submit\\\" type=\\\"submit\\\" translate=\\\"se.authentication.form.button.submit\\\"></button></form><form *ngIf=\\\"ssoEnabled\\\" class=\\\"su-login--form-sso\\\" name=\\\"loginDialogFormSSO\\\" novalidate (submit)=\\\"signinWithSSO()\\\"><button fd-button options=\\\"emphasized\\\" class=\\\"fd-button--emphasized su-login--btn\\\" id=\\\"submitSSO_{{ authURIKey }}\\\" name=\\\"submitSSO\\\" type=\\\"submit\\\" translate=\\\"se.authentication.form.button.submit.sso\\\"></button></form></div></div><img *ngIf=\\\"resource?.bottomLogoURL\\\" [src]=\\\"resource?.bottomLogoURL\\\" class=\\\"su-login--logo__best-run\\\"/>\"\r\n        }),\r\n        __param(7, Optional()), __param(7, Inject(LoginDialogResourceProvider)),\r\n        __metadata(\"design:paramtypes\", [ModalRef,\r\n            LogService,\r\n            HttpClient,\r\n            ISessionService,\r\n            IStorageService,\r\n            UrlUtils,\r\n            SSOAuthenticationHelper, Object])\r\n    ], LoginDialogComponent);\r\n    return LoginDialogComponent;\r\n}());\r\nexport { LoginDialogComponent };\r\n//# sourceMappingURL=login-dialog.component.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/common@8.2.14_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@angular/common/http.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/forms@8.2.14_e9fbe5720e9434eb9ae0f6720f1ca3f4/node_modules/@angular/forms/forms.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@fundamental-ngx/core@0.13.2_9a9a80bb6ff375d99f90188f858ebbd5/node_modules/@fundamental-ngx/core/fundamental-ngx-core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/constants.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/interfaces/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/services/authentication/sso-authentication.helper.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/services/log.service.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/utils/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/components/login-dialog/login-dialog-resource-provider.ts"],"map":"{\"version\":3,\"file\":\"login-dialog.component.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/login-dialog/login-dialog.component.ts\"],\"names\":[],\"mappings\":\";AAEA,OAAO,EAAE,UAAU,EAAqB,WAAW,EAAE,YAAY,EAAE,MAAM,sBAAsB,CAAC;AAChG,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,MAAM,EAAU,QAAQ,EAAE,MAAM,eAAe,CAAC;AACjF,OAAO,EAAmB,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,gBAAgB,CAAC;AACrF,OAAO,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAC;AAEjD,OAAO,EAAE,kCAAkC,EAAE,MAAM,iBAAiB,CAAC;AACrE,OAAO,EAIH,eAAe,EACf,eAAe,EAClB,MAAM,kBAAkB,CAAC;AAC1B,OAAO,EAAE,uBAAuB,EAAE,MAAM,yDAAyD,CAAC;AAClG,OAAO,EAAE,UAAU,EAAE,MAAM,4BAA4B,CAAC;AACxD,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AACvC,OAAO,EAAuB,2BAA2B,EAAE,MAAM,kCAAkC,CAAC;AAapG;IAaI,8BACY,QAAkB,EAClB,UAAsB,EACtB,UAAsB,EACtB,cAA+B,EAC/B,cAA+B,EAC/B,QAAkB,EAClB,uBAAgD,EACA,QAA6B;QARzF,iBASI;QARQ,aAAQ,GAAR,QAAQ,CAAU;QAClB,eAAU,GAAV,UAAU,CAAY;QACtB,eAAU,GAAV,UAAU,CAAY;QACtB,mBAAc,GAAd,cAAc,CAAiB;QAC/B,mBAAc,GAAd,cAAc,CAAiB;QAC/B,aAAQ,GAAR,QAAQ,CAAU;QAClB,4BAAuB,GAAvB,uBAAuB,CAAyB;QACA,aAAQ,GAAR,QAAQ,CAAqB;QApBnD,cAAS,GAAG,IAAI,CAAC;QAEhD,SAAI,GAAgB,IAA8B,CAAC;QACnD,eAAU,GAAG,EAAE,CAAC;QAChB,YAAO,GAAG,EAAE,CAAC;QACb,iBAAY,GAAG,KAAK,CAAC;QACrB,eAAU,GAAG,KAAK,CAAC;QACnB,SAAI,GAAc,IAAI,SAAS,CAAC;YACnC,QAAQ,EAAE,IAAI,WAAW,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YAClD,QAAQ,EAAE,IAAI,WAAW,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;SACrD,CAAC,CAAC;QA8BI,kBAAa,GAAG;YACnB,KAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAE1B,OAAO,KAAI,CAAC,uBAAuB;iBAC9B,eAAe,EAAE;iBACjB,IAAI,CACD,UAAC,IAAgB,IAAK,OAAA,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAA3B,CAA2B,EACjD,UAAC,KAAwB,IAAK,OAAA,KAAI,CAAC,qCAAqC,CAAC,KAAK,CAAC,EAAjD,CAAiD,CAClF;iBACA,IAAI,CAAC,UAAC,cAAuB,IAAK,OAAA,KAAI,CAAC,UAAU,CAAC,cAAc,CAAC,EAA/B,CAA+B,CAAC,CAAC;QAC5E,CAAC,CAAC;QA4CM,oBAAe,GAAG,UAAC,OAAwB;YAC/C,OAAA,KAAI,CAAC,UAAU;iBACV,OAAO,CAAa,MAAM,EAAE,KAAI,CAAC,OAAO,EAAE;gBACvC,OAAO,EAAE,IAAI,WAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,mCAAmC,CAAC;gBACnF,IAAI,EAAE,KAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;gBAC5D,OAAO,EAAE,UAAU;aACtB,CAAC;iBACD,SAAS,EAAE;QANhB,CAMgB,CAAC;IAhFlB,CAAC;IAEJ,uCAAQ,GAAR;QACI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,CAAC;QAErC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;QAEjC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;QAC3C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;QAEhE,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAElD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAEvD,IAAI,IAAI,CAAC,uBAAuB,CAAC,aAAa,EAAE,EAAE;YAC9C,IAAI,CAAC,aAAa,EAAE,CAAC;SACxB;IACL,CAAC;IAcM,oDAAqB,GAA5B;QAAA,iBAyBC;QAxBG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAE1B,IAAI,IAAI,CAAC,2BAA2B,EAAE,EAAE;YACpC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;gBAChB,wBAAwB,EAAE,mDAAmD;aAChF,CAAC,CAAC;YAEH,OAAO,OAAO,CAAC,MAAM,EAAE,CAAC;SAC3B;QAED,IAAM,OAAO,GAAG,sBACT,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,IAAI,EAAE,CAAC,KACtC,QAAQ,EAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAiB,CAAC,KAAK,EAC1D,QAAQ,EAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAiB,CAAC,KAAK,EAC1D,UAAU,EAAE,UAAU,GACN,CAAC;QAErB,OAAO,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC;aAC/B,IAAI,CACD,UAAC,QAA+C;YAC5C,OAAA,KAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC;QAA/B,CAA+B,EACnC,UAAC,KAAK,IAAK,OAAA,KAAI,CAAC,qCAAqC,CAAC,KAAK,CAAC,EAAjD,CAAiD,CAC/D;aACA,IAAI,CAAC,UAAC,cAAuB,IAAK,OAAA,KAAI,CAAC,UAAU,CAAC,cAAc,CAAC,EAA/B,CAA+B,CAAC,CAAC;IAC5E,CAAC;IAEO,6CAAc,GAAtB;QACI,OAAO,kCAAkC,KAAK,IAAI,CAAC,OAAO,CAAC;IAC/D,CAAC;IAEO,+CAAgB,GAAxB,UACI,QAA+C;QAE/C,IAAM,KAAK,GAAG,QAAQ,YAAY,YAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC;QAC1E,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QACxD,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,iCAA+B,IAAI,CAAC,OAAS,CAAC,CAAC;QACrE,OAAO,IAAI,CAAC,cAAc,EAAE;YACxB,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE;YACtC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAWO,oEAAqC,GAA7C,UAA8C,KAAwB;QAClE,IAAI,CAAC,UAAU,CAAC,KAAK,CACjB,iCAA+B,IAAI,CAAC,OAAO,iBAAY,KAAK,CAAC,MAAQ,CACxE,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YAChB,oBAAoB,EAChB,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,iBAAiB,CAAC;gBAC9C,wCAAwC;SAC/C,CAAC,CAAC;QAEH,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAEO,yCAAU,GAAlB,UAAmB,cAAuB;QACtC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;YAChB,cAAc,gBAAA;SACjB,CAAC,CAAC;QACH,IAAI,IAAI,CAAC,cAAc,EAAE,EAAE;YACvB,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE,CAAC;SAC5C;QACD,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,cAAc,gBAAA,EAAE,CAAC,CAAC;IAC/C,CAAC;IAEO,0DAA2B,GAAnC;QACI,IAAM,QAAQ,GAAoB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC5D,IAAM,QAAQ,GAAoB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAE5D,OAAO,CACH,CAAC,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC;YAC7C,CAAC,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAChD,CAAC;IACN,CAAC;IAvIqC;QAArC,WAAW,CAAC,uBAAuB,CAAC;;2DAAkB;IAD9C,oBAAoB;QALhC,SAAS,CAAC;YACP,QAAQ,EAAE,iBAAiB;YAC3B,MAAM,EAAE,CAAC,+9BAA29B,CAAC;YACr+B,QAAQ,EAAE,w2EAAgvE;SAC7vE,CAAC;QAsBO,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,MAAM,CAAC,2BAA2B,CAAC,CAAA;yCAP9B,QAAQ;YACN,UAAU;YACV,UAAU;YACN,eAAe;YACf,eAAe;YACrB,QAAQ;YACO,uBAAuB;OApBnD,oBAAoB,CAyIhC;IAAD,2BAAC;CAAA,AAzID,IAyIC;SAzIY,oBAAoB\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/components/login-dialog/login-dialog.component.d.ts","writeByteOrderMark":false,"text":"import { HttpClient } from '@angular/common/http';\r\nimport { OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ModalRef } from '@fundamental-ngx/core';\r\nimport { ILoginData, ILoginModalFeedback, ISessionService, IStorageService } from '../../interfaces';\r\nimport { SSOAuthenticationHelper } from '../../services/authentication/sso-authentication.helper';\r\nimport { LogService } from '../../services/log.service';\r\nimport { UrlUtils } from '../../utils';\r\nimport { LoginDialogResource } from './login-dialog-resource-provider';\r\nexport declare class LoginDialogComponent implements OnInit {\r\n    private modalRef;\r\n    private logService;\r\n    private httpClient;\r\n    private sessionService;\r\n    private storageService;\r\n    private urlUtils;\r\n    private ssoAuthenticationHelper;\r\n    resource: LoginDialogResource;\r\n    hostClass: boolean;\r\n    data: ILoginData;\r\n    authURIKey: string;\r\n    authURI: string;\r\n    isFullScreen: boolean;\r\n    ssoEnabled: boolean;\r\n    form: FormGroup;\r\n    constructor(modalRef: ModalRef, logService: LogService, httpClient: HttpClient, sessionService: ISessionService, storageService: IStorageService, urlUtils: UrlUtils, ssoAuthenticationHelper: SSOAuthenticationHelper, resource: LoginDialogResource);\r\n    ngOnInit(): void;\r\n    signinWithSSO: () => Promise<ILoginModalFeedback>;\r\n    signinWithCredentials(): Promise<ILoginModalFeedback>;\r\n    private isMainEndPoint;\r\n    private storeAccessToken;\r\n    private sendCredentials;\r\n    private APIAuthenticationFailureReportFactory;\r\n    private acceptUser;\r\n    private hasRequiredCredentialsError;\r\n}\r\n"}}

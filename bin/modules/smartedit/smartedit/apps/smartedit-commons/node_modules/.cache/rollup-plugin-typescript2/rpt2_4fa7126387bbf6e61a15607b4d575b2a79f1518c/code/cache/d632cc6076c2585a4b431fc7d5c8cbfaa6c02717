{"code":"import { __assign, __decorate, __metadata } from \"tslib\";\r\nimport './CollapsibleContainerComponent.scss';\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\nimport { SeDowngradeComponent } from '../../di';\r\nimport { stringUtils } from '../../utils';\r\nimport { COLLAPSIBLE_DEFAULT_CONFIGURATION } from './constants';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"CollapsibleContainerComponent\", {\r\n    selector: 'se-collapsible-container',\r\n    template: \"<div role=\\\"tab\\\" class=\\\"collapsible-container__header\\\" [ngClass]=\\\"{\\n        'collapsible-container__header--icon-right': isIconRight(),\\n        'collapsible-container__header--icon-left': isIconLeft()\\n    }\\\" [attr.id]=\\\"headingId\\\" [attr.aria-selected]=\\\"isOpen\\\" (keypress)=\\\"handleKeypress($event)\\\"><button type=\\\"button\\\" tabindex=\\\"0\\\" class=\\\"collapsible-container__header__title\\\" (click)=\\\"toggle()\\\" [attr.aria-expanded]=\\\"isOpen\\\" [attr.aria-controls]=\\\"panelId\\\"><ng-content select=\\\"se-collapsible-container-header\\\"></ng-content></button> <a class=\\\"collapsible-container__header__button btn btn-link\\\" *ngIf=\\\"configuration.iconVisible\\\" [ngClass]=\\\"{\\n            'collapsible-container__header__button--expanded': isOpen\\n        }\\\" [title]=\\\"isOpen\\n            ? 'se.ycollapsible.action.collapse'\\n            : ('se.ycollapsible.action.expand' | translate)\\n        \\\" [attr.aria-expanded]=\\\"isOpen\\\" (click)=\\\"toggle()\\\"><span class=\\\"sap-icon--navigation-down-arrow collapsible-container__header__icon\\\"></span></a></div><div #container class=\\\"collapsible-container__content panel\\\" [ngStyle]=\\\"{ 'max-height.px': isOpen ? containerHeight : 0 }\\\" [attr.id]=\\\"panelId\\\" [attr.aria-labelledby]=\\\"headingId\\\" [attr.aria-hidden]=\\\"!isOpen\\\" role=\\\"tabpanel\\\"><ng-content select=\\\"se-collapsible-container-content\\\"></ng-content></div>\",\r\n    styles: [\".collapsible-container__content{overflow:hidden;display:block;transition:max-height .4s ease;width:100%;background-color:#fff}.collapsible-container__header{max-width:100%;background-color:#fff;display:flex;align-items:center;min-height:50px;box-shadow:0 1px 1px rgba(0,0,0,.05)}.collapsible-container__header__title{text-align:left;background:0 0;border:0;outline:0;flex:1;display:flex;align-items:center;min-height:50px;text-decoration:none;user-select:none}.collapsible-container__header__title:hover{text-decoration:none}.collapsible-container__header__button{flex:0;transition:all .4s ease;font-size:20px}.collapsible-container__header__button--expanded{transform:rotate(180deg)}.collapsible-container__header--icon-right .collapsible-container__header__title{order:1}.collapsible-container__header--icon-right .collapsible-container__header__button{order:2}.collapsible-container__header--icon-left .collapsible-container__header__title{order:2}.collapsible-container__header--icon-left .collapsible-container__header__button{order:1}:host(.se-collapsible-container--noshadow) .collapsible-container__content.panel{box-shadow:none}\"],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n});\r\nvar /* @ngInject */ CollapsibleContainerComponent = /** @class */ (function () {\r\n    function /* @ngInject */ CollapsibleContainerComponent(cdr) {\r\n        var _this = this;\r\n        this.cdr = cdr;\r\n        this.getApi = new EventEmitter();\r\n        this.containerHeight = 0;\r\n        this.headingId = stringUtils.generateIdentifier();\r\n        this.panelId = stringUtils.generateIdentifier();\r\n        this.api = {\r\n            isExpanded: function () { return _this.isOpen; }\r\n        };\r\n    }\r\n    Object.defineProperty(/* @ngInject */ CollapsibleContainerComponent.prototype, \"_container\", {\r\n        set: function (container) {\r\n            var _this = this;\r\n            this.container = container;\r\n            this.containerHeight = container.nativeElement.scrollHeight;\r\n            if (!this.mutationObserver && this.container && this.container.nativeElement) {\r\n                this.mutationObserver = new MutationObserver(function () {\r\n                    _this.containerHeight = _this.container.nativeElement.scrollHeight;\r\n                    _this.cdr.detectChanges();\r\n                });\r\n                this.mutationObserver.observe(this.container.nativeElement, {\r\n                    childList: true,\r\n                    subtree: true,\r\n                    attributes: true\r\n                });\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /* @ngInject */ CollapsibleContainerComponent.prototype.ngOnDestroy = function () {\r\n        this.mutationObserver.disconnect();\r\n    };\r\n    /* @ngInject */ CollapsibleContainerComponent.prototype.ngOnChanges = function (changes) {\r\n        if (changes.configuration) {\r\n            this.configure();\r\n        }\r\n    };\r\n    /* @ngInject */ CollapsibleContainerComponent.prototype.ngOnInit = function () {\r\n        this.configure();\r\n        this.isOpen = this.configuration.expandedByDefault;\r\n        this.getApi.emit(this.api);\r\n    };\r\n    /* @ngInject */ CollapsibleContainerComponent.prototype.toggle = function () {\r\n        this.isOpen = !this.isOpen;\r\n    };\r\n    /* @ngInject */ CollapsibleContainerComponent.prototype.handleKeypress = function (event) {\r\n        if (event.code === 'Enter') {\r\n            this.toggle();\r\n        }\r\n    };\r\n    /* @ngInject */ CollapsibleContainerComponent.prototype.isIconRight = function () {\r\n        return this.configuration.iconAlignment === 'right';\r\n    };\r\n    /* @ngInject */ CollapsibleContainerComponent.prototype.isIconLeft = function () {\r\n        return this.configuration.iconAlignment === 'left';\r\n    };\r\n    /* @ngInject */ CollapsibleContainerComponent.prototype.configure = function () {\r\n        this.configuration = __assign(__assign({}, COLLAPSIBLE_DEFAULT_CONFIGURATION), (this.configuration || {}));\r\n    };\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], /* @ngInject */ CollapsibleContainerComponent.prototype, \"configuration\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], /* @ngInject */ CollapsibleContainerComponent.prototype, \"getApi\", void 0);\r\n    __decorate([\r\n        ViewChild('container', { static: true }),\r\n        __metadata(\"design:type\", ElementRef),\r\n        __metadata(\"design:paramtypes\", [ElementRef])\r\n    ], /* @ngInject */ CollapsibleContainerComponent.prototype, \"_container\", null);\r\n    /* @ngInject */ CollapsibleContainerComponent = __decorate([\r\n        SeDowngradeComponent(),\r\n        Component({\r\n            selector: 'se-collapsible-container',\r\n            template: \"<div role=\\\"tab\\\" class=\\\"collapsible-container__header\\\" [ngClass]=\\\"{\\n        'collapsible-container__header--icon-right': isIconRight(),\\n        'collapsible-container__header--icon-left': isIconLeft()\\n    }\\\" [attr.id]=\\\"headingId\\\" [attr.aria-selected]=\\\"isOpen\\\" (keypress)=\\\"handleKeypress($event)\\\"><button type=\\\"button\\\" tabindex=\\\"0\\\" class=\\\"collapsible-container__header__title\\\" (click)=\\\"toggle()\\\" [attr.aria-expanded]=\\\"isOpen\\\" [attr.aria-controls]=\\\"panelId\\\"><ng-content select=\\\"se-collapsible-container-header\\\"></ng-content></button> <a class=\\\"collapsible-container__header__button btn btn-link\\\" *ngIf=\\\"configuration.iconVisible\\\" [ngClass]=\\\"{\\n            'collapsible-container__header__button--expanded': isOpen\\n        }\\\" [title]=\\\"isOpen\\n            ? 'se.ycollapsible.action.collapse'\\n            : ('se.ycollapsible.action.expand' | translate)\\n        \\\" [attr.aria-expanded]=\\\"isOpen\\\" (click)=\\\"toggle()\\\"><span class=\\\"sap-icon--navigation-down-arrow collapsible-container__header__icon\\\"></span></a></div><div #container class=\\\"collapsible-container__content panel\\\" [ngStyle]=\\\"{ 'max-height.px': isOpen ? containerHeight : 0 }\\\" [attr.id]=\\\"panelId\\\" [attr.aria-labelledby]=\\\"headingId\\\" [attr.aria-hidden]=\\\"!isOpen\\\" role=\\\"tabpanel\\\"><ng-content select=\\\"se-collapsible-container-content\\\"></ng-content></div>\",\r\n            styles: [\".collapsible-container__content{overflow:hidden;display:block;transition:max-height .4s ease;width:100%;background-color:#fff}.collapsible-container__header{max-width:100%;background-color:#fff;display:flex;align-items:center;min-height:50px;box-shadow:0 1px 1px rgba(0,0,0,.05)}.collapsible-container__header__title{text-align:left;background:0 0;border:0;outline:0;flex:1;display:flex;align-items:center;min-height:50px;text-decoration:none;user-select:none}.collapsible-container__header__title:hover{text-decoration:none}.collapsible-container__header__button{flex:0;transition:all .4s ease;font-size:20px}.collapsible-container__header__button--expanded{transform:rotate(180deg)}.collapsible-container__header--icon-right .collapsible-container__header__title{order:1}.collapsible-container__header--icon-right .collapsible-container__header__button{order:2}.collapsible-container__header--icon-left .collapsible-container__header__title{order:2}.collapsible-container__header--icon-left .collapsible-container__header__button{order:1}:host(.se-collapsible-container--noshadow) .collapsible-container__content.panel{box-shadow:none}\"],\r\n            changeDetection: ChangeDetectionStrategy.OnPush\r\n        }),\r\n        __metadata(\"design:paramtypes\", [ChangeDetectorRef])\r\n    ], /* @ngInject */ CollapsibleContainerComponent);\r\n    return /* @ngInject */ CollapsibleContainerComponent;\r\n}());\r\nexport { /* @ngInject */ CollapsibleContainerComponent };\r\n//# sourceMappingURL=CollapsibleContainerComponent.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/di/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/utils/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/collapsible/constants.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/collapsible/interfaces.ts"],"map":"{\"version\":3,\"file\":\"CollapsibleContainerComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/collapsible/CollapsibleContainerComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/components/collapsible/CollapsibleContainerComponent.d.ts","writeByteOrderMark":false,"text":"import './CollapsibleContainerComponent.scss';\r\nimport { ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\r\nimport { CollapsibleContainerApi, CollapsibleContainerConfig } from './interfaces';\r\nexport declare class CollapsibleContainerComponent implements OnInit, OnChanges, OnDestroy {\r\n    private cdr;\r\n    configuration: CollapsibleContainerConfig;\r\n    getApi: EventEmitter<CollapsibleContainerApi>;\r\n    set _container(container: ElementRef);\r\n    containerHeight: number;\r\n    headingId: string;\r\n    panelId: string;\r\n    isOpen: boolean;\r\n    isDisabled: boolean;\r\n    private container;\r\n    private mutationObserver;\r\n    private api;\r\n    constructor(cdr: ChangeDetectorRef);\r\n    ngOnDestroy(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngOnInit(): void;\r\n    toggle(): void;\r\n    handleKeypress(event: KeyboardEvent): void;\r\n    isIconRight(): boolean;\r\n    isIconLeft(): boolean;\r\n    private configure;\r\n}\r\n"}}

{"code":"//# sourceMappingURL=IDecorator.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/interfaces/IFeature.ts"],"map":"{\"version\":3,\"file\":\"IDecorator.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/interfaces/IDecorator.ts\"],\"names\":[],\"mappings\":\"\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/services/interfaces/IDecorator.d.ts","writeByteOrderMark":false,"text":"import { IFeature } from './IFeature';\r\nexport declare type IDecoratorDisplayCondition = (componentType: string, componentId: string) => PromiseLike<boolean>;\r\n/**\r\n * Interface for IDecorator and it acts as a payload passed to addDecorator method of featureService method to register a decorator as a feature.\r\n */\r\nexport interface IDecorator extends IFeature {\r\n    displayCondition?: IDecoratorDisplayCondition;\r\n}\r\n"}}

{"code":"import { __awaiter, __decorate, __generator, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { NAVIGATION_NODE_TYPECODE } from 'cmscommons';\r\nimport { ICatalogService, SeDowngradeService } from 'smarteditcommons';\r\nimport { GenericEditorModalService } from '../../../services/GenericEditorModalService';\r\n/**\r\n * Convenience service to open an editor modal window for a given navigation node's data.\r\n */\r\nvar /* @ngInject */ NavigationNodeEditorModalService = /** @class */ (function () {\r\n    function /* @ngInject */ NavigationNodeEditorModalService(genericEditorModalService, catalogService) {\r\n        this.genericEditorModalService = genericEditorModalService;\r\n        this.catalogService = catalogService;\r\n    }\r\n    /**\r\n     *\r\n     * Opens a modal for creating and editing a navigation node with the CSM items API. Leave the current parameter to trigger\r\n     * a creation operation.\r\n     *\r\n     * @param uriContext The uri context of the navigational node.\r\n     * @param parent The parent navigational node.\r\n     * @param current The current navigational node. If the current node is left empty, the modal\r\n     * will process a creation operation.\r\n     */\r\n    /* @ngInject */ NavigationNodeEditorModalService.prototype.open = function (uriContext, parent, current) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var content, catalogVersion;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        content = null;\r\n                        if (!!current) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.catalogService.getCatalogVersionUUid(uriContext)];\r\n                    case 1:\r\n                        catalogVersion = _a.sent();\r\n                        content = {\r\n                            catalogVersion: catalogVersion,\r\n                            parent: parent.uuid,\r\n                            itemtype: NAVIGATION_NODE_TYPECODE,\r\n                            visible: true\r\n                        };\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/, this.genericEditorModalService.open({\r\n                            componentUuid: current ? current.uuid : null,\r\n                            componentType: NAVIGATION_NODE_TYPECODE,\r\n                            content: content,\r\n                            title: 'se.cms.navigationmanagement.node.edit.title'\r\n                        }, function (item) { return item; }, null, {\r\n                            modalPanelClass: 'modal-stretched'\r\n                        })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ NavigationNodeEditorModalService = __decorate([\r\n        SeDowngradeService(),\r\n        __metadata(\"design:paramtypes\", [GenericEditorModalService,\r\n            ICatalogService])\r\n    ], /* @ngInject */ NavigationNodeEditorModalService);\r\n    return /* @ngInject */ NavigationNodeEditorModalService;\r\n}());\r\nexport { /* @ngInject */ NavigationNodeEditorModalService };\r\n//# sourceMappingURL=NavigationNodeEditorModalService.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/services/GenericEditorModalService.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/navigation/types.ts"],"map":"{\"version\":3,\"file\":\"NavigationNodeEditorModalService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/components/navigation/navigationNodeEditor/NavigationNodeEditorModalService.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAAE,wBAAwB,EAAE,MAAM,YAAY,CAAC;AACtD,OAAO,EAAE,eAAe,EAAwB,kBAAkB,EAAE,MAAM,kBAAkB,CAAC;AAC7F,OAAO,EAAE,yBAAyB,EAAE,MAAM,6CAA6C,CAAC;AAGxF;;GAEG;AAEH;IACI,0DACY,yBAAoD,EACpD,cAA+B;QAD/B,8BAAyB,GAAzB,yBAAyB,CAA2B;QACpD,mBAAc,GAAd,cAAc,CAAiB;IACxC,CAAC;IAEJ;;;;;;;;;OASG;IACU,+DAAI,GAAjB,UACI,UAAuB,EACvB,MAAsB,EACtB,OAAwB;;;;;;wBAGpB,OAAO,GAAG,IAAI,CAAC;6BAEf,CAAC,OAAO,EAAR,wBAAQ;wBACe,qBAAM,IAAI,CAAC,cAAc,CAAC,qBAAqB,CAAC,UAAU,CAAC,EAAA;;wBAA5E,cAAc,GAAG,SAA2D;wBAElF,OAAO,GAAG;4BACN,cAAc,gBAAA;4BACd,MAAM,EAAE,MAAM,CAAC,IAAI;4BACnB,QAAQ,EAAE,wBAAwB;4BAClC,OAAO,EAAE,IAAI;yBAChB,CAAC;;4BAGN,sBAAO,IAAI,CAAC,yBAAyB,CAAC,IAAI,CACtC;4BACI,aAAa,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI;4BAC5C,aAAa,EAAE,wBAAwB;4BACvC,OAAO,SAAA;4BACP,KAAK,EAAE,6CAA6C;yBACvD,EACD,UAAC,IAAa,IAAK,OAAA,IAAI,EAAJ,CAAI,EACvB,IAAI,EACJ;4BACI,eAAe,EAAE,iBAAiB;yBACrC,CACJ,EAAC;;;;KACL;IAhDL;QADC,kBAAkB,EAAE;yCAGsB,yBAAyB;YACpC,eAAe;wDA8C9C;IAAD,uDAAC;CAAA,AAjDD,IAiDC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/components/navigation/navigationNodeEditor/NavigationNodeEditorModalService.d.ts","writeByteOrderMark":false,"text":"import { ICatalogService, IUriContext, Payload } from 'smarteditcommons';\r\nimport { GenericEditorModalService } from '../../../services/GenericEditorModalService';\r\nimport { NavigationNode } from '../types';\r\n/**\r\n * Convenience service to open an editor modal window for a given navigation node's data.\r\n */\r\nexport declare class NavigationNodeEditorModalService {\r\n    private genericEditorModalService;\r\n    private catalogService;\r\n    constructor(genericEditorModalService: GenericEditorModalService, catalogService: ICatalogService);\r\n    /**\r\n     *\r\n     * Opens a modal for creating and editing a navigation node with the CSM items API. Leave the current parameter to trigger\r\n     * a creation operation.\r\n     *\r\n     * @param uriContext The uri context of the navigational node.\r\n     * @param parent The parent navigational node.\r\n     * @param current The current navigational node. If the current node is left empty, the modal\r\n     * will process a creation operation.\r\n     */\r\n    open(uriContext: IUriContext, parent: NavigationNode, current?: NavigationNode): Promise<Payload>;\r\n}\r\n"}}

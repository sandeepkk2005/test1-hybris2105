{"version":3,"file":"start.js","sourceRoot":"","sources":["../src/start.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\n// We're using a path-based import here to minimize the amount of code that is evaluated before\r\n// we check to see if the Node.js version is too old. If, for whatever reason, Rush crashes with\r\n// an old Node.js version when evaluating one of the more complex imports, we'll at least\r\n// shown a meaningful error message.\r\nimport { NodeJsCompatibility } from '@microsoft/rush-lib/lib/logic/NodeJsCompatibility';\r\n\r\nif (NodeJsCompatibility.reportAncientIncompatibleVersion()) {\r\n  // The Node.js version is known to have serious incompatibilities.  In that situation, the user\r\n  // should downgrade Rush to an older release that supported their Node.js version.\r\n  process.exit(1);\r\n}\r\n\r\nconst alreadyReportedNodeTooNewError: boolean = NodeJsCompatibility.warnAboutVersionTooNew({\r\n  isRushLib: false,\r\n  alreadyReportedNodeTooNewError: false\r\n});\r\n\r\nimport colors from 'colors/safe';\r\nimport * as os from 'os';\r\nimport * as semver from 'semver';\r\n\r\nimport { Text, PackageJsonLookup } from '@rushstack/node-core-library';\r\nimport { EnvironmentVariableNames } from '@microsoft/rush-lib';\r\nimport * as rushLib from '@microsoft/rush-lib';\r\n\r\nimport { RushCommandSelector } from './RushCommandSelector';\r\nimport { RushVersionSelector } from './RushVersionSelector';\r\nimport { MinimalRushConfiguration } from './MinimalRushConfiguration';\r\n\r\n// Load the configuration\r\nconst configuration:\r\n  | MinimalRushConfiguration\r\n  | undefined = MinimalRushConfiguration.loadFromDefaultLocation();\r\n\r\nconst currentPackageVersion: string = PackageJsonLookup.loadOwnPackageJson(__dirname).version;\r\n\r\nlet rushVersionToLoad: string | undefined = undefined;\r\n\r\nconst previewVersion: string | undefined = process.env[EnvironmentVariableNames.RUSH_PREVIEW_VERSION];\r\n\r\nif (previewVersion) {\r\n  if (!semver.valid(previewVersion, false)) {\r\n    console.error(\r\n      colors.red(`Invalid value for RUSH_PREVIEW_VERSION environment variable: \"${previewVersion}\"`)\r\n    );\r\n    process.exit(1);\r\n  }\r\n\r\n  rushVersionToLoad = previewVersion;\r\n\r\n  const lines: string[] = [];\r\n  lines.push(\r\n    `*********************************************************************`,\r\n    `* WARNING! THE \"RUSH_PREVIEW_VERSION\" ENVIRONMENT VARIABLE IS SET.  *`,\r\n    `*                                                                   *`,\r\n    `* You are previewing Rush version:        ${Text.padEnd(previewVersion, 25)} *`\r\n  );\r\n\r\n  if (configuration) {\r\n    lines.push(`* The rush.json configuration asks for:   ${Text.padEnd(configuration.rushVersion, 25)} *`);\r\n  }\r\n\r\n  lines.push(\r\n    `*                                                                   *`,\r\n    `* To restore the normal behavior, unset the RUSH_PREVIEW_VERSION    *`,\r\n    `* environment variable.                                             *`,\r\n    `*********************************************************************`\r\n  );\r\n\r\n  console.error(lines.map((line) => colors.black(colors.bgYellow(line))).join(os.EOL));\r\n} else if (configuration) {\r\n  rushVersionToLoad = configuration.rushVersion;\r\n}\r\n\r\n// If we are previewing an older Rush that doesn't understand the RUSH_PREVIEW_VERSION variable,\r\n// then unset it.\r\nif (rushVersionToLoad && semver.lt(rushVersionToLoad, '5.0.0-dev.18')) {\r\n  delete process.env[EnvironmentVariableNames.RUSH_PREVIEW_VERSION];\r\n}\r\n\r\n// Rush is \"managed\" if its version and configuration are dictated by a repo's rush.json\r\nconst isManaged: boolean = !!configuration;\r\nconst launchOptions: rushLib.ILaunchOptions = { isManaged, alreadyReportedNodeTooNewError };\r\n\r\n// If we're inside a repo folder, and it's requesting a different version, then use the RushVersionManager to\r\n// install it\r\nif (rushVersionToLoad && rushVersionToLoad !== currentPackageVersion) {\r\n  const versionSelector: RushVersionSelector = new RushVersionSelector(currentPackageVersion);\r\n  versionSelector\r\n    .ensureRushVersionInstalledAsync(rushVersionToLoad, configuration, launchOptions)\r\n    .catch((error: Error) => {\r\n      console.log(colors.red('Error: ' + error.message));\r\n    });\r\n} else {\r\n  // Otherwise invoke the rush-lib that came with this rush package\r\n  RushCommandSelector.execute(currentPackageVersion, rushLib, launchOptions);\r\n}\r\n"]}
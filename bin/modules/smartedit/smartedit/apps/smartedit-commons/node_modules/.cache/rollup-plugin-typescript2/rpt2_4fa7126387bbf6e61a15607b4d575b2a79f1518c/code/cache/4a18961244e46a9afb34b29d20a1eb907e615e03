{"code":"import { __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { Component } from '@angular/core';\r\nimport { FundamentalModalManagerService } from '@smart/utils';\r\nimport { map } from 'rxjs/operators';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"ConfirmDialogComponent\", {\r\n    selector: 'se-confirm-dialog',\r\n    template: \"\\n        <div id=\\\"confirmationModalDescription\\\">\\n            {{ (modalData | async).description | translate: (descriptionPlaceholders | async) }}\\n        </div>\\n    \"\r\n});\r\nvar ConfirmDialogComponent = /** @class */ (function () {\r\n    function ConfirmDialogComponent(modalManager) {\r\n        this.modalManager = modalManager;\r\n    }\r\n    Object.defineProperty(ConfirmDialogComponent.prototype, \"modalData\", {\r\n        get: function () {\r\n            return this.modalManager.getModalData();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ConfirmDialogComponent.prototype, \"descriptionPlaceholders\", {\r\n        get: function () {\r\n            return this.modalManager\r\n                .getModalData()\r\n                .pipe(map(function (data) { return data.descriptionPlaceholders || {}; }));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    ConfirmDialogComponent = __decorate([\r\n        Component({\r\n            selector: 'se-confirm-dialog',\r\n            template: \"\\n        <div id=\\\"confirmationModalDescription\\\">\\n            {{ (modalData | async).description | translate: (descriptionPlaceholders | async) }}\\n        </div>\\n    \"\r\n        }),\r\n        __metadata(\"design:paramtypes\", [FundamentalModalManagerService])\r\n    ], ConfirmDialogComponent);\r\n    return ConfirmDialogComponent;\r\n}());\r\nexport { ConfirmDialogComponent };\r\n//# sourceMappingURL=ConfirmDialogComponent.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/rxjs@6.5.4/node_modules/rxjs/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/rxjs@6.5.4/node_modules/rxjs/operators/index.d.ts"],"map":"{\"version\":3,\"file\":\"ConfirmDialogComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/ConfirmDialogComponent/ConfirmDialogComponent.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAC1C,OAAO,EAAE,8BAA8B,EAAY,MAAM,cAAc,CAAC;AAExE,OAAO,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;gFAE1B;IACP,QAAQ,EAAE,mBAAmB;IAC7B,QAAQ,EAAE,6KAIT;CACJ;AACD;IACI,gCAAoB,YAA4C;QAA5C,iBAAY,GAAZ,YAAY,CAAgC;IAAG,CAAC;IAEpE,sBAAW,6CAAS;aAApB;YACI,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;QAC5C,CAAC;;;OAAA;IAED,sBAAW,2DAAuB;aAAlC;YACI,OAAO,IAAI,CAAC,YAAY;iBACnB,YAAY,EAAE;iBACd,IAAI,CAAC,GAAG,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,uBAAuB,IAAI,EAAE,EAAlC,CAAkC,CAAC,CAAC,CAAC;QACjE,CAAC;;;OAAA;IAXQ,sBAAsB;QARlC,SAAS,CAAC;YACP,QAAQ,EAAE,mBAAmB;YAC7B,QAAQ,EAAE,6KAIT;SACJ,CAAC;yCAEoC,8BAA8B;OADvD,sBAAsB,CAYlC;IAAD,6BAAC;CAAA,AAZD,IAYC;SAZY,sBAAsB\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/components/ConfirmDialogComponent/ConfirmDialogComponent.d.ts","writeByteOrderMark":false,"text":"import { FundamentalModalManagerService, TypedMap } from '@smart/utils';\r\nimport { Observable } from 'rxjs';\r\nexport declare class ConfirmDialogComponent {\r\n    private modalManager;\r\n    constructor(modalManager: FundamentalModalManagerService);\r\n    get modalData(): Observable<any>;\r\n    get descriptionPlaceholders(): Observable<TypedMap<string>>;\r\n}\r\n"}}

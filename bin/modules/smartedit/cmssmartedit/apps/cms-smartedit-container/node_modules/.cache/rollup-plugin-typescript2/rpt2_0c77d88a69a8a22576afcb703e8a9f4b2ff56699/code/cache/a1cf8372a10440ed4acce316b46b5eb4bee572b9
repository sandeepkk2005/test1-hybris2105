{"code":"import { __decorate, __metadata } from \"tslib\";\r\nimport { CONTEXT_CATALOG, CONTEXT_CATALOG_VERSION, CONTEXT_SITE_ID, RestServiceFactory, SeDowngradeService } from 'smarteditcommons';\r\n/**\r\n * @ngdoc service\r\n * @name CatalogVersionRestService\r\n * @description\r\n *\r\n * Provides REST services for the CMS catalog version endpoint\r\n */\r\nvar /* @ngInject */ CatalogVersionRestService = /** @class */ (function () {\r\n    function /* @ngInject */ CatalogVersionRestService(restServiceFactory) {\r\n        this.restServiceFactory = restServiceFactory;\r\n        this.URI = \"/cmswebservices/v1/sites/:\" + CONTEXT_SITE_ID + \"/catalogs/:\" + CONTEXT_CATALOG + \"/versions/:\" + CONTEXT_CATALOG_VERSION + \"/targets?mode=cloneableTo\";\r\n    }\r\n    /**\r\n     * @ngdoc method\r\n     * @name CatalogVersionRestService#getCloneableTargets\r\n     * @methodOf CatalogVersionRestService\r\n     *\r\n     * @description\r\n     * Fetches all cloneable target catalog versions for a given site+catalog+catalogversion\r\n     *\r\n     * @param {Object} uriContext A {@link resourceLocationsModule.object:UriContext UriContext}\r\n     *\r\n     * @returns {Object} A JSON object with a single field 'versions' containing a list of catalog versions, or an empty list.\r\n     */\r\n    /* @ngInject */ CatalogVersionRestService.prototype.getCloneableTargets = function (uriContext) {\r\n        var rest = this.restServiceFactory.get(this.URI);\r\n        return rest.get(uriContext);\r\n    };\r\n    /* @ngInject */ CatalogVersionRestService = __decorate([\r\n        SeDowngradeService(),\r\n        __metadata(\"design:paramtypes\", [RestServiceFactory])\r\n    ], /* @ngInject */ CatalogVersionRestService);\r\n    return /* @ngInject */ CatalogVersionRestService;\r\n}());\r\nexport { /* @ngInject */ CatalogVersionRestService };\r\n//# sourceMappingURL=CatalogVersionRestService.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"CatalogVersionRestService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/dao/CatalogVersionRestService.ts\"],\"names\":[],\"mappings\":\";AAIA,OAAO,EACH,eAAe,EACf,uBAAuB,EACvB,eAAe,EAEf,kBAAkB,EAClB,kBAAkB,EACrB,MAAM,kBAAkB,CAAC;AAE1B;;;;;;GAMG;AAEH;IAGI,mDAAoB,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QAFzC,QAAG,GAAW,+BAA6B,eAAe,mBAAc,eAAe,mBAAc,uBAAuB,8BAA2B,CAAC;IAE5G,CAAC;IAE9D;;;;;;;;;;;OAWG;IACI,uEAAmB,GAA1B,UAA2B,UAAuB;QAC9C,IAAM,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAA2B,IAAI,CAAC,GAAG,CAAC,CAAC;QAC7E,OAAO,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAChC,CAAC;IApBL;QADC,kBAAkB,EAAE;yCAIuB,kBAAkB;iDAkB7D;IAAD,gDAAC;CAAA,AArBD,IAqBC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/dao/CatalogVersionRestService.d.ts","writeByteOrderMark":false,"text":"import { ICloneableCatalogVersion } from 'cmscommons';\r\nimport { IUriContext, RestServiceFactory } from 'smarteditcommons';\r\n/**\r\n * @ngdoc service\r\n * @name CatalogVersionRestService\r\n * @description\r\n *\r\n * Provides REST services for the CMS catalog version endpoint\r\n */\r\nexport declare class CatalogVersionRestService {\r\n    private restServiceFactory;\r\n    private readonly URI;\r\n    constructor(restServiceFactory: RestServiceFactory);\r\n    /**\r\n     * @ngdoc method\r\n     * @name CatalogVersionRestService#getCloneableTargets\r\n     * @methodOf CatalogVersionRestService\r\n     *\r\n     * @description\r\n     * Fetches all cloneable target catalog versions for a given site+catalog+catalogversion\r\n     *\r\n     * @param {Object} uriContext A {@link resourceLocationsModule.object:UriContext UriContext}\r\n     *\r\n     * @returns {Object} A JSON object with a single field 'versions' containing a list of catalog versions, or an empty list.\r\n     */\r\n    getCloneableTargets(uriContext: IUriContext): Promise<ICloneableCatalogVersion>;\r\n}\r\n"}}

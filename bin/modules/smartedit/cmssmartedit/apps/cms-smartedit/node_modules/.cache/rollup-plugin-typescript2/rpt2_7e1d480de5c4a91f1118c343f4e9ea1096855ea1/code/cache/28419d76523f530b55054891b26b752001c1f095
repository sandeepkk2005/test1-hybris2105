{"code":"import { __awaiter, __decorate, __generator, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { cmsitemsUri, IEditorModalService } from 'cmscommons';\r\nimport { ComponentHandlerService } from 'smartedit';\r\nimport { ICatalogService, IPageInfoService, ISharedDataService, SeDowngradeService, EXPERIENCE_STORAGE_KEY } from 'smarteditcommons';\r\nimport { PageContentSlotsService } from './PageContentSlotsService';\r\n/**\r\n * Provides methods to interact with the backend for shared slot information.\r\n */\r\nvar /* @ngInject */ SlotSharedService = /** @class */ (function () {\r\n    function /* @ngInject */ SlotSharedService(pageContentSlotsService, pageInfoService, translateService, editorModalService, componentHandlerService, catalogService, sharedDataService) {\r\n        this.pageContentSlotsService = pageContentSlotsService;\r\n        this.pageInfoService = pageInfoService;\r\n        this.translateService = translateService;\r\n        this.editorModalService = editorModalService;\r\n        this.componentHandlerService = componentHandlerService;\r\n        this.catalogService = catalogService;\r\n        this.sharedDataService = sharedDataService;\r\n    }\r\n    /**\r\n     * Checks if the slot is shared and returns true in case slot is shared and returns false if it is not.\r\n     * Based on this service method the slot shared button is shown or hidden for a particular slotId\r\n     */\r\n    /* @ngInject */ SlotSharedService.prototype.isSlotShared = function (slotId) {\r\n        return this.pageContentSlotsService.isSlotShared(slotId);\r\n    };\r\n    /**\r\n     * Checks whether the given slot is global icon slot or not\r\n     * Returns true if either of the below conditions are true.\r\n     * If the current catalog is multicountry related and if the slot is external slot.\r\n     * If the current catalog is multicountry related and the slot is not external slot but the current page is from parent catalog.\r\n     */\r\n    /* @ngInject */ SlotSharedService.prototype.isGlobalSlot = function (slotId, slotType) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var isExternalSlot, _a, isCurrentCatalogMultiCountry, experience, isMultiCountry, isCurrentPageFromParent;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        isExternalSlot = this.componentHandlerService.isExternalComponent(slotId, slotType);\r\n                        return [4 /*yield*/, Promise.all([\r\n                                this.catalogService.isCurrentCatalogMultiCountry(),\r\n                                this.sharedDataService.get(EXPERIENCE_STORAGE_KEY)\r\n                            ])];\r\n                    case 1:\r\n                        _a = _b.sent(), isCurrentCatalogMultiCountry = _a[0], experience = _a[1];\r\n                        isMultiCountry = isCurrentCatalogMultiCountry || false;\r\n                        isCurrentPageFromParent = this.isCurrentPageFromParentCatalog(experience);\r\n                        return [2 /*return*/, isMultiCountry && (isExternalSlot || (isCurrentPageFromParent && !isExternalSlot))];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Sets the status of the disableSharedSlot feature\r\n     */\r\n    /* @ngInject */ SlotSharedService.prototype.setSharedSlotEnablementStatus = function (status) {\r\n        this.disableShareSlotStatus = status;\r\n    };\r\n    /**\r\n     * Checks the status of the disableSharedSlot feature\r\n     *\r\n     */\r\n    /* @ngInject */ SlotSharedService.prototype.areSharedSlotsDisabled = function () {\r\n        return this.disableShareSlotStatus;\r\n    };\r\n    /**\r\n     * Replaces the global slot (multicountry related) based on the options selected in the \"Replace Slot\" generic editor.\r\n     *\r\n     * @returns A promise that resolves when replace slot operation is completed.\r\n     */\r\n    /* @ngInject */ SlotSharedService.prototype.replaceGlobalSlot = function (componentAttributes) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var cmsItem, componentData;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.validateComponentAttributes(componentAttributes);\r\n                        return [4 /*yield*/, this.constructCmsItemParameter(componentAttributes)];\r\n                    case 1:\r\n                        cmsItem = _a.sent();\r\n                        componentData = {\r\n                            title: 'se.cms.slot.shared.replace.editor.title',\r\n                            structure: {\r\n                                attributes: [\r\n                                    {\r\n                                        cmsStructureType: 'SlotSharedSlotTypeField',\r\n                                        qualifier: 'isSlotCustom',\r\n                                        required: true\r\n                                    },\r\n                                    {\r\n                                        cmsStructureType: 'SlotSharedCloneActionField',\r\n                                        qualifier: 'cloneAction',\r\n                                        required: true\r\n                                    }\r\n                                ]\r\n                            },\r\n                            contentApi: cmsitemsUri,\r\n                            saveLabel: 'se.cms.slot.shared.replace.editor.save',\r\n                            content: cmsItem,\r\n                            initialDirty: true\r\n                        };\r\n                        return [2 /*return*/, this.editorModalService.openGenericEditor(componentData)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Replaces the shared slot (non-multicountry related) based on the options selected in the \"Replace Slot\" generic editor\r\n     *\r\n     * @returns A promise that resolves when replace slot operation is completed.\r\n     */\r\n    /* @ngInject */ SlotSharedService.prototype.replaceSharedSlot = function (componentAttributes) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var cmsItem, componentData;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.validateComponentAttributes(componentAttributes);\r\n                        return [4 /*yield*/, this.constructCmsItemParameter(componentAttributes)];\r\n                    case 1:\r\n                        cmsItem = _a.sent();\r\n                        cmsItem.isSlotCustom = true;\r\n                        componentData = {\r\n                            title: 'se.cms.slot.shared.replace.editor.title',\r\n                            structure: {\r\n                                attributes: [\r\n                                    {\r\n                                        cmsStructureType: 'SlotSharedCloneActionField',\r\n                                        qualifier: 'cloneAction',\r\n                                        required: true\r\n                                    }\r\n                                ]\r\n                            },\r\n                            contentApi: cmsitemsUri,\r\n                            saveLabel: 'se.cms.slot.shared.replace.editor.save',\r\n                            content: cmsItem,\r\n                            initialDirty: true\r\n                        };\r\n                        return [2 /*return*/, this.editorModalService.openGenericEditor(componentData)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ SlotSharedService.prototype.constructCmsItemParameter = function (componentAttributes) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var cloneText, pageUid, targetCatalogVersionUuid, componentName, cmsItem;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        cloneText = this.translateService.instant('se.cms.slot.shared.clone');\r\n                        return [4 /*yield*/, this.pageInfoService.getPageUID()];\r\n                    case 1:\r\n                        pageUid = _a.sent();\r\n                        return [4 /*yield*/, this.pageInfoService.getCatalogVersionUUIDFromPage()];\r\n                    case 2:\r\n                        targetCatalogVersionUuid = _a.sent();\r\n                        componentName = pageUid + \"-\" + componentAttributes.smarteditComponentId + \"-\" + cloneText;\r\n                        cmsItem = {\r\n                            name: componentName,\r\n                            smarteditComponentId: componentAttributes.smarteditComponentId,\r\n                            contentSlotUuid: componentAttributes.smarteditComponentUuid,\r\n                            itemtype: componentAttributes.smarteditComponentType,\r\n                            catalogVersion: targetCatalogVersionUuid,\r\n                            pageUuid: pageUid,\r\n                            onlyOneRestrictionMustApply: false\r\n                        };\r\n                        return [2 /*return*/, cmsItem];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ SlotSharedService.prototype.validateComponentAttributes = function (componentAttributes) {\r\n        if (!componentAttributes) {\r\n            throw new Error('Parameter: componentAttributes needs to be supplied!');\r\n        }\r\n        var validationAttributes = [\r\n            'smarteditComponentId',\r\n            'smarteditComponentUuid',\r\n            'smarteditComponentType'\r\n        ];\r\n        var invalidAttr = validationAttributes.find(function (attr) { return !componentAttributes[attr]; });\r\n        if (!!invalidAttr) {\r\n            throw new Error(\"Parameter: componentAttributes.\" + invalidAttr + \" needs to be supplied!\");\r\n        }\r\n    };\r\n    /* @ngInject */ SlotSharedService.prototype.isCurrentPageFromParentCatalog = function (experience) {\r\n        var _a, _b;\r\n        var pageContextCatalogVersionUuid = ((_a = experience === null || experience === void 0 ? void 0 : experience.pageContext) === null || _a === void 0 ? void 0 : _a.catalogVersionUuid) || '';\r\n        var catalogDescriptorCatalogVersionUuid = ((_b = experience === null || experience === void 0 ? void 0 : experience.catalogDescriptor) === null || _b === void 0 ? void 0 : _b.catalogVersionUuid) || '';\r\n        var isCurrentPageFromParent = catalogDescriptorCatalogVersionUuid !== pageContextCatalogVersionUuid;\r\n        return isCurrentPageFromParent;\r\n    };\r\n    /* @ngInject */ SlotSharedService = __decorate([\r\n        SeDowngradeService(),\r\n        __metadata(\"design:paramtypes\", [PageContentSlotsService,\r\n            IPageInfoService,\r\n            TranslateService,\r\n            IEditorModalService,\r\n            ComponentHandlerService,\r\n            ICatalogService,\r\n            ISharedDataService])\r\n    ], /* @ngInject */ SlotSharedService);\r\n    return /* @ngInject */ SlotSharedService;\r\n}());\r\nexport { /* @ngInject */ SlotSharedService };\r\n//# sourceMappingURL=SlotSharedService.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@ngx-translate/core@11.0.1_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@ngx-translate/core/ngx-translate-core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit/src/services/PageContentSlotsService.ts"],"map":"{\"version\":3,\"file\":\"SlotSharedService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/services/SlotSharedService.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;AACvD,OAAO,EAAW,WAAW,EAAE,mBAAmB,EAAE,MAAM,YAAY,CAAC;AACvE,OAAO,EAAE,uBAAuB,EAAE,MAAM,WAAW,CAAC;AACpD,OAAO,EAEH,eAAe,EAEf,gBAAgB,EAChB,kBAAkB,EAClB,kBAAkB,EAClB,sBAAsB,EACzB,MAAM,kBAAkB,CAAC;AAC1B,OAAO,EAAE,uBAAuB,EAAE,MAAM,2BAA2B,CAAC;AAEpE;;GAEG;AAEH;IAGI,2CACY,uBAAgD,EAChD,eAAiC,EACjC,gBAAkC,EAClC,kBAAuC,EACvC,uBAAgD,EAChD,cAA+B,EAC/B,iBAAqC;QANrC,4BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,oBAAe,GAAf,eAAe,CAAkB;QACjC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,uBAAkB,GAAlB,kBAAkB,CAAqB;QACvC,4BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,mBAAc,GAAd,cAAc,CAAiB;QAC/B,sBAAiB,GAAjB,iBAAiB,CAAoB;IAC9C,CAAC;IAEJ;;;OAGG;IACI,wDAAY,GAAnB,UAAoB,MAAc;QAC9B,OAAO,IAAI,CAAC,uBAAuB,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IAC7D,CAAC;IAED;;;;;OAKG;IACU,wDAAY,GAAzB,UAA0B,MAAc,EAAE,QAAgB;;;;;;wBAChD,cAAc,GAAG,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;wBAEvC,qBAAM,OAAO,CAAC,GAAG,CAAC;gCACjE,IAAI,CAAC,cAAc,CAAC,4BAA4B,EAAE;gCACjD,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,sBAAsB,CAA4B;6BACjF,CAAC,EAAA;;wBAHI,KAA6C,SAGjD,EAHK,4BAA4B,QAAA,EAAE,UAAU,QAAA;wBAKzC,cAAc,GAAG,4BAA4B,IAAI,KAAK,CAAC;wBAGvD,uBAAuB,GAAG,IAAI,CAAC,8BAA8B,CAAC,UAAU,CAAC,CAAC;wBAEhF,sBAAO,cAAc,IAAI,CAAC,cAAc,IAAI,CAAC,uBAAuB,IAAI,CAAC,cAAc,CAAC,CAAC,EAAC;;;;KAC7F;IAED;;OAEG;IACI,yEAA6B,GAApC,UAAqC,MAAe;QAChD,IAAI,CAAC,sBAAsB,GAAG,MAAM,CAAC;IACzC,CAAC;IAED;;;OAGG;IACI,kEAAsB,GAA7B;QACI,OAAO,IAAI,CAAC,sBAAsB,CAAC;IACvC,CAAC;IAED;;;;OAIG;IACU,6DAAiB,GAA9B,UAA+B,mBAAwC;;;;;;wBACnE,IAAI,CAAC,2BAA2B,CAAC,mBAAmB,CAAC,CAAC;wBAEtC,qBAAM,IAAI,CAAC,yBAAyB,CAAC,mBAAmB,CAAC,EAAA;;wBAAnE,OAAO,GAAG,SAAyD;wBAEnE,aAAa,GAAG;4BAClB,KAAK,EAAE,yCAAyC;4BAChD,SAAS,EAAE;gCACP,UAAU,EAAE;oCACR;wCACI,gBAAgB,EAAE,yBAAyB;wCAC3C,SAAS,EAAE,cAAc;wCACzB,QAAQ,EAAE,IAAI;qCACjB;oCACD;wCACI,gBAAgB,EAAE,4BAA4B;wCAC9C,SAAS,EAAE,aAAa;wCACxB,QAAQ,EAAE,IAAI;qCACjB;iCACJ;6BACJ;4BACD,UAAU,EAAE,WAAW;4BACvB,SAAS,EAAE,wCAAwC;4BACnD,OAAO,EAAE,OAAO;4BAChB,YAAY,EAAE,IAAI;yBACrB,CAAC;wBAEF,sBAAO,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,aAAa,CAAC,EAAC;;;;KACnE;IAED;;;;OAIG;IACU,6DAAiB,GAA9B,UAA+B,mBAAwC;;;;;;wBACnE,IAAI,CAAC,2BAA2B,CAAC,mBAAmB,CAAC,CAAC;wBAEtC,qBAAM,IAAI,CAAC,yBAAyB,CAAC,mBAAmB,CAAC,EAAA;;wBAAnE,OAAO,GAAG,SAAyD;wBACzE,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC;wBAEtB,aAAa,GAAG;4BAClB,KAAK,EAAE,yCAAyC;4BAChD,SAAS,EAAE;gCACP,UAAU,EAAE;oCACR;wCACI,gBAAgB,EAAE,4BAA4B;wCAC9C,SAAS,EAAE,aAAa;wCACxB,QAAQ,EAAE,IAAI;qCACjB;iCACJ;6BACJ;4BACD,UAAU,EAAE,WAAW;4BACvB,SAAS,EAAE,wCAAwC;4BACnD,OAAO,EAAE,OAAO;4BAChB,YAAY,EAAE,IAAI;yBACrB,CAAC;wBAEF,sBAAO,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,aAAa,CAAC,EAAC;;;;KACnE;IAEa,qEAAyB,GAAvC,UACI,mBAAwC;;;;;;wBAElC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;wBAE5D,qBAAM,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,EAAA;;wBAAjD,OAAO,GAAG,SAAuC;wBACtB,qBAAM,IAAI,CAAC,eAAe,CAAC,6BAA6B,EAAE,EAAA;;wBAArF,wBAAwB,GAAG,SAA0D;wBACrF,aAAa,GAAM,OAAO,SAAI,mBAAmB,CAAC,oBAAoB,SAAI,SAAW,CAAC;wBACtF,OAAO,GAAG;4BACZ,IAAI,EAAE,aAAa;4BACnB,oBAAoB,EAAE,mBAAmB,CAAC,oBAAoB;4BAC9D,eAAe,EAAE,mBAAmB,CAAC,sBAAsB;4BAC3D,QAAQ,EAAE,mBAAmB,CAAC,sBAAsB;4BACpD,cAAc,EAAE,wBAAwB;4BACxC,QAAQ,EAAE,OAAO;4BACjB,2BAA2B,EAAE,KAAK;yBACrC,CAAC;wBACF,sBAAO,OAAO,EAAC;;;;KAClB;IAEO,uEAA2B,GAAnC,UAAoC,mBAAwC;QACxE,IAAI,CAAC,mBAAmB,EAAE;YACtB,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;SAC3E;QAED,IAAM,oBAAoB,GAAG;YACzB,sBAAsB;YACtB,wBAAwB;YACxB,wBAAwB;SAC3B,CAAC;QACF,IAAM,WAAW,GAAG,oBAAoB,CAAC,IAAI,CAAC,UAAC,IAAI,IAAK,OAAA,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAA1B,CAA0B,CAAC,CAAC;QACpF,IAAI,CAAC,CAAC,WAAW,EAAE;YACf,MAAM,IAAI,KAAK,CAAC,oCAAkC,WAAW,2BAAwB,CAAC,CAAC;SAC1F;IACL,CAAC;IAEO,0EAA8B,GAAtC,UAAuC,UAAuB;;QAC1D,IAAM,6BAA6B,GAAG,OAAA,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,WAAW,0CAAE,kBAAkB,KAAI,EAAE,CAAC;QACxF,IAAM,mCAAmC,GACrC,OAAA,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,iBAAiB,0CAAE,kBAAkB,KAAI,EAAE,CAAC;QAC5D,IAAM,uBAAuB,GACzB,mCAAmC,KAAK,6BAA6B,CAAC;QAE1E,OAAO,uBAAuB,CAAC;IACnC,CAAC;IAxKL;QADC,kBAAkB,EAAE;yCAKoB,uBAAuB;YAC/B,gBAAgB;YACf,gBAAgB;YACd,mBAAmB;YACd,uBAAuB;YAChC,eAAe;YACZ,kBAAkB;yCA+JpD;IAAD,wCAAC;CAAA,AAzKD,IAyKC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit/services/SlotSharedService.d.ts","writeByteOrderMark":false,"text":"import { TranslateService } from '@ngx-translate/core';\r\nimport { IEditorModalService } from 'cmscommons';\r\nimport { ComponentHandlerService } from 'smartedit';\r\nimport { ComponentAttributes, ICatalogService, IPageInfoService, ISharedDataService } from 'smarteditcommons';\r\nimport { PageContentSlotsService } from './PageContentSlotsService';\r\n/**\r\n * Provides methods to interact with the backend for shared slot information.\r\n */\r\nexport declare class SlotSharedService {\r\n    private pageContentSlotsService;\r\n    private pageInfoService;\r\n    private translateService;\r\n    private editorModalService;\r\n    private componentHandlerService;\r\n    private catalogService;\r\n    private sharedDataService;\r\n    private disableShareSlotStatus;\r\n    constructor(pageContentSlotsService: PageContentSlotsService, pageInfoService: IPageInfoService, translateService: TranslateService, editorModalService: IEditorModalService, componentHandlerService: ComponentHandlerService, catalogService: ICatalogService, sharedDataService: ISharedDataService);\r\n    /**\r\n     * Checks if the slot is shared and returns true in case slot is shared and returns false if it is not.\r\n     * Based on this service method the slot shared button is shown or hidden for a particular slotId\r\n     */\r\n    isSlotShared(slotId: string): Promise<boolean>;\r\n    /**\r\n     * Checks whether the given slot is global icon slot or not\r\n     * Returns true if either of the below conditions are true.\r\n     * If the current catalog is multicountry related and if the slot is external slot.\r\n     * If the current catalog is multicountry related and the slot is not external slot but the current page is from parent catalog.\r\n     */\r\n    isGlobalSlot(slotId: string, slotType: string): Promise<boolean>;\r\n    /**\r\n     * Sets the status of the disableSharedSlot feature\r\n     */\r\n    setSharedSlotEnablementStatus(status: boolean): void;\r\n    /**\r\n     * Checks the status of the disableSharedSlot feature\r\n     *\r\n     */\r\n    areSharedSlotsDisabled(): boolean;\r\n    /**\r\n     * Replaces the global slot (multicountry related) based on the options selected in the \"Replace Slot\" generic editor.\r\n     *\r\n     * @returns A promise that resolves when replace slot operation is completed.\r\n     */\r\n    replaceGlobalSlot(componentAttributes: ComponentAttributes): Promise<any>;\r\n    /**\r\n     * Replaces the shared slot (non-multicountry related) based on the options selected in the \"Replace Slot\" generic editor\r\n     *\r\n     * @returns A promise that resolves when replace slot operation is completed.\r\n     */\r\n    replaceSharedSlot(componentAttributes: ComponentAttributes): Promise<any>;\r\n    private constructCmsItemParameter;\r\n    private validateComponentAttributes;\r\n    private isCurrentPageFromParentCatalog;\r\n}\r\n"}}

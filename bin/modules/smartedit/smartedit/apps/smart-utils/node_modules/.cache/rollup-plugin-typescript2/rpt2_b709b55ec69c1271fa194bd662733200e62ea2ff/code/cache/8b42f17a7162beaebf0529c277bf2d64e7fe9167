{"code":"import { __spreadArrays } from \"tslib\";\r\nimport { annotationService } from '../../../annotation.service';\r\nvar operationContextName = 'OperationContextRegistered';\r\n/**\r\n * @ngdoc object\r\n * @name @smartutils.object:@OperationContextRegistered\r\n * @description\r\n * Class level typescript {@link http://www.typescriptlang.org/docs/handbook/decorators.html decorator factory} is delegated to\r\n * {@link @smartutils.services:OperationContextService OperationContextService.register} and it provides the functionality\r\n * to register an url with  operation context(s).\r\n *\r\n * For example:\r\n * 1. @OperationContextRegistered('apiUrl', ['CMS', 'INTERACTIVE'])\r\n * 2. @OperationContextRegistered('apiUrl', 'TOOLING')\r\n *\r\n * @param {string} url\r\n * @param {string | string[]} operationContext\r\n */\r\nexport var OperationContextRegistered = annotationService.getClassAnnotationFactory(operationContextName);\r\nexport function OperationContextAnnotationFactory(injector, operationContextService, OPERATION_CONTEXT) {\r\n    'ngInject';\r\n    return annotationService.setClassAnnotationFactory(operationContextName, function (factoryArguments) {\r\n        return function (instance, originalConstructor, invocationArguments) {\r\n            originalConstructor.call.apply(originalConstructor, __spreadArrays([instance], invocationArguments));\r\n            var url = injector.get(factoryArguments[0], factoryArguments[0]);\r\n            if (typeof factoryArguments[1] === 'string') {\r\n                var operationContext = OPERATION_CONTEXT[factoryArguments[1]];\r\n                operationContextService.register(url, operationContext);\r\n            }\r\n            else if (Array.isArray(factoryArguments[1]) && factoryArguments[1].length > 0) {\r\n                factoryArguments[1].forEach(function (element) {\r\n                    operationContextService.register(url, OPERATION_CONTEXT[element]);\r\n                });\r\n            }\r\n        };\r\n    });\r\n}\r\n//# sourceMappingURL=operation-context.annotation.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/dtos/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/services/annotation.service.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/services/interceptors/errors/retries/operation-context.service.ts"],"map":"{\"version\":3,\"file\":\"operation-context.annotation.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/services/interceptors/errors/retries/operation-context.annotation.ts\"],\"names\":[],\"mappings\":\";AASA,OAAO,EAAE,iBAAiB,EAA0B,MAAM,6BAA6B,CAAC;AAGxF,IAAM,oBAAoB,GAAG,4BAA4B,CAAC;AAE1D;;;;;;;;;;;;;;GAcG;AACH,MAAM,CAAC,IAAM,0BAA0B,GAAG,iBAAiB,CAAC,yBAAyB,CACjF,oBAAoB,CACiD,CAAC;AAE1E,MAAM,UAAU,iCAAiC,CAC7C,QAAkB,EAClB,uBAAgD,EAChD,iBAAmC;IAEnC,UAAU,CAAC;IACX,OAAO,iBAAiB,CAAC,yBAAyB,CAAC,oBAAoB,EAAE,UACrE,gBAAuB;QAEvB,OAAO,UACH,QAAa,EACb,mBAAyC,EACzC,mBAA0B;YAE1B,mBAAmB,CAAC,IAAI,OAAxB,mBAAmB,kBAAM,QAAQ,GAAK,mBAAmB,GAAE;YAE3D,IAAM,GAAG,GAAW,QAAQ,CAAC,GAAG,CAAS,gBAAgB,CAAC,CAAC,CAAC,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;YAEnF,IAAI,OAAO,gBAAgB,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;gBACzC,IAAM,gBAAgB,GAAY,iBAAyB,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjF,uBAAuB,CAAC,QAAQ,CAAC,GAAG,EAAE,gBAAgB,CAAC,CAAC;aAC3D;iBAAM,IAAI,KAAK,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC7E,gBAAgB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,UAAC,OAAe;oBACxC,uBAAuB,CAAC,QAAQ,CAAC,GAAG,EAAG,iBAAyB,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC/E,CAAC,CAAC,CAAC;aACN;QACL,CAAC,CAAC;IACN,CAAC,CAAC,CAAC;AACP,CAAC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/services/interceptors/errors/retries/operation-context.annotation.d.ts","writeByteOrderMark":false,"text":"/**\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n * @module smartutils\r\n */\r\nimport { Injector } from '@angular/core';\r\nimport { TypedMap } from '../../../../dtos';\r\nimport { ClassAnnotationFactory } from '../../../annotation.service';\r\nimport { OperationContextService } from './operation-context.service';\r\n/**\r\n * @ngdoc object\r\n * @name @smartutils.object:@OperationContextRegistered\r\n * @description\r\n * Class level typescript {@link http://www.typescriptlang.org/docs/handbook/decorators.html decorator factory} is delegated to\r\n * {@link @smartutils.services:OperationContextService OperationContextService.register} and it provides the functionality\r\n * to register an url with  operation context(s).\r\n *\r\n * For example:\r\n * 1. @OperationContextRegistered('apiUrl', ['CMS', 'INTERACTIVE'])\r\n * 2. @OperationContextRegistered('apiUrl', 'TOOLING')\r\n *\r\n * @param {string} url\r\n * @param {string | string[]} operationContext\r\n */\r\nexport declare const OperationContextRegistered: (url: string, operationContext: string | string[]) => ClassDecorator;\r\nexport declare function OperationContextAnnotationFactory(injector: Injector, operationContextService: OperationContextService, OPERATION_CONTEXT: TypedMap<string>): ClassAnnotationFactory | null;\r\n"}}

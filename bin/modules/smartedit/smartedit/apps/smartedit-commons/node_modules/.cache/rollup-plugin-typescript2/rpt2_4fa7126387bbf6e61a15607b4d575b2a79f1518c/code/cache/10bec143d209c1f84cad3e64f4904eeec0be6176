{"code":"import { __assign, __decorate } from \"tslib\";\r\nimport { SeDowngradeService } from '../../../di/SeDowngradeService';\r\nvar DEFAULT_WIZARD_ACTION = {\r\n    id: 'wizard_action_id',\r\n    i18n: 'wizard_action_label',\r\n    isMainAction: true,\r\n    enableIfCondition: function () {\r\n        return true;\r\n    },\r\n    executeIfCondition: function () {\r\n        return true;\r\n    },\r\n    execute: function (wizardService) {\r\n        return;\r\n    }\r\n};\r\n/* @internal */\r\nvar /* @ngInject */ WizardActions = /** @class */ (function () {\r\n    function /* @ngInject */ WizardActions() {\r\n    }\r\n    /* @ngInject */ WizardActions.prototype.customAction = function (configuration) {\r\n        return this.createNewAction(configuration);\r\n    };\r\n    /* @ngInject */ WizardActions.prototype.done = function (configuration) {\r\n        var custom = {\r\n            id: 'ACTION_DONE',\r\n            i18n: 'se.action.done',\r\n            execute: function (wizardService) {\r\n                wizardService.close();\r\n            }\r\n        };\r\n        return this.createNewAction(configuration, custom);\r\n    };\r\n    /* @ngInject */ WizardActions.prototype.next = function (configuration) {\r\n        var custom = {\r\n            id: 'ACTION_NEXT',\r\n            i18n: 'se.action.next',\r\n            execute: function (wizardService) {\r\n                wizardService.goToStepWithIndex(wizardService.getCurrentStepIndex() + 1);\r\n            }\r\n        };\r\n        return this.createNewAction(configuration, custom);\r\n    };\r\n    /* @ngInject */ WizardActions.prototype.navBarAction = function (configuration) {\r\n        if (!configuration.wizardService || configuration.destinationIndex === null) {\r\n            throw new Error('Error initializating navBarAction, must provide the wizardService and destinationIndex fields');\r\n        }\r\n        var custom = {\r\n            id: 'ACTION_GOTO',\r\n            i18n: 'action.goto',\r\n            enableIfCondition: function () {\r\n                return configuration.wizardService.getCurrentStepIndex() >= configuration.destinationIndex;\r\n            },\r\n            execute: function (wizardService) {\r\n                wizardService.goToStepWithIndex(configuration.destinationIndex);\r\n            }\r\n        };\r\n        return this.createNewAction(configuration, custom);\r\n    };\r\n    /* @ngInject */ WizardActions.prototype.back = function (configuration) {\r\n        var custom = {\r\n            id: 'ACTION_BACK',\r\n            i18n: 'se.action.back',\r\n            isMainAction: false,\r\n            execute: function (wizardService) {\r\n                var currentIndex = wizardService.getCurrentStepIndex();\r\n                if (currentIndex <= 0) {\r\n                    throw new Error('Failure to execute BACK action, no previous index exists!');\r\n                }\r\n                wizardService.goToStepWithIndex(currentIndex - 1);\r\n            }\r\n        };\r\n        return this.createNewAction(configuration, custom);\r\n    };\r\n    /* @ngInject */ WizardActions.prototype.cancel = function () {\r\n        return this.createNewAction({\r\n            id: 'ACTION_CANCEL',\r\n            i18n: 'se.action.cancel',\r\n            isMainAction: false,\r\n            execute: function (wizardService) {\r\n                wizardService.cancel();\r\n            }\r\n        });\r\n    };\r\n    /* @ngInject */ WizardActions.prototype.createNewAction = function (configuration, customConfiguration) {\r\n        if (configuration === void 0) { configuration = null; }\r\n        if (customConfiguration === void 0) { customConfiguration = null; }\r\n        return __assign(__assign(__assign({}, DEFAULT_WIZARD_ACTION), customConfiguration), configuration);\r\n    };\r\n    /* @ngInject */ WizardActions = __decorate([\r\n        SeDowngradeService()\r\n    ], /* @ngInject */ WizardActions);\r\n    return /* @ngInject */ WizardActions;\r\n}());\r\nexport { /* @ngInject */ WizardActions };\r\n//# sourceMappingURL=WizardActions.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/di/SeDowngradeService.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/wizard/services/WizardService.ts"],"map":"{\"version\":3,\"file\":\"WizardActions.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/services/wizard/services/WizardActions.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/services/wizard/services/WizardActions.d.ts","writeByteOrderMark":false,"text":"import { Type } from '@angular/core';\r\nimport { TypedMap } from '@smart/utils';\r\nimport { WizardService } from './WizardService';\r\nexport interface WizardAction {\r\n    id?: string;\r\n    i18n?: string;\r\n    /**\r\n     * Component to be used as a wizard controller.\r\n     */\r\n    component?: Type<any>;\r\n    /**\r\n     * **Deprecated since 2005, use [component]{@link WizardAction#component}.**\r\n     *\r\n     * An angular controller which will be the underlying controller\r\n     * for all of the wizard. This controller MUST implement the function <strong>getWizardConfig()</strong> which\r\n     * returns a {@link WizardConfig}.<br />\r\n     * If you need to do any manual wizard manipulation, 'wizardManager' can be injected into your controller.\r\n     * See {@link WizardService}.\r\n     */\r\n    controller?: string | (new (...args: any[]) => any);\r\n    /**\r\n     * **Deprecated since 2005, use [component]{@link WizardAction.component}.**\r\n     *\r\n     * An alternate controller name that can be used in your wizard step\r\n     */\r\n    controllerAs?: string;\r\n    isMainAction?: boolean;\r\n    destinationIndex?: number;\r\n    stepIndex?: number;\r\n    wizardService?: WizardService;\r\n    /**\r\n     * A map of properties to initialize the {@link WizardService} with. They are accessible under wizardManager.properties.\r\n     * templates. By default the controller name is wizardController.\r\n     */\r\n    properties?: TypedMap<any>;\r\n    isCurrentStep?(): boolean;\r\n    enableIfCondition?(): boolean;\r\n    executeIfCondition?(): boolean | Promise<any>;\r\n    execute?(wizardService: WizardService): void;\r\n}\r\nexport declare class WizardActions {\r\n    customAction(configuration: WizardAction): WizardAction;\r\n    done(configuration?: WizardAction): WizardAction;\r\n    next(configuration?: WizardAction): WizardAction;\r\n    navBarAction(configuration: WizardAction): WizardAction;\r\n    back(configuration: WizardAction): WizardAction;\r\n    cancel(): WizardAction;\r\n    private createNewAction;\r\n}\r\n"}}

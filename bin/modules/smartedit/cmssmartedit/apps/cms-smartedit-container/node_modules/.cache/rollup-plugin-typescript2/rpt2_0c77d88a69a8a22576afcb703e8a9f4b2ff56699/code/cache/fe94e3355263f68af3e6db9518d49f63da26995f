{"code":"import { __awaiter, __decorate, __generator, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { IPageService, StructureTypeCategory } from 'cmscommons';\r\nimport { SeDowngradeService } from 'smarteditcommons';\r\nimport { TypeStructureRestService } from '../dao/TypeStructureRestService';\r\nvar PAGE_STRUCTURE_PRE_ORDER = [\r\n    'typeCode',\r\n    'template',\r\n    'name',\r\n    'description',\r\n    'label',\r\n    'uid',\r\n    'title',\r\n    'fromName',\r\n    'fromEmail'\r\n];\r\nvar PAGE_STRUCTURE_POST_ORDER = ['creationtime', 'modifiedtime'];\r\nvar /* @ngInject */ ContextAwarePageStructureService = /** @class */ (function () {\r\n    function /* @ngInject */ ContextAwarePageStructureService(typeStructureRestService, pageService) {\r\n        this.typeStructureRestService = typeStructureRestService;\r\n        this.pageService = pageService;\r\n    }\r\n    /**\r\n     * Return the CMS page structure with some modifications for the context of creating a new page.\r\n     * The field order is modified, the created/modified time fields are removed, and the label field for variation content pages is disabled.\r\n     *\r\n     * @param pageTypeCode The page type of the new page to be created\r\n     * @param isPrimary Flag indicating if the new page will be a primary or variation page\r\n     *\r\n     * @returns A modified page structure\r\n     */\r\n    /* @ngInject */ ContextAwarePageStructureService.prototype.getPageStructureForNewPage = function (pageTypeCode, isPrimary) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var fields;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getFields(pageTypeCode)];\r\n                    case 1:\r\n                        fields = _a.sent();\r\n                        if (pageTypeCode === 'ContentPage') {\r\n                            this.setLabelEditability(fields, isPrimary);\r\n                        }\r\n                        this.removeField(fields, 'creationtime');\r\n                        this.removeField(fields, 'modifiedtime');\r\n                        this.removeField(fields, 'displayCondition');\r\n                        this.removeField(fields, 'restrictions');\r\n                        return [2 /*return*/, {\r\n                                attributes: this.getOrderedFields(fields),\r\n                                category: StructureTypeCategory.PAGE\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Return the CMS page structure with some modifications for the context of editing the info of an existing page.\r\n     * The field order is modified, and the label field for variation content pages is disabled.\r\n     *\r\n     * @param pageTypeCode The page type of the page to be edited\r\n     * @param pageId The ID of the existing page to be modified\r\n     *\r\n     * @returns A modified page structure\r\n     */\r\n    /* @ngInject */ ContextAwarePageStructureService.prototype.getPageStructureForPageEditing = function (pageTypeCode, pageId) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var fields, readOnlyFieldNames, isPrimary;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getFields(pageTypeCode)];\r\n                    case 1:\r\n                        fields = _a.sent();\r\n                        readOnlyFieldNames = ['uid', 'creationtime', 'modifiedtime'];\r\n                        fields\r\n                            .filter(function (field) { return readOnlyFieldNames.indexOf(field.qualifier) >= 0; })\r\n                            .forEach(function (field) {\r\n                            field.editable = false;\r\n                        });\r\n                        if (!(pageTypeCode === 'ContentPage')) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, this.pageService.isPagePrimary(pageId)];\r\n                    case 2:\r\n                        isPrimary = _a.sent();\r\n                        this.setLabelEditability(fields, isPrimary);\r\n                        return [2 /*return*/, {\r\n                                attributes: this.getOrderedFields(fields),\r\n                                category: StructureTypeCategory.PAGE\r\n                            }];\r\n                    case 3: return [2 /*return*/, {\r\n                            attributes: this.getOrderedFields(fields),\r\n                            category: StructureTypeCategory.PAGE\r\n                        }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Return the CMS page structure with some modifications for the context of viewing the info of an existing page.\r\n     * The field order is modified, and the label field for variation content pages is disabled.\r\n     *\r\n     * @param pageTypeCode The page type of the existing page\r\n     *\r\n     * @returns A modified page structure\r\n     */\r\n    /* @ngInject */ ContextAwarePageStructureService.prototype.getPageStructureForViewing = function (pageTypeCode) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var fields;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getFields(pageTypeCode)];\r\n                    case 1:\r\n                        fields = _a.sent();\r\n                        fields.forEach(function (field) {\r\n                            field.editable = false;\r\n                        });\r\n                        this.removeField(fields, 'typeCode');\r\n                        this.removeField(fields, 'template');\r\n                        this.removeField(fields, 'displayCondition');\r\n                        this.removeField(fields, 'restrictions');\r\n                        return [2 /*return*/, {\r\n                                attributes: this.getOrderedFields(fields),\r\n                                category: StructureTypeCategory.PAGE\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ ContextAwarePageStructureService.prototype.moveElement = function (array, oldPosition, newPosition) {\r\n        if (oldPosition < 0 ||\r\n            oldPosition >= array.length ||\r\n            newPosition < 0 ||\r\n            newPosition >= array.length) {\r\n            return array;\r\n        }\r\n        array.splice(newPosition, 0, array.splice(oldPosition, 1)[0]);\r\n        return array;\r\n    };\r\n    /* @ngInject */ ContextAwarePageStructureService.prototype.getOrderedFields = function (unorderedFields) {\r\n        var index;\r\n        var _loop_1 = function (i) {\r\n            index = unorderedFields.findIndex(function (field) { return field.qualifier === PAGE_STRUCTURE_PRE_ORDER[i]; });\r\n            this_1.moveElement(unorderedFields, index, 0);\r\n        };\r\n        var this_1 = this;\r\n        for (var i = PAGE_STRUCTURE_PRE_ORDER.length - 1; i >= 0; i--) {\r\n            _loop_1(i);\r\n        }\r\n        var _loop_2 = function (i) {\r\n            index = unorderedFields.findIndex(function (field) { return field.qualifier === PAGE_STRUCTURE_POST_ORDER[i]; });\r\n            this_2.moveElement(unorderedFields, index, unorderedFields.length - 1);\r\n        };\r\n        var this_2 = this;\r\n        for (var i = 0; i < PAGE_STRUCTURE_POST_ORDER.length; i++) {\r\n            _loop_2(i);\r\n        }\r\n        return unorderedFields;\r\n    };\r\n    /* @ngInject */ ContextAwarePageStructureService.prototype.setLabelEditability = function (fields, isPrimary) {\r\n        var labelFieldIndex = fields.findIndex(function (field) { return field.qualifier === 'label'; });\r\n        // Leave the attribute uneditable if user does not have \"change\" attribute permission\r\n        // NOTE: editable field might be undefined, undefined !== false => true\r\n        if (labelFieldIndex !== -1 && fields[labelFieldIndex].editable !== false) {\r\n            fields[labelFieldIndex].editable = isPrimary;\r\n        }\r\n    };\r\n    /* @ngInject */ ContextAwarePageStructureService.prototype.getFields = function (pageTypeCode) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var structure;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.typeStructureRestService.getStructureByType(pageTypeCode)];\r\n                    case 1:\r\n                        structure = _a.sent();\r\n                        structure.push({\r\n                            cmsStructureType: 'DisplayConditionEditor',\r\n                            i18nKey: 'type.abstractpage.displayCondition.name',\r\n                            qualifier: 'displayCondition',\r\n                            editable: false\r\n                        }, {\r\n                            cmsStructureType: 'ShortString',\r\n                            i18nKey: 'se.cms.pageinfo.page.type',\r\n                            qualifier: 'typeCode',\r\n                            editable: false\r\n                        });\r\n                        return [2 /*return*/, structure];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ ContextAwarePageStructureService.prototype.removeField = function (fields, fieldQualifier) {\r\n        var index = fields.findIndex(function (field) { return field.qualifier === fieldQualifier; });\r\n        if (index !== -1) {\r\n            fields.splice(index, 1);\r\n        }\r\n    };\r\n    /* @ngInject */ ContextAwarePageStructureService = __decorate([\r\n        SeDowngradeService(),\r\n        __metadata(\"design:paramtypes\", [TypeStructureRestService,\r\n            IPageService])\r\n    ], /* @ngInject */ ContextAwarePageStructureService);\r\n    return /* @ngInject */ ContextAwarePageStructureService;\r\n}());\r\nexport { /* @ngInject */ ContextAwarePageStructureService };\r\n//# sourceMappingURL=ContextAwarePageStructureService.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/dao/TypeStructureRestService.ts"],"map":"{\"version\":3,\"file\":\"ContextAwarePageStructureService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/services/ContextAwarePageStructureService.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/services/ContextAwarePageStructureService.d.ts","writeByteOrderMark":false,"text":"import { IPageService } from 'cmscommons';\r\nimport { GenericEditorStructure } from 'smarteditcommons';\r\nimport { TypeStructureRestService } from '../dao/TypeStructureRestService';\r\nexport declare class ContextAwarePageStructureService {\r\n    private typeStructureRestService;\r\n    private pageService;\r\n    constructor(typeStructureRestService: TypeStructureRestService, pageService: IPageService);\r\n    /**\r\n     * Return the CMS page structure with some modifications for the context of creating a new page.\r\n     * The field order is modified, the created/modified time fields are removed, and the label field for variation content pages is disabled.\r\n     *\r\n     * @param pageTypeCode The page type of the new page to be created\r\n     * @param isPrimary Flag indicating if the new page will be a primary or variation page\r\n     *\r\n     * @returns A modified page structure\r\n     */\r\n    getPageStructureForNewPage(pageTypeCode: string, isPrimary: boolean): Promise<GenericEditorStructure>;\r\n    /**\r\n     * Return the CMS page structure with some modifications for the context of editing the info of an existing page.\r\n     * The field order is modified, and the label field for variation content pages is disabled.\r\n     *\r\n     * @param pageTypeCode The page type of the page to be edited\r\n     * @param pageId The ID of the existing page to be modified\r\n     *\r\n     * @returns A modified page structure\r\n     */\r\n    getPageStructureForPageEditing(pageTypeCode: string, pageId: string): Promise<GenericEditorStructure>;\r\n    /**\r\n     * Return the CMS page structure with some modifications for the context of viewing the info of an existing page.\r\n     * The field order is modified, and the label field for variation content pages is disabled.\r\n     *\r\n     * @param pageTypeCode The page type of the existing page\r\n     *\r\n     * @returns A modified page structure\r\n     */\r\n    getPageStructureForViewing(pageTypeCode: string): Promise<GenericEditorStructure>;\r\n    private moveElement;\r\n    private getOrderedFields;\r\n    private setLabelEditability;\r\n    private getFields;\r\n    private removeField;\r\n}\r\n"}}

{"code":"import { __decorate, __metadata, __param } from \"tslib\";\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject } from '@angular/core';\r\nimport { EVENT_NOTIFICATION_CHANGED, INotificationMouseLeaveDetectionService, INotificationService, SystemEventService, WindowUtils, YJQUERY_TOKEN } from 'smarteditcommons';\r\nimport { IframeManagerService } from '../../services/iframe/IframeManagerService';\r\nimport { NotificationMouseLeaveDetectionService, NotificationService } from '../../services/notifications';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"NotificationPanelComponent\", {\r\n    selector: 'se-notification-panel',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    template: \"<ng-container *ngIf=\\\"(notifications$ | async) as notifications\\\"><div class=\\\"se-notification-panel\\\" *ngIf=\\\"notifications.length > 0\\\" [ngClass]=\\\"{'is-mouseover': isMouseOver}\\\" (mouseenter)=\\\"onMouseEnter()\\\"><div><se-notification *ngFor=\\\"let notification of (notifications | seReverse)\\\" [notification]=\\\"notification\\\"></se-notification></div></div></ng-container>\"\r\n});\r\nvar NotificationPanelComponent = /** @class */ (function () {\r\n    function NotificationPanelComponent(notificationService, notificationMouseLeaveDetectionService, systemEventService, iframeManagerService, windowUtils, element, yjQuery, cd) {\r\n        this.notificationService = notificationService;\r\n        this.notificationMouseLeaveDetectionService = notificationMouseLeaveDetectionService;\r\n        this.systemEventService = systemEventService;\r\n        this.iframeManagerService = iframeManagerService;\r\n        this.windowUtils = windowUtils;\r\n        this.element = element;\r\n        this.yjQuery = yjQuery;\r\n        this.cd = cd;\r\n        this.notificationPanelBounds = null;\r\n        this.iFrameNotificationPanelBounds = null;\r\n        this.addMouseMoveEventListenerTimeout = null;\r\n    }\r\n    NotificationPanelComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.notifications$ = this.notificationService.getNotifications();\r\n        this.isMouseOver = false;\r\n        this.windowUtils.getWindow().addEventListener('resize', function () { return _this.onResize(); });\r\n        this.unRegisterNotificationChangedEventHandler = this.systemEventService.subscribe(EVENT_NOTIFICATION_CHANGED, function () { return _this.onNotificationChanged(); });\r\n    };\r\n    NotificationPanelComponent.prototype.ngAfterViewInit = function () {\r\n        this.$element = this.yjQuery(this.element.nativeElement);\r\n    };\r\n    NotificationPanelComponent.prototype.ngOnDestroy = function () {\r\n        var _this = this;\r\n        this.windowUtils.getWindow().removeEventListener('resize', function () { return _this.onResize(); });\r\n        this.notificationMouseLeaveDetectionService.stopDetection();\r\n        this.unRegisterNotificationChangedEventHandler();\r\n    };\r\n    NotificationPanelComponent.prototype.onMouseEnter = function () {\r\n        var _this = this;\r\n        this.isMouseOver = true;\r\n        this.cd.detectChanges();\r\n        if (!this.hasBounds()) {\r\n            this.calculateBounds();\r\n        }\r\n        this.addMouseMoveEventListenerTimeout =\r\n            this.addMouseMoveEventListenerTimeout ||\r\n                setTimeout(function () { return _this.addMouseMoveEventListener(); }, 10);\r\n    };\r\n    NotificationPanelComponent.prototype.onMouseLeave = function () {\r\n        this.isMouseOver = false;\r\n        this.cd.detectChanges();\r\n    };\r\n    NotificationPanelComponent.prototype.getIFrame = function () {\r\n        return this.iframeManagerService.getIframe()[0];\r\n    };\r\n    NotificationPanelComponent.prototype.getNotificationPanel = function () {\r\n        return this.$element.find('.se-notification-panel');\r\n    };\r\n    NotificationPanelComponent.prototype.calculateNotificationPanelBounds = function () {\r\n        var notificationPanel = this.getNotificationPanel();\r\n        var notificationPanelPosition = notificationPanel.position();\r\n        this.notificationPanelBounds = {\r\n            x: Math.floor(notificationPanelPosition.left),\r\n            y: Math.floor(notificationPanelPosition.top),\r\n            width: Math.floor(notificationPanel.width()),\r\n            height: Math.floor(notificationPanel.height())\r\n        };\r\n    };\r\n    NotificationPanelComponent.prototype.calculateIFrameNotificationPanelBounds = function () {\r\n        var iFrame = this.getIFrame();\r\n        if (iFrame) {\r\n            this.iFrameNotificationPanelBounds = {\r\n                x: this.notificationPanelBounds.x - iFrame.offsetLeft,\r\n                y: this.notificationPanelBounds.y - iFrame.offsetTop,\r\n                width: this.notificationPanelBounds.width,\r\n                height: this.notificationPanelBounds.height\r\n            };\r\n        }\r\n    };\r\n    NotificationPanelComponent.prototype.calculateBounds = function () {\r\n        this.calculateNotificationPanelBounds();\r\n        this.calculateIFrameNotificationPanelBounds();\r\n    };\r\n    NotificationPanelComponent.prototype.invalidateBounds = function () {\r\n        this.notificationPanelBounds = null;\r\n        this.iFrameNotificationPanelBounds = null;\r\n    };\r\n    NotificationPanelComponent.prototype.hasBounds = function () {\r\n        var hasNotificationPanelBounds = !!this.notificationPanelBounds;\r\n        var hasIFrameBounds = this.getIFrame()\r\n            ? !!this.iFrameNotificationPanelBounds\r\n            : true;\r\n        return hasNotificationPanelBounds && hasIFrameBounds;\r\n    };\r\n    NotificationPanelComponent.prototype.cancelDetection = function () {\r\n        this.invalidateBounds();\r\n        this.notificationMouseLeaveDetectionService.stopDetection();\r\n        if (this.isMouseOver) {\r\n            this.onMouseLeave();\r\n        }\r\n    };\r\n    NotificationPanelComponent.prototype.onResize = function () {\r\n        this.cancelDetection();\r\n    };\r\n    NotificationPanelComponent.prototype.onNotificationChanged = function () {\r\n        if (!this.isMouseOver) {\r\n            this.cancelDetection();\r\n        }\r\n    };\r\n    NotificationPanelComponent.prototype.addMouseMoveEventListener = function () {\r\n        var _this = this;\r\n        this.addMouseMoveEventListenerTimeout = null;\r\n        this.notificationMouseLeaveDetectionService.startDetection(this.notificationPanelBounds, this.iFrameNotificationPanelBounds, function () { return _this.onMouseLeave(); });\r\n    };\r\n    NotificationPanelComponent = __decorate([\r\n        Component({\r\n            selector: 'se-notification-panel',\r\n            changeDetection: ChangeDetectionStrategy.OnPush,\r\n            template: \"<ng-container *ngIf=\\\"(notifications$ | async) as notifications\\\"><div class=\\\"se-notification-panel\\\" *ngIf=\\\"notifications.length > 0\\\" [ngClass]=\\\"{'is-mouseover': isMouseOver}\\\" (mouseenter)=\\\"onMouseEnter()\\\"><div><se-notification *ngFor=\\\"let notification of (notifications | seReverse)\\\" [notification]=\\\"notification\\\"></se-notification></div></div></ng-container>\"\r\n        }),\r\n        __param(0, Inject(INotificationService)),\r\n        __param(1, Inject(INotificationMouseLeaveDetectionService)),\r\n        __param(6, Inject(YJQUERY_TOKEN)),\r\n        __metadata(\"design:paramtypes\", [NotificationService,\r\n            NotificationMouseLeaveDetectionService,\r\n            SystemEventService,\r\n            IframeManagerService,\r\n            WindowUtils,\r\n            ElementRef, Function, ChangeDetectorRef])\r\n    ], NotificationPanelComponent);\r\n    return NotificationPanelComponent;\r\n}());\r\nexport { NotificationPanelComponent };\r\n//# sourceMappingURL=NotificationPanelComponent.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/rxjs@6.5.4/node_modules/rxjs/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/src/services/iframe/IframeManagerService.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/src/services/notifications/index.ts"],"map":"{\"version\":3,\"file\":\"NotificationPanelComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/notifications/NotificationPanelComponent.ts\"],\"names\":[],\"mappings\":\";AACA,OAAO,EAEH,uBAAuB,EACvB,iBAAiB,EACjB,SAAS,EACT,UAAU,EACV,MAAM,EAGT,MAAM,eAAe,CAAC;AAGvB,OAAO,EACH,0BAA0B,EAG1B,uCAAuC,EACvC,oBAAoB,EACpB,kBAAkB,EAClB,WAAW,EAEX,aAAa,EAChB,MAAM,kBAAkB,CAAC;AAC1B,OAAO,EAAE,oBAAoB,EAAE,MAAM,4CAA4C,CAAC;AAClF,OAAO,EACH,sCAAsC,EACtC,mBAAmB,EACtB,MAAM,8BAA8B,CAAC;oFAI3B;IACP,QAAQ,EAAE,uBAAuB;IACjC,eAAe,EAAE,uBAAuB,CAAC,MAAM;IAC/C,QAAQ,EAAE,sXAAwW;CACrX;AACD;IAUI,oCAC0C,mBAAwC,EAEtE,sCAA8E,EAC9E,kBAAsC,EACtC,oBAA0C,EAC1C,WAAwB,EACxB,OAAmB,EACI,OAAgB,EACvC,EAAqB;QARS,wBAAmB,GAAnB,mBAAmB,CAAqB;QAEtE,2CAAsC,GAAtC,sCAAsC,CAAwC;QAC9E,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,gBAAW,GAAX,WAAW,CAAa;QACxB,YAAO,GAAP,OAAO,CAAY;QACI,YAAO,GAAP,OAAO,CAAS;QACvC,OAAE,GAAF,EAAE,CAAmB;QAfzB,4BAAuB,GAAW,IAAI,CAAC;QACvC,kCAA6B,GAAW,IAAI,CAAC;QAC7C,qCAAgC,GAAW,IAAI,CAAC;IAcrD,CAAC;IAEJ,6CAAQ,GAAR;QAAA,iBAWC;QAVG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,CAAC;QAElE,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAEzB,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,gBAAgB,CAAC,QAAQ,EAAE,cAAM,OAAA,KAAI,CAAC,QAAQ,EAAE,EAAf,CAAe,CAAC,CAAC;QAE/E,IAAI,CAAC,yCAAyC,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAC9E,0BAA0B,EAC1B,cAAM,OAAA,KAAI,CAAC,qBAAqB,EAAE,EAA5B,CAA4B,CACrC,CAAC;IACN,CAAC;IAED,oDAAe,GAAf;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;IAC7D,CAAC;IAED,gDAAW,GAAX;QAAA,iBAMC;QALG,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,mBAAmB,CAAC,QAAQ,EAAE,cAAM,OAAA,KAAI,CAAC,QAAQ,EAAE,EAAf,CAAe,CAAC,CAAC;QAElF,IAAI,CAAC,sCAAsC,CAAC,aAAa,EAAE,CAAC;QAE5D,IAAI,CAAC,yCAAyC,EAAE,CAAC;IACrD,CAAC;IAGM,iDAAY,GAAnB;QAAA,iBAYC;QAXG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QAExB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE;YACnB,IAAI,CAAC,eAAe,EAAE,CAAC;SAC1B;QAGD,IAAI,CAAC,gCAAgC;YACjC,IAAI,CAAC,gCAAgC;gBACnC,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,yBAAyB,EAAE,EAAhC,CAAgC,EAAE,EAAE,CAAwB,CAAC;IACxF,CAAC;IAGO,iDAAY,GAApB;QACI,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;IAC5B,CAAC;IAEO,8CAAS,GAAjB;QACI,OAAO,IAAI,CAAC,oBAAoB,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;IACpD,CAAC;IAEO,yDAAoB,GAA5B;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;IACxD,CAAC;IAEO,qEAAgC,GAAxC;QACI,IAAM,iBAAiB,GAAoB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QACvE,IAAM,yBAAyB,GAAuB,iBAAiB,CAAC,QAAQ,EAAE,CAAC;QAEnF,IAAI,CAAC,uBAAuB,GAAG;YAC3B,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,yBAAyB,CAAC,IAAI,CAAC;YAC7C,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,yBAAyB,CAAC,GAAG,CAAC;YAC5C,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;YAC5C,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC;SACjD,CAAC;IACN,CAAC;IAEO,2EAAsC,GAA9C;QACI,IAAM,MAAM,GAAgB,IAAI,CAAC,SAAS,EAAE,CAAC;QAE7C,IAAI,MAAM,EAAE;YACR,IAAI,CAAC,6BAA6B,GAAG;gBACjC,CAAC,EAAE,IAAI,CAAC,uBAAuB,CAAC,CAAC,GAAG,MAAM,CAAC,UAAU;gBACrD,CAAC,EAAE,IAAI,CAAC,uBAAuB,CAAC,CAAC,GAAG,MAAM,CAAC,SAAS;gBACpD,KAAK,EAAE,IAAI,CAAC,uBAAuB,CAAC,KAAK;gBACzC,MAAM,EAAE,IAAI,CAAC,uBAAuB,CAAC,MAAM;aAC9C,CAAC;SACL;IACL,CAAC;IAEO,oDAAe,GAAvB;QACI,IAAI,CAAC,gCAAgC,EAAE,CAAC;QACxC,IAAI,CAAC,sCAAsC,EAAE,CAAC;IAClD,CAAC;IAEO,qDAAgB,GAAxB;QACI,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;QACpC,IAAI,CAAC,6BAA6B,GAAG,IAAI,CAAC;IAC9C,CAAC;IAEO,8CAAS,GAAjB;QACI,IAAM,0BAA0B,GAAG,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC;QAClE,IAAM,eAAe,GAAY,IAAI,CAAC,SAAS,EAAE;YAC7C,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,6BAA6B;YACtC,CAAC,CAAC,IAAI,CAAC;QAEX,OAAO,0BAA0B,IAAI,eAAe,CAAC;IACzD,CAAC;IAGO,oDAAe,GAAvB;QACI,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,sCAAsC,CAAC,aAAa,EAAE,CAAC;QAE5D,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;IACL,CAAC;IAEO,6CAAQ,GAAhB;QACI,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAGO,0DAAqB,GAA7B;QAGI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACnB,IAAI,CAAC,eAAe,EAAE,CAAC;SAC1B;IACL,CAAC;IAEO,8DAAyB,GAAjC;QAAA,iBAQC;QAPG,IAAI,CAAC,gCAAgC,GAAG,IAAI,CAAC;QAE7C,IAAI,CAAC,sCAAsC,CAAC,cAAc,CACtD,IAAI,CAAC,uBAAuB,EAC5B,IAAI,CAAC,6BAA6B,EAClC,cAAM,OAAA,KAAI,CAAC,YAAY,EAAE,EAAnB,CAAmB,CAC5B,CAAC;IACN,CAAC;IAvJQ,0BAA0B;QALtC,SAAS,CAAC;YACP,QAAQ,EAAE,uBAAuB;YACjC,eAAe,EAAE,uBAAuB,CAAC,MAAM;YAC/C,QAAQ,EAAE,sXAAwW;SACrX,CAAC;QAYO,WAAA,MAAM,CAAC,oBAAoB,CAAC,CAAA;QAC5B,WAAA,MAAM,CAAC,uCAAuC,CAAC,CAAA;QAM/C,WAAA,MAAM,CAAC,aAAa,CAAC,CAAA;yCAPqC,mBAAmB;YAE9B,sCAAsC;YAC1D,kBAAkB;YAChB,oBAAoB;YAC7B,WAAW;YACf,UAAU,YAEf,iBAAiB;OAnBxB,0BAA0B,CAwJtC;IAAD,iCAAC;CAAA,AAxJD,IAwJC;SAxJY,0BAA0B\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/components/notifications/NotificationPanelComponent.d.ts","writeByteOrderMark":false,"text":"import { AfterViewInit, ChangeDetectorRef, ElementRef, OnDestroy, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { INotificationConfiguration, SystemEventService, WindowUtils, YJQuery } from 'smarteditcommons';\r\nimport { IframeManagerService } from '../../services/iframe/IframeManagerService';\r\nimport { NotificationMouseLeaveDetectionService, NotificationService } from '../../services/notifications';\r\nexport declare class NotificationPanelComponent implements OnInit, AfterViewInit, OnDestroy {\r\n    private notificationService;\r\n    private notificationMouseLeaveDetectionService;\r\n    private systemEventService;\r\n    private iframeManagerService;\r\n    private windowUtils;\r\n    private element;\r\n    private yjQuery;\r\n    private cd;\r\n    isMouseOver: boolean;\r\n    notifications$: Observable<INotificationConfiguration[]>;\r\n    private notificationPanelBounds;\r\n    private iFrameNotificationPanelBounds;\r\n    private addMouseMoveEventListenerTimeout;\r\n    private unRegisterNotificationChangedEventHandler;\r\n    private $element;\r\n    constructor(notificationService: NotificationService, notificationMouseLeaveDetectionService: NotificationMouseLeaveDetectionService, systemEventService: SystemEventService, iframeManagerService: IframeManagerService, windowUtils: WindowUtils, element: ElementRef, yjQuery: YJQuery, cd: ChangeDetectorRef);\r\n    ngOnInit(): void;\r\n    ngAfterViewInit(): void;\r\n    ngOnDestroy(): void;\r\n    onMouseEnter(): void;\r\n    private onMouseLeave;\r\n    private getIFrame;\r\n    private getNotificationPanel;\r\n    private calculateNotificationPanelBounds;\r\n    private calculateIFrameNotificationPanelBounds;\r\n    private calculateBounds;\r\n    private invalidateBounds;\r\n    private hasBounds;\r\n    private cancelDetection;\r\n    private onResize;\r\n    private onNotificationChanged;\r\n    private addMouseMoveEventListener;\r\n}\r\n"}}

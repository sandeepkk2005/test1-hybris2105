{"code":"import { __awaiter, __decorate, __generator, __metadata } from \"tslib\";\r\nimport { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { IPageService, PAGE_CONTEXT_CATALOG, PAGE_CONTEXT_CATALOG_VERSION } from 'cmscommons';\r\nimport { isEmpty } from 'lodash';\r\nimport { ICatalogService, PAGE_CONTEXT_SITE_ID, SeDowngradeComponent, VALIDATION_MESSAGE_TYPES } from 'smarteditcommons';\r\nimport { CatalogVersionRestService } from '../../../../../dao';\r\nimport { PageFacade } from '../../../../../facades';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"SelectTargetCatalogVersionComponent\", {\r\n    selector: 'se-select-target-catalog-version',\r\n    template: \"<div class=\\\"target-catalog-version-selector-wrapper form-group\\\"><label for=\\\"target-catalog-version-selector-id\\\" class=\\\"se-control-label\\\" translate=\\\"se.cms.clonepagewizard.options.targetcatalogversion.label\\\"></label><se-select *ngIf=\\\"!!catalogVersions.length\\\" id=\\\"se-catalog-version-selector-dropdown\\\" [(model)]=\\\"selectedCatalogVersion\\\" [fetchStrategy]=\\\"catalogVersionSelectorFetchStrategy\\\" [onChange]=\\\"onSelectionChange\\\" [searchEnabled]=\\\"false\\\" (getApi)=\\\"setSelectApi($event)\\\"></se-select><div *ngIf=\\\"catalogVersionContainsPageWithSameLabel\\\"><span class=\\\"help-block\\\" translate=\\\"se.cms.clonepagewizard.options.targetcatalogversion.label.exists.message\\\"></span></div><div *ngIf=\\\"pageAlreadyExists()\\\"><span class=\\\"help-block\\\" translate=\\\"se.cms.clonepagewizard.options.targetcatalogversion.pagetype.exists.message\\\"></span></div></div>\",\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n});\r\nvar /* @ngInject */ SelectTargetCatalogVersionComponent = /** @class */ (function () {\r\n    function /* @ngInject */ SelectTargetCatalogVersionComponent(pageFacade, catalogVersionRestService, catalogService, pageService, cdr) {\r\n        this.pageFacade = pageFacade;\r\n        this.catalogVersionRestService = catalogVersionRestService;\r\n        this.catalogService = catalogService;\r\n        this.pageService = pageService;\r\n        this.cdr = cdr;\r\n        this.catalogVersions = [];\r\n        this.selectedCatalogVersion = null;\r\n        this.catalogVersionContainsPageWithSameLabel = false;\r\n        this.catalogVersionContainsPageWithSameTypeCode = false;\r\n        this.onTargetCatalogVersionSelected = new EventEmitter();\r\n    }\r\n    /* @ngInject */ SelectTargetCatalogVersionComponent.prototype.ngOnInit = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.catalogVersionSelectorFetchStrategy = {\r\n                            fetchAll: function () {\r\n                                return Promise.resolve((_this.catalogVersions || []).map(function (catalogVersion) { return ({\r\n                                    id: catalogVersion.uuid,\r\n                                    label: catalogVersion.name\r\n                                }); }));\r\n                            }\r\n                        };\r\n                        this.onSelectionChange = function () { return _this.selectionChangeHandler(); };\r\n                        return [4 /*yield*/, this.setupCatalogVersions()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        this.cdr.detectChanges();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ SelectTargetCatalogVersionComponent.prototype.setSelectApi = function (api) {\r\n        this.selectApi = api;\r\n    };\r\n    /* @ngInject */ SelectTargetCatalogVersionComponent.prototype.pageAlreadyExists = function () {\r\n        return (this.catalogVersionContainsPageWithSameTypeCode &&\r\n            !this.catalogVersionContainsPageWithSameLabel);\r\n    };\r\n    /* @ngInject */ SelectTargetCatalogVersionComponent.prototype.setupCatalogVersions = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var targets, catalogVersions, uuid_1, currentCatalogVersion;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.catalogVersionRestService.getCloneableTargets(this.uriContext)];\r\n                    case 1:\r\n                        targets = _a.sent();\r\n                        catalogVersions = targets.versions;\r\n                        if (!!isEmpty(catalogVersions)) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, this.catalogService.getCatalogVersionUUid(this.uriContext)];\r\n                    case 2:\r\n                        uuid_1 = _a.sent();\r\n                        currentCatalogVersion = catalogVersions.find(function (catalogVersion) { return catalogVersion.uuid === uuid_1; });\r\n                        if (currentCatalogVersion) {\r\n                            this.selectedCatalogVersion = currentCatalogVersion.uuid;\r\n                        }\r\n                        else {\r\n                            this.selectedCatalogVersion = catalogVersions[0].uuid;\r\n                        }\r\n                        this.catalogVersions = catalogVersions;\r\n                        _a.label = 3;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ SelectTargetCatalogVersionComponent.prototype.selectionChangeHandler = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var catalogVersion, pageExists;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.selectedCatalogVersion) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, this.catalogService.getCatalogVersionByUuid(this.selectedCatalogVersion)];\r\n                    case 1:\r\n                        catalogVersion = _a.sent();\r\n                        return [4 /*yield*/, this.determinePageExists(catalogVersion)];\r\n                    case 2:\r\n                        pageExists = _a.sent();\r\n                        this.onTargetCatalogVersionSelected.emit(catalogVersion);\r\n                        this.catalogVersionContainsPageWithSameLabel = pageExists;\r\n                        this.catalogVersionContainsPageWithSameTypeCode = pageExists;\r\n                        this.cdr.detectChanges();\r\n                        this.updateSelectValidationState();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ SelectTargetCatalogVersionComponent.prototype.determinePageExists = function (catalogVersion) {\r\n        if (this.pageTypeCode === 'ContentPage') {\r\n            return this.determineContentPageWithLabelExists(catalogVersion);\r\n        }\r\n        return this.determinePrimaryPageForLabelExists(catalogVersion);\r\n    };\r\n    /* @ngInject */ SelectTargetCatalogVersionComponent.prototype.determineContentPageWithLabelExists = function (catalogVersion) {\r\n        return this.pageFacade.contentPageWithLabelExists(this.pageLabel, catalogVersion.catalogId, catalogVersion.version);\r\n    };\r\n    /* @ngInject */ SelectTargetCatalogVersionComponent.prototype.determinePrimaryPageForLabelExists = function (catalogVersion) {\r\n        var _a;\r\n        var uriContextForSelectedCatalogVersion = (_a = {},\r\n            _a[PAGE_CONTEXT_SITE_ID] = catalogVersion.siteId,\r\n            _a[PAGE_CONTEXT_CATALOG] = catalogVersion.catalogId,\r\n            _a[PAGE_CONTEXT_CATALOG_VERSION] = catalogVersion.version,\r\n            _a);\r\n        return this.pageService.primaryPageForPageTypeExists(this.pageTypeCode, uriContextForSelectedCatalogVersion);\r\n    };\r\n    /* @ngInject */ SelectTargetCatalogVersionComponent.prototype.updateSelectValidationState = function () {\r\n        if (!this.selectApi) {\r\n            return;\r\n        }\r\n        if (this.catalogVersionContainsPageWithSameLabel ||\r\n            this.catalogVersionContainsPageWithSameTypeCode) {\r\n            this.selectApi.setValidationState(VALIDATION_MESSAGE_TYPES.WARNING);\r\n        }\r\n        else {\r\n            this.selectApi.resetValidationState();\r\n        }\r\n    };\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], /* @ngInject */ SelectTargetCatalogVersionComponent.prototype, \"uriContext\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], /* @ngInject */ SelectTargetCatalogVersionComponent.prototype, \"pageTypeCode\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], /* @ngInject */ SelectTargetCatalogVersionComponent.prototype, \"pageLabel\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], /* @ngInject */ SelectTargetCatalogVersionComponent.prototype, \"onTargetCatalogVersionSelected\", void 0);\r\n    /* @ngInject */ SelectTargetCatalogVersionComponent = __decorate([\r\n        SeDowngradeComponent(),\r\n        Component({\r\n            selector: 'se-select-target-catalog-version',\r\n            template: \"<div class=\\\"target-catalog-version-selector-wrapper form-group\\\"><label for=\\\"target-catalog-version-selector-id\\\" class=\\\"se-control-label\\\" translate=\\\"se.cms.clonepagewizard.options.targetcatalogversion.label\\\"></label><se-select *ngIf=\\\"!!catalogVersions.length\\\" id=\\\"se-catalog-version-selector-dropdown\\\" [(model)]=\\\"selectedCatalogVersion\\\" [fetchStrategy]=\\\"catalogVersionSelectorFetchStrategy\\\" [onChange]=\\\"onSelectionChange\\\" [searchEnabled]=\\\"false\\\" (getApi)=\\\"setSelectApi($event)\\\"></se-select><div *ngIf=\\\"catalogVersionContainsPageWithSameLabel\\\"><span class=\\\"help-block\\\" translate=\\\"se.cms.clonepagewizard.options.targetcatalogversion.label.exists.message\\\"></span></div><div *ngIf=\\\"pageAlreadyExists()\\\"><span class=\\\"help-block\\\" translate=\\\"se.cms.clonepagewizard.options.targetcatalogversion.pagetype.exists.message\\\"></span></div></div>\",\r\n            changeDetection: ChangeDetectionStrategy.OnPush\r\n        }),\r\n        __metadata(\"design:paramtypes\", [PageFacade,\r\n            CatalogVersionRestService,\r\n            ICatalogService,\r\n            IPageService,\r\n            ChangeDetectorRef])\r\n    ], /* @ngInject */ SelectTargetCatalogVersionComponent);\r\n    return /* @ngInject */ SelectTargetCatalogVersionComponent;\r\n}());\r\nexport { /* @ngInject */ SelectTargetCatalogVersionComponent };\r\n//# sourceMappingURL=SelectTargetCatalogVersionComponent.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types/lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/dao/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/facades/index.ts"],"map":"{\"version\":3,\"file\":\"SelectTargetCatalogVersionComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../src/components/pages/addPageWizard/components/selectTargetCatalogVersion/SelectTargetCatalogVersionComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/components/pages/addPageWizard/components/selectTargetCatalogVersion/SelectTargetCatalogVersionComponent.d.ts","writeByteOrderMark":false,"text":"import { OnInit, EventEmitter, ChangeDetectorRef } from '@angular/core';\r\nimport { IPageService } from 'cmscommons';\r\nimport { FetchStrategy, ICatalogService, ICatalogVersion, IUriContext, SelectApi } from 'smarteditcommons';\r\nimport { CatalogVersionRestService } from '../../../../../dao';\r\nimport { PageFacade } from '../../../../../facades';\r\nexport declare class SelectTargetCatalogVersionComponent implements OnInit {\r\n    private pageFacade;\r\n    private catalogVersionRestService;\r\n    private catalogService;\r\n    private pageService;\r\n    private cdr;\r\n    uriContext: IUriContext;\r\n    pageTypeCode: string;\r\n    pageLabel: string;\r\n    onTargetCatalogVersionSelected: EventEmitter<any>;\r\n    catalogVersions: ICatalogVersion[];\r\n    selectedCatalogVersion: string;\r\n    catalogVersionContainsPageWithSameLabel: boolean;\r\n    catalogVersionSelectorFetchStrategy: FetchStrategy;\r\n    onSelectionChange: () => Promise<void>;\r\n    selectApi: SelectApi;\r\n    private catalogVersionContainsPageWithSameTypeCode;\r\n    constructor(pageFacade: PageFacade, catalogVersionRestService: CatalogVersionRestService, catalogService: ICatalogService, pageService: IPageService, cdr: ChangeDetectorRef);\r\n    ngOnInit(): Promise<void>;\r\n    setSelectApi(api: SelectApi): void;\r\n    pageAlreadyExists(): boolean;\r\n    private setupCatalogVersions;\r\n    private selectionChangeHandler;\r\n    private determinePageExists;\r\n    private determineContentPageWithLabelExists;\r\n    private determinePrimaryPageForLabelExists;\r\n    private updateSelectValidationState;\r\n}\r\n"}}

{"code":"import { __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { Directive, ElementRef, Renderer2 } from '@angular/core';\r\n/**\r\n * Directive for marking list item for 'ListKeyboardControlDirective' to allow for navigating with keyboard.\r\n */\r\nvar ListItemKeyboardControlDirective = /** @class */ (function () {\r\n    function ListItemKeyboardControlDirective(hostElement, renderer) {\r\n        this.hostElement = hostElement;\r\n        this.renderer = renderer;\r\n        /** @internal */\r\n        this.activeClassName = 'is-active';\r\n    }\r\n    /** @internal */\r\n    ListItemKeyboardControlDirective.prototype.ngOnInit = function () {\r\n        this.setTabIndex();\r\n    };\r\n    ListItemKeyboardControlDirective.prototype.getElement = function () {\r\n        return this.hostElement.nativeElement;\r\n    };\r\n    ListItemKeyboardControlDirective.prototype.setActive = function () {\r\n        var elm = this.getElement();\r\n        this.renderer.addClass(elm, this.activeClassName);\r\n        elm.scrollIntoView({ block: 'nearest' });\r\n    };\r\n    ListItemKeyboardControlDirective.prototype.setInactive = function () {\r\n        this.renderer.removeClass(this.getElement(), this.activeClassName);\r\n    };\r\n    /** @internal */\r\n    ListItemKeyboardControlDirective.prototype.setTabIndex = function () {\r\n        this.renderer.setAttribute(this.getElement(), 'tabindex', '-1');\r\n    };\r\n    ListItemKeyboardControlDirective = __decorate([\r\n        Directive({\r\n            selector: '[suListItemKeyboardControl]'\r\n        }),\r\n        __metadata(\"design:paramtypes\", [ElementRef, Renderer2])\r\n    ], ListItemKeyboardControlDirective);\r\n    return ListItemKeyboardControlDirective;\r\n}());\r\nexport { ListItemKeyboardControlDirective };\r\n//# sourceMappingURL=list-item-keyboard-control.directive.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts"],"map":"{\"version\":3,\"file\":\"list-item-keyboard-control.directive.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/directives/list-keyboard-control/list-item-keyboard-control.directive.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAAE,SAAS,EAAE,UAAU,EAAU,SAAS,EAAE,MAAM,eAAe,CAAC;AAEzE;;GAEG;AAIH;IAII,0CAAoB,WAAuB,EAAU,QAAmB;QAApD,gBAAW,GAAX,WAAW,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAW;QAHxE,gBAAgB;QACC,oBAAe,GAAG,WAAW,CAAC;IAE4B,CAAC;IAE5E,gBAAgB;IAChB,mDAAQ,GAAR;QACI,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAEM,qDAAU,GAAjB;QACI,OAAO,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;IAC1C,CAAC;IAEM,oDAAS,GAAhB;QACI,IAAM,GAAG,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAC9B,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QAElD,GAAG,CAAC,cAAc,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC;IAC7C,CAAC;IAEM,sDAAW,GAAlB;QACI,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;IACvE,CAAC;IAED,gBAAgB;IACR,sDAAW,GAAnB;QACI,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;IACpE,CAAC;IA7BQ,gCAAgC;QAH5C,SAAS,CAAC;YACP,QAAQ,EAAE,6BAA6B;SAC1C,CAAC;yCAKmC,UAAU,EAAoB,SAAS;OAJ/D,gCAAgC,CA8B5C;IAAD,uCAAC;CAAA,AA9BD,IA8BC;SA9BY,gCAAgC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/directives/list-keyboard-control/list-item-keyboard-control.directive.d.ts","writeByteOrderMark":false,"text":"import { ElementRef, OnInit, Renderer2 } from '@angular/core';\r\n/**\r\n * Directive for marking list item for 'ListKeyboardControlDirective' to allow for navigating with keyboard.\r\n */\r\nexport declare class ListItemKeyboardControlDirective implements OnInit {\r\n    private hostElement;\r\n    private renderer;\r\n    /** @internal */\r\n    private readonly activeClassName;\r\n    constructor(hostElement: ElementRef, renderer: Renderer2);\r\n    /** @internal */\r\n    ngOnInit(): void;\r\n    getElement(): HTMLElement;\r\n    setActive(): void;\r\n    setInactive(): void;\r\n    /** @internal */\r\n    private setTabIndex;\r\n}\r\n"}}

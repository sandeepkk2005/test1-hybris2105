{"code":"import { __awaiter, __decorate, __generator, __metadata } from \"tslib\";\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { IPageService } from 'cmscommons';\r\nimport { isEqual } from 'lodash';\r\nimport { take } from 'rxjs/operators';\r\nimport { IUrlService, L10nPipe, LogService, SeDowngradeComponent } from 'smarteditcommons';\r\nimport { DisplayConditionsFacade } from '../../../../../facades';\r\nimport { HomepageService, PageDisplayConditionsService } from '../../../../../services';\r\nvar CatalogHomepageDetailsStatus;\r\n(function (CatalogHomepageDetailsStatus) {\r\n    CatalogHomepageDetailsStatus[\"PENDING\"] = \"PENDING\";\r\n    CatalogHomepageDetailsStatus[\"NO_HOMEPAGE\"] = \"NO_HOMEPAGE\";\r\n    CatalogHomepageDetailsStatus[\"LOCAL\"] = \"LOCAL\";\r\n    CatalogHomepageDetailsStatus[\"OLD\"] = \"OLD\";\r\n    CatalogHomepageDetailsStatus[\"PARENT\"] = \"PARENT\";\r\n})(CatalogHomepageDetailsStatus || (CatalogHomepageDetailsStatus = {}));\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"NewPageDisplayConditionComponent\", {\r\n    selector: 'se-new-page-display-condition',\r\n    template: \"<div *ngIf=\\\"isReady\\\"><div class=\\\"form-group\\\"><label for=\\\"page-condition-selector-id\\\" class=\\\"se-control-label\\\" translate=\\\"se.cms.page.condition.selection.label\\\"></label><se-select id=\\\"page-condition-selector-id\\\" [model]=\\\"conditionSelected.label\\\" (modelChange)=\\\"onConditionChange($event)\\\" [fetchStrategy]=\\\"conditionSelectorFetchStrategy\\\" [onChange]=\\\"onDataChange\\\" [searchEnabled]=\\\"false\\\"></se-select><span class=\\\"se-form-help-message\\\"><span [translate]=\\\"conditionSelected.description\\\"></span></span></div><div *ngIf=\\\"showPrimarySelector()\\\" class=\\\"form-group\\\"><label for=\\\"page-condition-primary-selector-id\\\" class=\\\"se-control-label\\\" translate=\\\"se.cms.page.condition.primary.association.label\\\"></label><se-select id=\\\"page-condition-primary-selector-id\\\" [model]=\\\"primarySelectedModel\\\" (modelChange)=\\\"primarySelectedModelOnChange($event)\\\" [fetchStrategy]=\\\"primaryPageChoicesFetchStrategy\\\" [onChange]=\\\"onDataChange\\\"></se-select><span *ngIf=\\\"primarySelected?.label\\\" class=\\\"se-form-help-message\\\"><span>{{ 'se.cms.page.label.label' | translate }}: {{ primarySelected.label }}</span></span></div><div *ngIf=\\\"showHomePageWidget()\\\"><div class=\\\"fd-form__item\\\"><input type=\\\"checkbox\\\" id=\\\"set-homepage-checkbox\\\" class=\\\"se-component-item--details se-component-homepage__checkbox-input fd-form__control\\\" name=\\\"clone-on-drop\\\" (ngModelChange)=\\\"onHomePageChange($event)\\\" [ngModel]=\\\"homepage\\\"/> <label class=\\\"se-control-label se-component-homepage--label fd-form__label\\\" for=\\\"set-homepage-checkbox\\\" translate=\\\"se.cms.display.conditions.homepage.set\\\"></label></div><label class=\\\"se-control-label se-component-homepage--label\\\" for=\\\"set-homepage-checkbox\\\" *ngIf=\\\"showReplaceLabel\\\">{{ \\\"se.cms.display.conditions.homepage.replace\\\" | translate: { currentHomepage: currentHomePageName } }}</label></div></div>\",\r\n    styles: [\".se-component-homepage__checkbox-input{margin:0 4px 0 0;outline:0;box-shadow:none}\"],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [L10nPipe]\r\n});\r\nvar /* @ngInject */ NewPageDisplayConditionComponent = /** @class */ (function () {\r\n    function /* @ngInject */ NewPageDisplayConditionComponent(urlService, homepageService, displayConditionsFacade, translateService, pageService, logService, pageDisplayConditions, l10n, cdr) {\r\n        this.urlService = urlService;\r\n        this.homepageService = homepageService;\r\n        this.displayConditionsFacade = displayConditionsFacade;\r\n        this.translateService = translateService;\r\n        this.pageService = pageService;\r\n        this.logService = logService;\r\n        this.pageDisplayConditions = pageDisplayConditions;\r\n        this.l10n = l10n;\r\n        this.cdr = cdr;\r\n        this.conditions = null;\r\n        this.homepage = false;\r\n        this.homepageDetails = {\r\n            status: CatalogHomepageDetailsStatus.PENDING\r\n        };\r\n        this.isReady = false;\r\n        this.primarySelected = null;\r\n        this.primarySelectedModel = null;\r\n        this.showReplaceLabel = false;\r\n    }\r\n    /* @ngInject */ NewPageDisplayConditionComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.onDataChange = function () { return _this.dataChanged(); };\r\n        this.conditionSelected = {};\r\n        this.conditionSelectorFetchStrategy = {\r\n            fetchAll: function () {\r\n                return Promise.resolve((_this.conditions || []).map(function (condition) { return ({\r\n                    id: condition.label,\r\n                    label: condition.label\r\n                }); }));\r\n            }\r\n        };\r\n        this.initialConditionSelectedKey =\r\n            this.initialConditionSelectedKey || 'page.displaycondition.primary';\r\n        this.primaryPageChoicesFetchStrategy = {\r\n            fetchEntity: function () {\r\n                return Promise.resolve({\r\n                    id: _this.primarySelected.uid,\r\n                    label: _this.primarySelected.name || _this.primarySelected.label\r\n                });\r\n            },\r\n            fetchPage: function (search, pageSize, currentPage) {\r\n                return _this.displayConditionsFacade.getPrimaryPagesForPageType(_this.pageTypeCode, _this.uriContext, {\r\n                    search: search,\r\n                    pageSize: pageSize,\r\n                    currentPage: currentPage\r\n                });\r\n            }\r\n        };\r\n    };\r\n    /* @ngInject */ NewPageDisplayConditionComponent.prototype.ngOnChanges = function (changes) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var hasPageTypeCodeChanged, hasTargetCatalogVersionChanged, context, homepageDetails;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        hasPageTypeCodeChanged = !!changes.pageTypeCode &&\r\n                            changes.pageTypeCode.currentValue != changes.pageTypeCode.previousValue;\r\n                        hasTargetCatalogVersionChanged = !!changes.targetCatalogVersion &&\r\n                            !isEqual(changes.targetCatalogVersion.currentValue, changes.targetCatalogVersion.previousValue);\r\n                        if (!(hasPageTypeCodeChanged || hasTargetCatalogVersionChanged)) return [3 /*break*/, 6];\r\n                        if (!(!this.targetCatalogVersion ||\r\n                            this.isUriContextEqualToCatalogVersion(this.uriContext, this.targetCatalogVersion))) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.getSelectedPrimaryPageAndDisplayCondition()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        this.getOnlyPrimaryDisplayCondition();\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        context = this.targetCatalogVersion === undefined\r\n                            ? this.uriContext\r\n                            : this.urlService.buildUriContext(this.targetCatalogVersion.siteId, this.targetCatalogVersion.catalogId, this.targetCatalogVersion.version);\r\n                        return [4 /*yield*/, this.homepageService.getHomepageDetailsForContext(context)];\r\n                    case 4:\r\n                        homepageDetails = _a.sent();\r\n                        this.homepageDetails = homepageDetails;\r\n                        return [4 /*yield*/, this.updateHomepageUiProperties()];\r\n                    case 5:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 6: return [4 /*yield*/, this.updateHomepageUiProperties()];\r\n                    case 7:\r\n                        _a.sent();\r\n                        _a.label = 8;\r\n                    case 8:\r\n                        this.cdr.detectChanges();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ NewPageDisplayConditionComponent.prototype.showPrimarySelector = function () {\r\n        return !(this.conditionSelected && this.conditionSelected.isPrimary);\r\n    };\r\n    /* @ngInject */ NewPageDisplayConditionComponent.prototype.onConditionChange = function (selectedConditionLabel) {\r\n        this.conditionSelected = this.conditions.find(function (condition) { return condition.label === selectedConditionLabel; });\r\n    };\r\n    /* @ngInject */ NewPageDisplayConditionComponent.prototype.onHomePageChange = function (isHomepage) {\r\n        this.homepage = isHomepage;\r\n        this.dataChanged();\r\n    };\r\n    /* @ngInject */ NewPageDisplayConditionComponent.prototype.showHomePageWidget = function () {\r\n        return this.isPrimaryContentPage();\r\n    };\r\n    /* @ngInject */ NewPageDisplayConditionComponent.prototype.primarySelectedModelOnChange = function (uid) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var page;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.pageService.getPageById(uid)];\r\n                    case 1:\r\n                        page = _a.sent();\r\n                        this.setPrimarySelected(page);\r\n                        this.dataChanged();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ NewPageDisplayConditionComponent.prototype.dataChanged = function () {\r\n        if (!this.isPrimaryContentPage()) {\r\n            this.homepage = undefined;\r\n        }\r\n        this.updateHomepageUiProperties();\r\n        if (this.resultFn) {\r\n            this.resultFn(this.getResults());\r\n        }\r\n    };\r\n    /* @ngInject */ NewPageDisplayConditionComponent.prototype.isPrimaryContentPage = function () {\r\n        var _a;\r\n        return ((_a = this.conditionSelected) === null || _a === void 0 ? void 0 : _a.isPrimary) && this.pageTypeCode === 'ContentPage';\r\n    };\r\n    /* @ngInject */ NewPageDisplayConditionComponent.prototype.updateHomepageUiProperties = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, _b, parentCatalogName, targetCatalogName;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        if (!this.homepage) return [3 /*break*/, 7];\r\n                        _a = this.homepageDetails.status;\r\n                        switch (_a) {\r\n                            case CatalogHomepageDetailsStatus.NO_HOMEPAGE: return [3 /*break*/, 1];\r\n                            case CatalogHomepageDetailsStatus.PARENT: return [3 /*break*/, 2];\r\n                            case CatalogHomepageDetailsStatus.LOCAL: return [3 /*break*/, 4];\r\n                        }\r\n                        return [3 /*break*/, 5];\r\n                    case 1:\r\n                        this.homepageService.sendEventHideReplaceParentHomePageInfo();\r\n                        this.showReplaceLabel = false;\r\n                        return [3 /*break*/, 6];\r\n                    case 2: return [4 /*yield*/, this.getTranslatedNames(this.homepageDetails.parentCatalogName, this.homepageDetails.targetCatalogName)];\r\n                    case 3:\r\n                        _b = _c.sent(), parentCatalogName = _b[0], targetCatalogName = _b[1];\r\n                        this.homepageService.sendEventShowReplaceParentHomePageInfo({\r\n                            description: this.translateService.instant('se.cms.display.conditions.homepage.replace.parent.info.header', {\r\n                                parentCatalogName: parentCatalogName,\r\n                                parentCatalogVersion: this.homepageDetails.parentCatalogVersion,\r\n                                targetCatalogName: targetCatalogName,\r\n                                targetCatalogVersion: this.homepageDetails.targetCatalogVersion\r\n                            })\r\n                        });\r\n                        this.showReplaceLabel = false;\r\n                        return [3 /*break*/, 6];\r\n                    case 4:\r\n                        this.homepageService.sendEventHideReplaceParentHomePageInfo();\r\n                        this.currentHomePageName = this.homepageDetails.currentHomepageName;\r\n                        this.showReplaceLabel = true;\r\n                        return [3 /*break*/, 6];\r\n                    case 5: return [3 /*break*/, 6];\r\n                    case 6: return [3 /*break*/, 8];\r\n                    case 7:\r\n                        this.homepageService.sendEventHideReplaceParentHomePageInfo();\r\n                        this.showReplaceLabel = false;\r\n                        _c.label = 8;\r\n                    case 8: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ NewPageDisplayConditionComponent.prototype.getTranslatedNames = function (name, secondName) {\r\n        return Promise.all([\r\n            this.l10n.transform(name).pipe(take(1)).toPromise(),\r\n            this.l10n.transform(secondName).pipe(take(1)).toPromise()\r\n        ]);\r\n    };\r\n    /* @ngInject */ NewPageDisplayConditionComponent.prototype.getResults = function () {\r\n        var result = {\r\n            homepage: this.homepage,\r\n            isPrimary: this.conditionSelected && this.conditionSelected.isPrimary,\r\n            primaryPage: null\r\n        };\r\n        if (this.conditionSelected && !this.conditionSelected.isPrimary) {\r\n            result.primaryPage = this.primarySelected;\r\n        }\r\n        return result;\r\n    };\r\n    /* @ngInject */ NewPageDisplayConditionComponent.prototype.getSelectedPrimaryPageAndDisplayCondition = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var page, primaryPage, error_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.pageTypeCode) return [3 /*break*/, 8];\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 5, 6, 7]);\r\n                        if (!this.pageUuid) return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, this.pageService.getPageByUuid(this.pageUuid)];\r\n                    case 2:\r\n                        page = _a.sent();\r\n                        return [4 /*yield*/, (!page.defaultPage\r\n                                ? this.pageService.getPrimaryPage(page.uid)\r\n                                : page)];\r\n                    case 3:\r\n                        primaryPage = _a.sent();\r\n                        this.setPrimarySelected(primaryPage);\r\n                        _a.label = 4;\r\n                    case 4: return [3 /*break*/, 7];\r\n                    case 5:\r\n                        error_1 = _a.sent();\r\n                        this.logService.error(error_1);\r\n                        return [3 /*break*/, 7];\r\n                    case 6:\r\n                        this.getAllPrimaryDisplayCondition();\r\n                        return [7 /*endfinally*/];\r\n                    case 7: return [3 /*break*/, 9];\r\n                    case 8:\r\n                        this.getAllPrimaryDisplayCondition();\r\n                        _a.label = 9;\r\n                    case 9: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ NewPageDisplayConditionComponent.prototype.getAllPrimaryDisplayCondition = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response, error_2;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, 3, 4]);\r\n                        return [4 /*yield*/, this.pageDisplayConditions.getNewPageConditions(this.pageTypeCode, this.uriContext)];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        if (!response.length) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        this.conditions = response;\r\n                        this.conditionSelected = this.conditions[0];\r\n                        if (this.conditions.length > 1) {\r\n                            this.conditionSelected = this.conditions.find(function (condition) { return condition.label === _this.initialConditionSelectedKey; });\r\n                        }\r\n                        this.isReady = true;\r\n                        return [3 /*break*/, 4];\r\n                    case 2:\r\n                        error_2 = _a.sent();\r\n                        this.logService.error(error_2);\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        if (this.targetCatalogVersion &&\r\n                            !this.isUriContextEqualToCatalogVersion(this.uriContext, this.targetCatalogVersion)) {\r\n                            this.getOnlyPrimaryDisplayCondition();\r\n                        }\r\n                        else {\r\n                            this.dataChanged();\r\n                        }\r\n                        return [7 /*endfinally*/];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ NewPageDisplayConditionComponent.prototype.getOnlyPrimaryDisplayCondition = function () {\r\n        this.conditions = [\r\n            {\r\n                description: 'page.displaycondition.primary.description',\r\n                isPrimary: true,\r\n                label: 'page.displaycondition.primary'\r\n            }\r\n        ];\r\n        this.conditionSelected = this.conditions[0];\r\n        this.isReady = true;\r\n        this.dataChanged();\r\n    };\r\n    /* @ngInject */ NewPageDisplayConditionComponent.prototype.isUriContextEqualToCatalogVersion = function (uriContext, catalogVersion) {\r\n        return (uriContext &&\r\n            catalogVersion &&\r\n            catalogVersion.siteId === uriContext.CURRENT_CONTEXT_SITE_ID &&\r\n            catalogVersion.catalogId === uriContext.CURRENT_CONTEXT_CATALOG &&\r\n            catalogVersion.version === uriContext.CURRENT_CONTEXT_CATALOG_VERSION);\r\n    };\r\n    /* @ngInject */ NewPageDisplayConditionComponent.prototype.setPrimarySelected = function (page) {\r\n        this.primarySelected = page;\r\n        this.primarySelectedModel = page.uid;\r\n    };\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], /* @ngInject */ NewPageDisplayConditionComponent.prototype, \"pageTypeCode\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], /* @ngInject */ NewPageDisplayConditionComponent.prototype, \"uriContext\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Function)\r\n    ], /* @ngInject */ NewPageDisplayConditionComponent.prototype, \"resultFn\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], /* @ngInject */ NewPageDisplayConditionComponent.prototype, \"pageUuid\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], /* @ngInject */ NewPageDisplayConditionComponent.prototype, \"initialConditionSelectedKey\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], /* @ngInject */ NewPageDisplayConditionComponent.prototype, \"targetCatalogVersion\", void 0);\r\n    /* @ngInject */ NewPageDisplayConditionComponent = __decorate([\r\n        SeDowngradeComponent(),\r\n        Component({\r\n            selector: 'se-new-page-display-condition',\r\n            template: \"<div *ngIf=\\\"isReady\\\"><div class=\\\"form-group\\\"><label for=\\\"page-condition-selector-id\\\" class=\\\"se-control-label\\\" translate=\\\"se.cms.page.condition.selection.label\\\"></label><se-select id=\\\"page-condition-selector-id\\\" [model]=\\\"conditionSelected.label\\\" (modelChange)=\\\"onConditionChange($event)\\\" [fetchStrategy]=\\\"conditionSelectorFetchStrategy\\\" [onChange]=\\\"onDataChange\\\" [searchEnabled]=\\\"false\\\"></se-select><span class=\\\"se-form-help-message\\\"><span [translate]=\\\"conditionSelected.description\\\"></span></span></div><div *ngIf=\\\"showPrimarySelector()\\\" class=\\\"form-group\\\"><label for=\\\"page-condition-primary-selector-id\\\" class=\\\"se-control-label\\\" translate=\\\"se.cms.page.condition.primary.association.label\\\"></label><se-select id=\\\"page-condition-primary-selector-id\\\" [model]=\\\"primarySelectedModel\\\" (modelChange)=\\\"primarySelectedModelOnChange($event)\\\" [fetchStrategy]=\\\"primaryPageChoicesFetchStrategy\\\" [onChange]=\\\"onDataChange\\\"></se-select><span *ngIf=\\\"primarySelected?.label\\\" class=\\\"se-form-help-message\\\"><span>{{ 'se.cms.page.label.label' | translate }}: {{ primarySelected.label }}</span></span></div><div *ngIf=\\\"showHomePageWidget()\\\"><div class=\\\"fd-form__item\\\"><input type=\\\"checkbox\\\" id=\\\"set-homepage-checkbox\\\" class=\\\"se-component-item--details se-component-homepage__checkbox-input fd-form__control\\\" name=\\\"clone-on-drop\\\" (ngModelChange)=\\\"onHomePageChange($event)\\\" [ngModel]=\\\"homepage\\\"/> <label class=\\\"se-control-label se-component-homepage--label fd-form__label\\\" for=\\\"set-homepage-checkbox\\\" translate=\\\"se.cms.display.conditions.homepage.set\\\"></label></div><label class=\\\"se-control-label se-component-homepage--label\\\" for=\\\"set-homepage-checkbox\\\" *ngIf=\\\"showReplaceLabel\\\">{{ \\\"se.cms.display.conditions.homepage.replace\\\" | translate: { currentHomepage: currentHomePageName } }}</label></div></div>\",\r\n            styles: [\".se-component-homepage__checkbox-input{margin:0 4px 0 0;outline:0;box-shadow:none}\"],\r\n            changeDetection: ChangeDetectionStrategy.OnPush,\r\n            providers: [L10nPipe]\r\n        }),\r\n        __metadata(\"design:paramtypes\", [IUrlService,\r\n            HomepageService,\r\n            DisplayConditionsFacade,\r\n            TranslateService,\r\n            IPageService,\r\n            LogService,\r\n            PageDisplayConditionsService,\r\n            L10nPipe,\r\n            ChangeDetectorRef])\r\n    ], /* @ngInject */ NewPageDisplayConditionComponent);\r\n    return /* @ngInject */ NewPageDisplayConditionComponent;\r\n}());\r\nexport { /* @ngInject */ NewPageDisplayConditionComponent };\r\n//# sourceMappingURL=NewPageDisplayConditionComponent.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@ngx-translate/core@11.0.1_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@ngx-translate/core/ngx-translate-core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types/lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/rxjs@6.5.4/node_modules/rxjs/operators/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/facades/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/services/index.ts"],"map":"{\"version\":3,\"file\":\"NewPageDisplayConditionComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../src/components/pages/addPageWizard/components/newPageDisplayCondition/NewPageDisplayConditionComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/components/pages/addPageWizard/components/newPageDisplayCondition/NewPageDisplayConditionComponent.d.ts","writeByteOrderMark":false,"text":"import { ChangeDetectorRef, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ICMSPage, IPageService } from 'cmscommons';\r\nimport { FetchStrategy, ICatalogVersion, IUriContext, IUrlService, L10nPipe, LogService } from 'smarteditcommons';\r\nimport { DisplayConditionsFacade } from '../../../../../facades';\r\nimport { HomepageService, IDisplayCondition, PageDisplayConditionsService } from '../../../../../services';\r\ninterface DisplayConditionDTO {\r\n    homepage: boolean;\r\n    isPrimary: boolean;\r\n    primaryPage?: ICMSPage;\r\n}\r\nexport declare class NewPageDisplayConditionComponent implements OnInit, OnChanges {\r\n    private urlService;\r\n    private homepageService;\r\n    private displayConditionsFacade;\r\n    private translateService;\r\n    private pageService;\r\n    private logService;\r\n    private pageDisplayConditions;\r\n    private l10n;\r\n    private cdr;\r\n    pageTypeCode: string;\r\n    uriContext: IUriContext;\r\n    resultFn?: (data: DisplayConditionDTO) => void;\r\n    pageUuid?: string;\r\n    initialConditionSelectedKey?: string;\r\n    targetCatalogVersion?: ICatalogVersion;\r\n    conditions: IDisplayCondition[];\r\n    conditionSelected: IDisplayCondition;\r\n    conditionSelectorFetchStrategy: FetchStrategy;\r\n    currentHomePageName: string;\r\n    isReady: boolean;\r\n    homepage: boolean;\r\n    showReplaceLabel: boolean;\r\n    primarySelected: ICMSPage;\r\n    primarySelectedModel: string;\r\n    primaryPageChoicesFetchStrategy: FetchStrategy;\r\n    onDataChange: () => void;\r\n    private homepageDetails;\r\n    constructor(urlService: IUrlService, homepageService: HomepageService, displayConditionsFacade: DisplayConditionsFacade, translateService: TranslateService, pageService: IPageService, logService: LogService, pageDisplayConditions: PageDisplayConditionsService, l10n: L10nPipe, cdr: ChangeDetectorRef);\r\n    ngOnInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): Promise<void>;\r\n    showPrimarySelector(): boolean;\r\n    onConditionChange(selectedConditionLabel: string): void;\r\n    onHomePageChange(isHomepage: boolean): void;\r\n    showHomePageWidget(): boolean;\r\n    primarySelectedModelOnChange(uid: string): Promise<void>;\r\n    private dataChanged;\r\n    private isPrimaryContentPage;\r\n    private updateHomepageUiProperties;\r\n    private getTranslatedNames;\r\n    private getResults;\r\n    private getSelectedPrimaryPageAndDisplayCondition;\r\n    private getAllPrimaryDisplayCondition;\r\n    private getOnlyPrimaryDisplayCondition;\r\n    private isUriContextEqualToCatalogVersion;\r\n    private setPrimarySelected;\r\n}\r\nexport {};\r\n"}}

{"code":"import { __awaiter, __decorate, __generator, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { IPerspectiveService, SeDowngradeService } from 'smarteditcommons';\r\nvar /* @ngInject */ CMSModesService = /** @class */ (function () {\r\n    function /* @ngInject */ CMSModesService(perspectiveService) {\r\n        this.perspectiveService = perspectiveService;\r\n    }\r\n    /* @ngInject */ CMSModesService_1 = /* @ngInject */ CMSModesService;\r\n    /**\r\n     * Returns a promise that resolves to a boolean which is true if the current perspective loaded is versioning, false otherwise.\r\n     */\r\n    /* @ngInject */ CMSModesService.prototype.isVersioningPerspectiveActive = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var activePerspectiveKey;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.perspectiveService.getActivePerspectiveKey()];\r\n                    case 1:\r\n                        activePerspectiveKey = _a.sent();\r\n                        return [2 /*return*/, activePerspectiveKey === /* @ngInject */ CMSModesService_1.VERSIONING_PERSPECTIVE_KEY];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    var /* @ngInject */ CMSModesService_1;\r\n    /* @ngInject */ CMSModesService.BASIC_PERSPECTIVE_KEY = 'se.cms.perspective.basic';\r\n    /* @ngInject */ CMSModesService.ADVANCED_PERSPECTIVE_KEY = 'se.cms.perspective.advanced';\r\n    /* @ngInject */ CMSModesService.VERSIONING_PERSPECTIVE_KEY = 'se.cms.perspective.versioning';\r\n    /* @ngInject */ CMSModesService = /* @ngInject */ CMSModesService_1 = __decorate([\r\n        SeDowngradeService(),\r\n        __metadata(\"design:paramtypes\", [IPerspectiveService])\r\n    ], /* @ngInject */ CMSModesService);\r\n    return /* @ngInject */ CMSModesService;\r\n}());\r\nexport { /* @ngInject */ CMSModesService };\r\n//# sourceMappingURL=CMSModesService.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"CMSModesService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/modes/CMSModesService.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAAE,mBAAmB,EAAE,kBAAkB,EAAE,MAAM,kBAAkB,CAAC;AAG3E;IAKI,yCAAoB,kBAAuC;QAAvC,uBAAkB,GAAlB,kBAAkB,CAAqB;IAAG,CAAC;;IAE/D;;OAEG;IACG,uEAA6B,GAAnC;;;;;4BACiC,qBAAM,IAAI,CAAC,kBAAkB,CAAC,uBAAuB,EAAE,EAAA;;wBAA9E,oBAAoB,GAAG,SAAuD;wBACpF,sBAAO,oBAAoB,KAAK,iCAAe,CAAC,0BAA0B,EAAC;;;;KAC9E;;IAZsB,qDAAqB,GAAG,0BAA0B,CAAC;IACnD,wDAAwB,GAAG,6BAA6B,CAAC;IACzD,0DAA0B,GAAG,+BAA+B,CAAC;IAHxF;QADC,kBAAkB,EAAE;yCAMuB,mBAAmB;uCAS9D;IAAD,sCAAC;CAAA,AAdD,IAcC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/services/modes/CMSModesService.d.ts","writeByteOrderMark":false,"text":"import { IPerspectiveService } from 'smarteditcommons';\r\nexport declare class CMSModesService {\r\n    private perspectiveService;\r\n    static readonly BASIC_PERSPECTIVE_KEY = \"se.cms.perspective.basic\";\r\n    static readonly ADVANCED_PERSPECTIVE_KEY = \"se.cms.perspective.advanced\";\r\n    static readonly VERSIONING_PERSPECTIVE_KEY = \"se.cms.perspective.versioning\";\r\n    constructor(perspectiveService: IPerspectiveService);\r\n    /**\r\n     * Returns a promise that resolves to a boolean which is true if the current perspective loaded is versioning, false otherwise.\r\n     */\r\n    isVersioningPerspectiveActive(): Promise<boolean>;\r\n}\r\n"}}

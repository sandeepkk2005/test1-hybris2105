{"code":"import { __decorate, __metadata } from \"tslib\";\r\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { SeDowngradeComponent } from 'smarteditcommons';\r\nimport { RestrictionPickerConfigService } from '../../services';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"RestrictionManagementComponent\", {\r\n    selector: 'se-restriction-management',\r\n    template: \"<div *ngIf=\\\"isReady\\\"><div *ngIf=\\\"isEditMode\\\"><se-restriction-management-edit [restriction]=\\\"config?.restriction\\\" [getSupportedRestrictionTypes]=\\\"config?.getSupportedRestrictionTypesFn\\\" [uriContext]=\\\"uriContext\\\" [(isDirtyFn)]=\\\"isDirtyInternal\\\" [(submitFn)]=\\\"submitInternal\\\"></se-restriction-management-edit></div><div *ngIf=\\\"!isEditMode\\\"><se-restriction-management-select [existingRestrictions]=\\\"config?.existingRestrictions\\\" [fetchRestrictionTypes]=\\\"config?.getRestrictionTypesFn\\\" [getSupportedRestrictionTypes]=\\\"config?.getSupportedRestrictionTypesFn\\\" [uriContext]=\\\"uriContext\\\" [(isDirtyFn)]=\\\"isDirtyInternal\\\" [(submitFn)]=\\\"submitInternal\\\"></se-restriction-management-select></div></div>\"\r\n});\r\nvar /* @ngInject */ RestrictionManagementComponent = /** @class */ (function () {\r\n    function /* @ngInject */ RestrictionManagementComponent(restrictionPickerConfigService) {\r\n        this.restrictionPickerConfigService = restrictionPickerConfigService;\r\n        this.submitFnChange = new EventEmitter();\r\n        this.isDirtyFnChange = new EventEmitter();\r\n        this.isReady = false;\r\n        this.isEditMode = false;\r\n    }\r\n    /* @ngInject */ RestrictionManagementComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            _this.submitFnChange.emit(function () { return _this.submitInternal().then(function (value) { return value; }); });\r\n            _this.isDirtyFnChange.emit(function () { return _this.isDirtyInternal && _this.isDirtyInternal(); });\r\n        });\r\n    };\r\n    /* @ngInject */ RestrictionManagementComponent.prototype.ngOnChanges = function () {\r\n        if (!this.config) {\r\n            return;\r\n        }\r\n        if (this.restrictionPickerConfigService.isValidConfig(this.config)) {\r\n            this.isReady = true;\r\n            this.isEditMode = this.restrictionPickerConfigService.isEditingMode(this.config);\r\n        }\r\n        else {\r\n            throw 'RestrictionManagementComponent - invalid restrictionPickerConfig';\r\n        }\r\n    };\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], /* @ngInject */ RestrictionManagementComponent.prototype, \"config\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], /* @ngInject */ RestrictionManagementComponent.prototype, \"uriContext\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Function)\r\n    ], /* @ngInject */ RestrictionManagementComponent.prototype, \"submitFn\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Function)\r\n    ], /* @ngInject */ RestrictionManagementComponent.prototype, \"isDirtyFn\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], /* @ngInject */ RestrictionManagementComponent.prototype, \"submitFnChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], /* @ngInject */ RestrictionManagementComponent.prototype, \"isDirtyFnChange\", void 0);\r\n    /* @ngInject */ RestrictionManagementComponent = __decorate([\r\n        SeDowngradeComponent(),\r\n        Component({\r\n            selector: 'se-restriction-management',\r\n            template: \"<div *ngIf=\\\"isReady\\\"><div *ngIf=\\\"isEditMode\\\"><se-restriction-management-edit [restriction]=\\\"config?.restriction\\\" [getSupportedRestrictionTypes]=\\\"config?.getSupportedRestrictionTypesFn\\\" [uriContext]=\\\"uriContext\\\" [(isDirtyFn)]=\\\"isDirtyInternal\\\" [(submitFn)]=\\\"submitInternal\\\"></se-restriction-management-edit></div><div *ngIf=\\\"!isEditMode\\\"><se-restriction-management-select [existingRestrictions]=\\\"config?.existingRestrictions\\\" [fetchRestrictionTypes]=\\\"config?.getRestrictionTypesFn\\\" [getSupportedRestrictionTypes]=\\\"config?.getSupportedRestrictionTypesFn\\\" [uriContext]=\\\"uriContext\\\" [(isDirtyFn)]=\\\"isDirtyInternal\\\" [(submitFn)]=\\\"submitInternal\\\"></se-restriction-management-select></div></div>\"\r\n        }),\r\n        __metadata(\"design:paramtypes\", [RestrictionPickerConfigService])\r\n    ], /* @ngInject */ RestrictionManagementComponent);\r\n    return /* @ngInject */ RestrictionManagementComponent;\r\n}());\r\nexport { /* @ngInject */ RestrictionManagementComponent };\r\n//# sourceMappingURL=RestrictionManagementComponent.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/restrictions/services/index.ts"],"map":"{\"version\":3,\"file\":\"RestrictionManagementComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/components/restrictions/components/restrictionManagement/RestrictionManagementComponent.ts\"],\"names\":[],\"mappings\":\";AACA,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAqB,MAAM,EAAE,MAAM,eAAe,CAAC;AAE1F,OAAO,EAAe,oBAAoB,EAAE,MAAM,kBAAkB,CAAC;AACrE,OAAO,EAEH,8BAA8B,EAEjC,MAAM,gBAAgB,CAAC;wFAGb;IACP,QAAQ,EAAE,2BAA2B;IACrC,QAAQ,EAAE,8sBAAkrB;CAC/rB;AACD;IAcI,wDAAoB,8BAA8D;QAA9D,mCAA8B,GAA9B,8BAA8B,CAAgC;QAC9E,IAAI,CAAC,cAAc,GAAG,IAAI,YAAY,EAAE,CAAC;QACzC,IAAI,CAAC,eAAe,GAAG,IAAI,YAAY,EAAE,CAAC;QAC1C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,iEAAQ,GAAR;QAAA,iBAOC;QAJG,UAAU,CAAC;YACP,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,UAAC,KAAK,IAAK,OAAA,KAAK,EAAL,CAAK,CAAC,EAA5C,CAA4C,CAAC,CAAC;YAC7E,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,eAAe,IAAI,KAAI,CAAC,eAAe,EAAE,EAA9C,CAA8C,CAAC,CAAC;QACpF,CAAC,CAAC,CAAC;IACP,CAAC;IAED,oEAAW,GAAX;QACI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACd,OAAO;SACV;QAED,IAAI,IAAI,CAAC,8BAA8B,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAChE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,8BAA8B,CAAC,aAAa,CAC/D,IAAI,CAAC,MAAkC,CAC1C,CAAC;SACL;aAAM;YACH,MAAM,kEAAkE,CAAC;SAC5E;IACL,CAAC;IA1CQ;QAAR,KAAK,EAAE;;kFAA+D;IAC9D;QAAR,KAAK,EAAE;;sFAAyB;IACxB;QAAR,KAAK,EAAE;;oFAAkC;IACjC;QAAR,KAAK,EAAE;;qFAA0B;IAExB;QAAT,MAAM,EAAE;kCAAiB,YAAY;0FAAyB;IACrD;QAAT,MAAM,EAAE;kCAAkB,YAAY;2FAAgB;IAP3D;QALC,oBAAoB,EAAE;QACtB,SAAS,CAAC;YACP,QAAQ,EAAE,2BAA2B;YACrC,QAAQ,EAAE,8sBAAkrB;SAC/rB,CAAC;yCAesD,8BAA8B;sDA8BrF;IAAD,qDAAC;CAAA,AA5CD,IA4CC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/components/restrictions/components/restrictionManagement/RestrictionManagementComponent.d.ts","writeByteOrderMark":false,"text":"import { EventEmitter, OnChanges, OnInit } from '@angular/core';\r\nimport { CMSItem } from 'cmscommons';\r\nimport { IUriContext } from 'smarteditcommons';\r\nimport { EditingRestrictionConfig, RestrictionPickerConfigService, SelectingRestrictionConfig } from '../../services';\r\nexport declare class RestrictionManagementComponent implements OnInit, OnChanges {\r\n    private restrictionPickerConfigService;\r\n    config: EditingRestrictionConfig | SelectingRestrictionConfig;\r\n    uriContext: IUriContext;\r\n    submitFn: () => Promise<CMSItem>;\r\n    isDirtyFn: () => boolean;\r\n    submitFnChange: EventEmitter<() => Promise<CMSItem>>;\r\n    isDirtyFnChange: EventEmitter<() => boolean>;\r\n    submitInternal: () => Promise<CMSItem>;\r\n    isDirtyInternal: () => boolean;\r\n    isReady: boolean;\r\n    isEditMode: boolean;\r\n    constructor(restrictionPickerConfigService: RestrictionPickerConfigService);\r\n    ngOnInit(): void;\r\n    ngOnChanges(): void;\r\n}\r\n"}}

{"code":"/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { InjectionToken } from '@angular/core';\r\n/**\r\n * When you provide AlertService from '@fundamental-ngx/core' as a dependency\r\n * it doesn't work, seems to be constructor class name collision.\r\n * Provide this token in a Module and use it in constructor as follows\r\n * @Inject(ALERT_SERVICE_TOKEN) fundamentalAlertService: FundamentalAlertService\r\n */\r\nexport var ALERT_SERVICE_TOKEN = new InjectionToken('alertServiceToken');\r\nvar IAlertService = /** @class */ (function () {\r\n    function IAlertService() {\r\n    }\r\n    IAlertService.prototype.showAlert = function (alertConf) {\r\n        'proxyFunction';\r\n        return;\r\n    };\r\n    IAlertService.prototype.showInfo = function (alertConf) {\r\n        'proxyFunction';\r\n        return;\r\n    };\r\n    IAlertService.prototype.showDanger = function (alertConf) {\r\n        'proxyFunction';\r\n        return;\r\n    };\r\n    IAlertService.prototype.showWarning = function (alertConf) {\r\n        'proxyFunction';\r\n        return;\r\n    };\r\n    IAlertService.prototype.showSuccess = function (alertConf) {\r\n        'proxyFunction';\r\n        return;\r\n    };\r\n    return IAlertService;\r\n}());\r\nexport { IAlertService };\r\n//# sourceMappingURL=IAlertService.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/directives/index.ts"],"map":"{\"version\":3,\"file\":\"IAlertService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/interfaces/IAlertService.ts\"],\"names\":[],\"mappings\":\"AAAA;;GAEG;AACH,OAAO,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AAM/C;;;;;GAKG;AACH,MAAM,CAAC,IAAM,mBAAmB,GAAG,IAAI,cAAc,CAAS,mBAAmB,CAAC,CAAC;AAenF;IAAA;IAyBA,CAAC;IAxBG,iCAAS,GAAT,UAAU,SAAqD;QAC3D,eAAe,CAAC;QAChB,OAAO;IACX,CAAC;IAED,gCAAQ,GAAR,UAAS,SAAqD;QAC1D,eAAe,CAAC;QAChB,OAAO;IACX,CAAC;IAED,kCAAU,GAAV,UAAW,SAAqD;QAC5D,eAAe,CAAC;QAChB,OAAO;IACX,CAAC;IAED,mCAAW,GAAX,UAAY,SAAqD;QAC7D,eAAe,CAAC;QAChB,OAAO;IACX,CAAC;IAED,mCAAW,GAAX,UAAY,SAAqD;QAC7D,eAAe,CAAC;QAChB,OAAO;IACX,CAAC;IACL,oBAAC;AAAD,CAAC,AAzBD,IAyBC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/services/interfaces/IAlertService.d.ts","writeByteOrderMark":false,"text":"import { InjectionToken } from '@angular/core';\r\nimport { IAlertConfig } from '@smart/utils';\r\nimport { IAlertServiceType, IBaseAlertService } from 'smarteditcommons/services';\r\nimport { CompileHtmlNgController } from '../../directives';\r\n/**\r\n * When you provide AlertService from '@fundamental-ngx/core' as a dependency\r\n * it doesn't work, seems to be constructor class name collision.\r\n * Provide this token in a Module and use it in constructor as follows\r\n * @Inject(ALERT_SERVICE_TOKEN) fundamentalAlertService: FundamentalAlertService\r\n */\r\nexport declare const ALERT_SERVICE_TOKEN: InjectionToken<string>;\r\nexport interface IAlertConfigLegacy {\r\n    message?: string;\r\n    type?: IAlertServiceType;\r\n    messagePlaceholders?: {\r\n        [key: string]: any;\r\n    };\r\n    template?: string;\r\n    templateUrl?: string;\r\n    closeable?: boolean;\r\n    timeout?: number;\r\n    successful?: boolean;\r\n    id?: string;\r\n    controller?: CompileHtmlNgController['value'];\r\n}\r\nexport declare abstract class IAlertService implements IBaseAlertService {\r\n    showAlert(alertConf: string | IAlertConfigLegacy | IAlertConfig): void;\r\n    showInfo(alertConf: string | IAlertConfigLegacy | IAlertConfig): void;\r\n    showDanger(alertConf: string | IAlertConfigLegacy | IAlertConfig): void;\r\n    showWarning(alertConf: string | IAlertConfigLegacy | IAlertConfig): void;\r\n    showSuccess(alertConf: string | IAlertConfigLegacy | IAlertConfig): void;\r\n}\r\n"}}

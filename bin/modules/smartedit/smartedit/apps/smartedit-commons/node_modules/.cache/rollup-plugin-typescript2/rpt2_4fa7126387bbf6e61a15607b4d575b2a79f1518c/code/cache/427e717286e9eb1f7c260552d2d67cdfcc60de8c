{"code":"import { __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { SeComponent } from 'smarteditcommons/di';\r\nimport { SystemEventService } from '../../../services/SystemEventService';\r\n/**\r\n * **Deprecated since 2005, use {@link MessageComponent}.**\r\n *\r\n * The YEventMessage is a wrapper around YMessage, used to display or hide the message based on events sent through the systemEventService.\r\n *\r\n * ### Parameters\r\n *\r\n * `type` - The YMessage type\r\n *\r\n * `title` - The YMessage title\r\n *\r\n * `description` - The YMessage description\r\n *\r\n * `showEvent` - The event id where the YMessage should be shown. You can update the message or title at this time,\r\n * by passing a {@link IYEventMessageData} as argument to the event service.\r\n *\r\n *\r\n * `hideEvent` - The event id where the YMessage should be hidden\r\n *\r\n * `showToStart` - Controls whether the component is shown right away after compiling the dom\r\n *\r\n * @deprecated\r\n */\r\nvar /* @ngInject */ YEventMessageComponent = /** @class */ (function () {\r\n    function /* @ngInject */ YEventMessageComponent(systemEventService) {\r\n        this.systemEventService = systemEventService;\r\n        this.type = 'info';\r\n        this.show = false;\r\n    }\r\n    /* @ngInject */ YEventMessageComponent.prototype.$onChanges = function (changesObj) {\r\n        var _this = this;\r\n        if (changesObj.showEvent) {\r\n            this.removeShowEventHandler();\r\n            this.unregisterShowEventHandler = this.systemEventService.subscribe(changesObj.showEvent.currentValue, function (eventId, eventData) { return _this.showEventHandler(eventId, eventData); });\r\n        }\r\n        if (changesObj.hideEvent) {\r\n            this.removeHideEventHandler();\r\n            this.unregisterHideEventHandler = this.systemEventService.subscribe(changesObj.hideEvent.currentValue, function () { return (_this.show = false); });\r\n        }\r\n        if (this.recompile) {\r\n            this.recompile();\r\n        }\r\n    };\r\n    /* @ngInject */ YEventMessageComponent.prototype.$onInit = function () {\r\n        this.show = this.showToStart === 'true' || this.showToStart === true;\r\n    };\r\n    /* @ngInject */ YEventMessageComponent.prototype.$onDestroy = function () {\r\n        this.removeShowEventHandler();\r\n        this.removeHideEventHandler();\r\n    };\r\n    /* @ngInject */ YEventMessageComponent.prototype.showDescription = function () {\r\n        return typeof this.description === 'string' && this.description.length > 0;\r\n    };\r\n    /* @ngInject */ YEventMessageComponent.prototype.showTitle = function () {\r\n        return typeof this.title === 'string' && this.title.length > 0;\r\n    };\r\n    /* @ngInject */ YEventMessageComponent.prototype.showEventHandler = function (eventId, eventData) {\r\n        if (eventData.description && eventData.description.length) {\r\n            this.description = eventData.description;\r\n        }\r\n        if (eventData.title && eventData.title.length) {\r\n            this.title = eventData.title;\r\n        }\r\n        this.show = true;\r\n        if (this.recompile) {\r\n            this.recompile();\r\n        }\r\n    };\r\n    /* @ngInject */ YEventMessageComponent.prototype.removeHideEventHandler = function () {\r\n        if (this.unregisterHideEventHandler) {\r\n            this.unregisterHideEventHandler();\r\n        }\r\n    };\r\n    /* @ngInject */ YEventMessageComponent.prototype.removeShowEventHandler = function () {\r\n        if (this.unregisterShowEventHandler) {\r\n            this.unregisterShowEventHandler();\r\n        }\r\n    };\r\n    /* @ngInject */ YEventMessageComponent = __decorate([\r\n        SeComponent({\r\n            template: \"\\n\\t\\t<div data-recompile-dom=\\\"$ctrl.recompile\\\">\\n\\t\\t\\t<se-message [type]=\\\"$ctrl.type\\\"\\n\\t\\t\\t\\tdata-ng-if=\\\"$ctrl.show\\\">\\n\\t\\t\\t\\t<ng-container data-ng-if=\\\"$ctrl.title.length\\\" se-message-title>\\n\\t\\t\\t\\t\\t{{ $ctrl.title | translate }}\\n\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t<ng-container data-ng-if=\\\"$ctrl.description.length\\\" se-message-description>\\n\\t\\t\\t\\t\\t{{ $ctrl.description | translate }}\\n\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t</se-message>\\n\\t\\t</div>\\n    \",\r\n            inputs: [\r\n                'type: ?',\r\n                'title: ?',\r\n                'description: ?',\r\n                'showEvent: ?',\r\n                'hideEvent: ?',\r\n                'showToStart: ?'\r\n            ]\r\n        }),\r\n        __metadata(\"design:paramtypes\", [SystemEventService])\r\n    ], /* @ngInject */ YEventMessageComponent);\r\n    return /* @ngInject */ YEventMessageComponent;\r\n}());\r\nexport { /* @ngInject */ YEventMessageComponent };\r\n//# sourceMappingURL=yEventMessage.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/di/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/SystemEventService.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/yMessage/yEventMessage/IYEventMessageData.ts"],"map":"{\"version\":3,\"file\":\"yEventMessage.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/components/yMessage/yEventMessage/yEventMessage.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAAgB,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAChE,OAAO,EAAE,kBAAkB,EAAE,MAAM,sCAAsC,CAAC;AAG1E;;;;;;;;;;;;;;;;;;;;;;GAsBG;AAwBH;IAWI,gDAAoB,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QAVnD,SAAI,GAAG,MAAM,CAAC;QAGd,SAAI,GAAG,KAAK,CAAC;IAOyC,CAAC;IAE9D,2DAAU,GAAV,UAAW,UAAoC;QAA/C,iBAkBC;QAjBG,IAAI,UAAU,CAAC,SAAS,EAAE;YACtB,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9B,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAC/D,UAAU,CAAC,SAAS,CAAC,YAAY,EACjC,UAAC,OAAe,EAAE,SAAc,IAAK,OAAA,KAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,SAAS,CAAC,EAAzC,CAAyC,CACjF,CAAC;SACL;QACD,IAAI,UAAU,CAAC,SAAS,EAAE;YACtB,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9B,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAC/D,UAAU,CAAC,SAAS,CAAC,YAAY,EACjC,cAAM,OAAA,CAAC,KAAI,CAAC,IAAI,GAAG,KAAK,CAAC,EAAnB,CAAmB,CAC5B,CAAC;SACL;QACD,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,SAAS,EAAE,CAAC;SACpB;IACL,CAAC;IAED,wDAAO,GAAP;QACI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,KAAK,MAAM,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,CAAC;IACzE,CAAC;IAED,2DAAU,GAAV;QACI,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAClC,CAAC;IAED,gEAAe,GAAf;QACI,OAAO,OAAO,IAAI,CAAC,WAAW,KAAK,QAAQ,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;IAC/E,CAAC;IAED,0DAAS,GAAT;QACI,OAAO,OAAO,IAAI,CAAC,KAAK,KAAK,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;IACnE,CAAC;IAED,iEAAgB,GAAhB,UAAiB,OAAe,EAAE,SAA6B;QAC3D,IAAI,SAAS,CAAC,WAAW,IAAI,SAAS,CAAC,WAAW,CAAC,MAAM,EAAE;YACvD,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,WAAW,CAAC;SAC5C;QACD,IAAI,SAAS,CAAC,KAAK,IAAI,SAAS,CAAC,KAAK,CAAC,MAAM,EAAE;YAC3C,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;SAChC;QACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,SAAS,EAAE,CAAC;SACpB;IACL,CAAC;IAEO,uEAAsB,GAA9B;QACI,IAAI,IAAI,CAAC,0BAA0B,EAAE;YACjC,IAAI,CAAC,0BAA0B,EAAE,CAAC;SACrC;IACL,CAAC;IAEO,uEAAsB,GAA9B;QACI,IAAI,IAAI,CAAC,0BAA0B,EAAE;YACjC,IAAI,CAAC,0BAA0B,EAAE,CAAC;SACrC;IACL,CAAC;IAzEL;QAvBC,WAAW,CAAC;YACT,QAAQ,EAAE,odAYT;YACD,MAAM,EAAE;gBACJ,SAAS;gBACT,UAAU;gBACV,gBAAgB;gBAChB,cAAc;gBACd,cAAc;gBACd,gBAAgB;aACnB;SACJ,CAAC;yCAY0C,kBAAkB;8CA+D7D;IAAD,6CAAC;CAAA,AA1ED,IA0EC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/components/yMessage/yEventMessage/yEventMessage.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"angular\" />\r\nimport { ISeComponent } from 'smarteditcommons/di';\r\nimport { SystemEventService } from '../../../services/SystemEventService';\r\nimport { IYEventMessageData } from './IYEventMessageData';\r\n/**\r\n * **Deprecated since 2005, use {@link MessageComponent}.**\r\n *\r\n * The YEventMessage is a wrapper around YMessage, used to display or hide the message based on events sent through the systemEventService.\r\n *\r\n * ### Parameters\r\n *\r\n * `type` - The YMessage type\r\n *\r\n * `title` - The YMessage title\r\n *\r\n * `description` - The YMessage description\r\n *\r\n * `showEvent` - The event id where the YMessage should be shown. You can update the message or title at this time,\r\n * by passing a {@link IYEventMessageData} as argument to the event service.\r\n *\r\n *\r\n * `hideEvent` - The event id where the YMessage should be hidden\r\n *\r\n * `showToStart` - Controls whether the component is shown right away after compiling the dom\r\n *\r\n * @deprecated\r\n */\r\nexport declare class YEventMessageComponent implements ISeComponent {\r\n    private systemEventService;\r\n    type: string;\r\n    title: string;\r\n    description: string;\r\n    show: boolean;\r\n    showToStart: string | boolean;\r\n    recompile: () => void;\r\n    private unregisterShowEventHandler;\r\n    private unregisterHideEventHandler;\r\n    constructor(systemEventService: SystemEventService);\r\n    $onChanges(changesObj: angular.IOnChangesObject): void;\r\n    $onInit(): void;\r\n    $onDestroy(): void;\r\n    showDescription(): boolean;\r\n    showTitle(): boolean;\r\n    showEventHandler(eventId: string, eventData: IYEventMessageData): void;\r\n    private removeHideEventHandler;\r\n    private removeShowEventHandler;\r\n}\r\n"}}

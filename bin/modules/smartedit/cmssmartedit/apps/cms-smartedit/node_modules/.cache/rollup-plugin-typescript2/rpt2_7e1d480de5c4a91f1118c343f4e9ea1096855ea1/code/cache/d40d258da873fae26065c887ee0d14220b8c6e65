{"code":"import { __assign, __awaiter, __decorate, __generator, __metadata, __param } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { Inject } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AssetsService, COMPONENT_IN_SLOT_STATUS, COMPONENT_REMOVED_EVENT, DRAG_AND_DROP_EVENTS, IPageContentSlotsComponentsRestService, ISlotRestrictionsService } from 'cmscommons';\r\nimport { ComponentHandlerService } from 'smartedit';\r\nimport { CONTENT_SLOT_TYPE, CONTRACT_CHANGE_LISTENER_COMPONENT_PROCESS_STATUS, CONTRACT_CHANGE_LISTENER_PROCESS_EVENTS, DragAndDropService, GatewayFactory, IAlertService, IBrowserService, IWaitDialogService, OVERLAY_RERENDERED_EVENT, SeDowngradeService, SMARTEDIT_COMPONENT_PROCESS_STATUS, SystemEventService, windowUtils, YJQUERY_TOKEN, DOMAIN_TOKEN } from 'smarteditcommons';\r\nimport { ComponentEditingFacade } from './ComponentEditingFacade';\r\n/**\r\n * This service provides a rich drag and drop experience tailored for CMS operations.\r\n */\r\nvar /* @ngInject */ CmsDragAndDropService = /** @class */ (function () {\r\n    function /* @ngInject */ CmsDragAndDropService(alertService, assetsService, browserService, componentEditingFacade, componentHandlerService, dragAndDropService, gatewayFactory, translateService, pageContentSlotsComponentsRestService, slotRestrictionsService, systemEventService, waitDialogService, yjQuery, domain) {\r\n        this.alertService = alertService;\r\n        this.assetsService = assetsService;\r\n        this.browserService = browserService;\r\n        this.componentEditingFacade = componentEditingFacade;\r\n        this.componentHandlerService = componentHandlerService;\r\n        this.dragAndDropService = dragAndDropService;\r\n        this.gatewayFactory = gatewayFactory;\r\n        this.translateService = translateService;\r\n        this.pageContentSlotsComponentsRestService = pageContentSlotsComponentsRestService;\r\n        this.slotRestrictionsService = slotRestrictionsService;\r\n        this.systemEventService = systemEventService;\r\n        this.waitDialogService = waitDialogService;\r\n        this.yjQuery = yjQuery;\r\n        this.domain = domain;\r\n        this.cachedSlots = {};\r\n        this.highlightedSlot = null;\r\n        this.highlightedComponent = null;\r\n        this.highlightedHint = null;\r\n        this.dragInfo = null;\r\n        this.overlayRenderedUnSubscribeFn = null;\r\n        this.componentRemovedUnSubscribeFn = null;\r\n        this._window = windowUtils.getWindow();\r\n        this.gateway = this.gatewayFactory.createGateway('cmsDragAndDrop');\r\n    }\r\n    /* @ngInject */ CmsDragAndDropService_1 = /* @ngInject */ CmsDragAndDropService;\r\n    /**\r\n     * This method registers this drag and drop instance in SmartEdit.\r\n     */\r\n    /* @ngInject */ CmsDragAndDropService.prototype.register = function () {\r\n        var _this = this;\r\n        this.dragAndDropService.register({\r\n            id: /* @ngInject */ CmsDragAndDropService_1.CMS_DRAG_AND_DROP_ID,\r\n            sourceSelector: [\r\n                /* @ngInject */ CmsDragAndDropService_1.SOURCE_SELECTOR,\r\n                /* @ngInject */ CmsDragAndDropService_1.MORE_MENU_SOURCE_SELECTOR\r\n            ],\r\n            targetSelector: /* @ngInject */ CmsDragAndDropService_1.TARGET_SELECTOR,\r\n            startCallback: function (event) { return _this.onStart(event); },\r\n            dragEnterCallback: function (event) { return _this.onDragEnter(event); },\r\n            dragOverCallback: function (event) { return _this.onDragOver(event); },\r\n            dropCallback: function (event) { return _this.onDrop(event); },\r\n            outCallback: function (event) { return _this.onDragLeave(event); },\r\n            stopCallback: function (event) { return _this.onStop(event); },\r\n            enableScrolling: true,\r\n            helper: function () { return _this.getDragImageSrc(); }\r\n        });\r\n    };\r\n    /**\r\n     * This method unregisters this drag and drop instance from SmartEdit.\r\n     */\r\n    /* @ngInject */ CmsDragAndDropService.prototype.unregister = function () {\r\n        this.dragAndDropService.unregister([/* @ngInject */ CmsDragAndDropService_1.CMS_DRAG_AND_DROP_ID]);\r\n        if (this.overlayRenderedUnSubscribeFn) {\r\n            this.overlayRenderedUnSubscribeFn();\r\n        }\r\n        if (this.componentRemovedUnSubscribeFn) {\r\n            this.componentRemovedUnSubscribeFn();\r\n        }\r\n    };\r\n    /**\r\n     * This method applies this drag and drop instance in the current page. After this method is executed,\r\n     * the user can start a drag and drop operation.\r\n     */\r\n    /* @ngInject */ CmsDragAndDropService.prototype.apply = function () {\r\n        var _this = this;\r\n        this.dragAndDropService.apply(/* @ngInject */ CmsDragAndDropService_1.CMS_DRAG_AND_DROP_ID);\r\n        this.addUIHelpers();\r\n        // Register a listener for every time the overlay is updated.\r\n        this.overlayRenderedUnSubscribeFn = this.systemEventService.subscribe(OVERLAY_RERENDERED_EVENT, function () { return _this.onOverlayUpdate(); });\r\n        this.componentRemovedUnSubscribeFn = this.systemEventService.subscribe(COMPONENT_REMOVED_EVENT, function () { return _this.onOverlayUpdate(); });\r\n        this.gateway.subscribe(DRAG_AND_DROP_EVENTS.DRAG_STARTED, function (eventId, data) {\r\n            _this.dragAndDropService.markDragStarted();\r\n            _this.initializeDragOperation(data);\r\n        });\r\n        this.gateway.subscribe(DRAG_AND_DROP_EVENTS.DRAG_STOPPED, function () {\r\n            _this.dragAndDropService.markDragStopped();\r\n            _this.cleanDragOperation();\r\n        });\r\n    };\r\n    /**\r\n     * This method updates this drag and drop instance in the current page. It is important to execute\r\n     * this method every time a draggable or droppable element is added or removed from the page DOM.\r\n     */\r\n    /* @ngInject */ CmsDragAndDropService.prototype.update = function () {\r\n        this.dragAndDropService.update(/* @ngInject */ CmsDragAndDropService_1.CMS_DRAG_AND_DROP_ID);\r\n        // Add UI helpers -> They identify the places where you can drop components.\r\n        this.addUIHelpers();\r\n        // Update cache elements AFTER adding UI Helpers\r\n        this.cacheElements();\r\n    };\r\n    // Other Event Handlers\r\n    /* @ngInject */ CmsDragAndDropService.prototype.onOverlayUpdate = function () {\r\n        this.update();\r\n        return Promise.resolve();\r\n    };\r\n    // Drag and Drop Event Handlers\r\n    /* @ngInject */ CmsDragAndDropService.prototype.onStart = function (event) {\r\n        // Find element\r\n        var targetElm = this.getSelector(event.target);\r\n        // when the DnD icon is in the more option dropdown, the targetElm is a span and has no data-component-id. Here we get the closest element (i.e. <contextual-menu-item>)\r\n        if (!targetElm.attr('data-component-id')) {\r\n            targetElm = this.yjQuery(targetElm).closest('[data-component-id]');\r\n        }\r\n        var component = targetElm.closest(/* @ngInject */ CmsDragAndDropService_1.COMPONENT_SELECTOR);\r\n        var slot = component.closest(/* @ngInject */ CmsDragAndDropService_1.SLOT_SELECTOR);\r\n        // Here if the component evaluated above exits that means the component has been located and we can fetch its attributes\r\n        // else it is not located as the DnD option is hidden inside the more option of the contextual menu in which case\r\n        // we find the component/slot info by accessing attributes of the DnD icon.\r\n        var componentId = component.length > 0\r\n            ? this.componentHandlerService.getId(component)\r\n            : targetElm.attr('data-component-id');\r\n        var componentUuid = component.length > 0\r\n            ? this.componentHandlerService.getSlotOperationRelatedUuid(component)\r\n            : targetElm.attr('data-component-uuid');\r\n        var componentType = component.length > 0\r\n            ? this.componentHandlerService.getType(component)\r\n            : targetElm.attr('data-component-type');\r\n        var slotOperationRelatedId = component.length > 0\r\n            ? this.componentHandlerService.getSlotOperationRelatedId(component)\r\n            : targetElm.attr('data-component-id');\r\n        var slotOperationRelatedType = component.length > 0\r\n            ? this.componentHandlerService.getSlotOperationRelatedType(component)\r\n            : targetElm.attr('data-component-type');\r\n        var slotId = component.length > 0\r\n            ? this.componentHandlerService.getId(slot)\r\n            : targetElm.attr('data-slot-id');\r\n        var slotUuid = component.length > 0\r\n            ? this.componentHandlerService.getId(slot)\r\n            : targetElm.attr('data-slot-uuid');\r\n        var dragInfo = {\r\n            componentId: componentId,\r\n            componentUuid: componentUuid,\r\n            componentType: componentType,\r\n            slotUuid: slotUuid,\r\n            slotId: slotId,\r\n            slotOperationRelatedId: slotOperationRelatedId,\r\n            slotOperationRelatedType: slotOperationRelatedType\r\n        };\r\n        component.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.COMPONENT_DRAGGED);\r\n        this.initializeDragOperation(dragInfo);\r\n        this.toggleKeepVisibleComponentAndSlot(true);\r\n    };\r\n    /* @ngInject */ CmsDragAndDropService.prototype.onDragEnter = function (event) {\r\n        return this.highlightSlot(event);\r\n    };\r\n    /* @ngInject */ CmsDragAndDropService.prototype.onDragOver = function (event) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var slotId, cachedSlot, componentToHighlight, hintToHighlight;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.highlightSlot(event)];\r\n                    case 1:\r\n                        _b.sent();\r\n                        if (!this.highlightedSlot || !this.highlightedSlot.isAllowed) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        slotId = this.componentHandlerService.getId(this.highlightedSlot.original);\r\n                        // Check which component is highlighted\r\n                        if (this.highlightedHint && this.isMouseInRegion(event, this.highlightedHint)) {\r\n                            // If right hint is already highlighted don't do anything.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        else if (this.highlightedHint) {\r\n                            // Hint is not longer hovered.\r\n                            this.clearHighlightedHint();\r\n                        }\r\n                        cachedSlot = this.cachedSlots[slotId];\r\n                        if (cachedSlot.components.length > 0) {\r\n                            // Find the hovered component.\r\n                            if (!this.highlightedComponent ||\r\n                                !this.isMouseInRegion(event, this.highlightedComponent)) {\r\n                                this.clearHighlightedComponent();\r\n                                componentToHighlight = this.selectMouseOverElement(event, cachedSlot.components);\r\n                                if (componentToHighlight) {\r\n                                    this.highlightedComponent = componentToHighlight;\r\n                                }\r\n                            }\r\n                            // Find the hint, if any, to highlight.\r\n                            if ((_a = this.highlightedComponent) === null || _a === void 0 ? void 0 : _a.hints) {\r\n                                hintToHighlight = this.selectMouseOverElement(event, this.highlightedComponent.hints);\r\n                                if (hintToHighlight) {\r\n                                    this.highlightedHint = hintToHighlight;\r\n                                }\r\n                            }\r\n                        }\r\n                        if (this.highlightedComponent &&\r\n                            this.highlightedComponent.id === this.dragInfo.slotOperationRelatedId) {\r\n                            this.highlightedComponent.original.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.COMPONENT_DRAGGED_HOVERED);\r\n                        }\r\n                        else if (this.highlightedHint) {\r\n                            if (this.highlightedSlot.isAllowed) {\r\n                                this.highlightedHint.original.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.DROPZONE_HOVERED);\r\n                                if (this.highlightedSlot.mayBeAllowed) {\r\n                                    this.highlightedHint.original.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.DROPZONE_MAY_BE_ALLOWED);\r\n                                }\r\n                            }\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ CmsDragAndDropService.prototype.selectMouseOverElement = function (event, elements) {\r\n        var _this = this;\r\n        return elements.find(function (element) { return _this.isMouseInRegion(event, element); });\r\n    };\r\n    /* @ngInject */ CmsDragAndDropService.prototype.onDrop = function (event) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var sourceSlotId, targetSlotId, targetSlotUUId, sourceComponentId, sourceSlotOperationRelatedId, componentType, translation, position, performAction, slotInfo, catalogVersionUuid, dragInfo, componentProperties, currentComponentPos, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!this.highlightedSlot) return [3 /*break*/, 5];\r\n                        sourceSlotId = this.dragInfo.slotId;\r\n                        targetSlotId = this.componentHandlerService.getId(this.highlightedSlot.original);\r\n                        targetSlotUUId = this.componentHandlerService.getUuid(this.highlightedSlot.original);\r\n                        sourceComponentId = this.dragInfo.componentId;\r\n                        sourceSlotOperationRelatedId = this.dragInfo.slotOperationRelatedId || this.dragInfo.componentId;\r\n                        componentType = this.dragInfo.slotOperationRelatedType || this.dragInfo.componentType;\r\n                        if (!this.highlightedSlot.isAllowed) {\r\n                            translation = this.translateService.instant('se.drag.and.drop.not.valid.component.type', {\r\n                                slotUID: targetSlotId,\r\n                                componentUID: sourceSlotOperationRelatedId\r\n                            });\r\n                            this.alertService.showDanger({\r\n                                message: translation\r\n                            });\r\n                            return [2 /*return*/];\r\n                        }\r\n                        if (!(this.highlightedHint || this.highlightedSlot.components.length === 0)) return [3 /*break*/, 5];\r\n                        position = this.highlightedHint ? this.highlightedHint.position : 0;\r\n                        performAction = void 0;\r\n                        this.waitDialogService.showWaitModal();\r\n                        if (!sourceSlotId) {\r\n                            if (!sourceComponentId) {\r\n                                slotInfo = {\r\n                                    targetSlotId: targetSlotId,\r\n                                    targetSlotUUId: targetSlotUUId\r\n                                };\r\n                                catalogVersionUuid = this.componentHandlerService.getCatalogVersionUuid(this.highlightedSlot.original);\r\n                                performAction = this.componentEditingFacade.addNewComponentToSlot(slotInfo, catalogVersionUuid, componentType, position);\r\n                            }\r\n                            else {\r\n                                dragInfo = {\r\n                                    componentId: sourceComponentId,\r\n                                    componentUuid: this.dragInfo.componentUuid,\r\n                                    componentType: componentType\r\n                                };\r\n                                componentProperties = {\r\n                                    targetSlotId: targetSlotId,\r\n                                    dragInfo: dragInfo,\r\n                                    position: position\r\n                                };\r\n                                performAction = this.dragInfo.cloneOnDrop\r\n                                    ? this.componentEditingFacade.cloneExistingComponentToSlot(componentProperties)\r\n                                    : this.componentEditingFacade.addExistingComponentToSlot(targetSlotId, dragInfo, position);\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (sourceSlotId === targetSlotId) {\r\n                                currentComponentPos = this.getComponentPositionFromCachedSlot(sourceSlotId, sourceComponentId);\r\n                                if (currentComponentPos < position) {\r\n                                    // The current component will be removed from its current position, thus the target\r\n                                    // position needs to take this into account.\r\n                                    position--;\r\n                                }\r\n                                else if (currentComponentPos === position) {\r\n                                    // Do not perform update if position and slot has not changed.\r\n                                    this.waitDialogService.hideWaitModal();\r\n                                    return [2 /*return*/];\r\n                                }\r\n                            }\r\n                            performAction = this.componentEditingFacade.moveComponent(sourceSlotId, targetSlotId, sourceSlotOperationRelatedId, position);\r\n                        }\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        _b.trys.push([1, 3, 4, 5]);\r\n                        return [4 /*yield*/, performAction];\r\n                    case 2:\r\n                        _b.sent();\r\n                        this.scrollToModifiedSlot(targetSlotId);\r\n                        return [3 /*break*/, 5];\r\n                    case 3:\r\n                        _a = _b.sent();\r\n                        this.onStop(event);\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        this.waitDialogService.hideWaitModal();\r\n                        return [7 /*endfinally*/];\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ CmsDragAndDropService.prototype.getComponentPositionFromCachedSlot = function (slotId, componentId) {\r\n        var _this = this;\r\n        var cachedSlot = this.cachedSlots[slotId];\r\n        var componentsInCachedSlot = (cachedSlot === null || cachedSlot === void 0 ? void 0 : cachedSlot.components) ? cachedSlot.components : [];\r\n        var cachedComponent = componentsInCachedSlot.find(function (component) { return _this.componentHandlerService.getId(component.original) === componentId; });\r\n        var currentComponentPos = cachedComponent\r\n            ? cachedComponent.position\r\n            : this.componentHandlerService.getComponentPositionInSlot(slotId, componentId);\r\n        return currentComponentPos;\r\n    };\r\n    /* @ngInject */ CmsDragAndDropService.prototype.onDragLeave = function (event) {\r\n        if (this.highlightedSlot) {\r\n            var slotId = this.componentHandlerService.getId(this.highlightedSlot.original);\r\n            var cachedSlot = this.cachedSlots[slotId];\r\n            if (!this.isMouseInRegion(event, cachedSlot)) {\r\n                this.clearHighlightedSlot();\r\n            }\r\n        }\r\n    };\r\n    /* @ngInject */ CmsDragAndDropService.prototype.onStop = function (event) {\r\n        var component = this.getSelector(event.target).closest(/* @ngInject */ CmsDragAndDropService_1.COMPONENT_SELECTOR);\r\n        this.toggleKeepVisibleComponentAndSlot(false);\r\n        this.cleanDragOperation(component);\r\n        this.systemEventService.publish(CONTRACT_CHANGE_LISTENER_PROCESS_EVENTS.RESTART_PROCESS);\r\n    };\r\n    /**\r\n     * This function returns the source of the image used as drag image. Currently, the\r\n     * image is only returned for Safari; all the other browsers display default images\r\n     * properly.\r\n     */\r\n    /* @ngInject */ CmsDragAndDropService.prototype.getDragImageSrc = function () {\r\n        var imagePath = '';\r\n        if (this.browserService.isSafari()) {\r\n            imagePath = this.assetsService.getAssetsRoot() + /* @ngInject */ CmsDragAndDropService_1.DEFAULT_DRAG_IMG;\r\n        }\r\n        return this.domain + imagePath;\r\n    };\r\n    /* @ngInject */ CmsDragAndDropService.prototype.initializeDragOperation = function (dragInfo) {\r\n        this.dragInfo = dragInfo;\r\n        this.cacheElements();\r\n        // Prepare UI\r\n        var overlay = this.componentHandlerService.getOverlay();\r\n        overlay.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.OVERLAY_IN_DRAG_DROP);\r\n        // Send an event to signal that the drag operation is started. Other pieces of SE, like contextual menus\r\n        // need to be aware.\r\n        this.systemEventService.publishAsync(DRAG_AND_DROP_EVENTS.DRAG_STARTED);\r\n    };\r\n    /* @ngInject */ CmsDragAndDropService.prototype.cleanDragOperation = function (draggedComponent) {\r\n        this.clearHighlightedSlot();\r\n        if (draggedComponent) {\r\n            draggedComponent.removeClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.COMPONENT_DRAGGED);\r\n        }\r\n        var overlay = this.componentHandlerService.getOverlay();\r\n        overlay.removeClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.OVERLAY_IN_DRAG_DROP);\r\n        this.systemEventService.publishAsync(DRAG_AND_DROP_EVENTS.DRAG_STOPPED);\r\n        this.dragInfo = null;\r\n        this.cachedSlots = {};\r\n        this.highlightedSlot = null;\r\n    };\r\n    /* @ngInject */ CmsDragAndDropService.prototype.highlightSlot = function (event) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var slot, slotId, oldSlotId, dragInfo, isComponentAllowed, isSlotEditable, isAllowed, mayBeAllowed;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        slot = this.yjQuery(event.target).closest(/* @ngInject */ CmsDragAndDropService_1.SLOT_SELECTOR);\r\n                        slotId = this.componentHandlerService.getId(slot);\r\n                        if (this.highlightedSlot) {\r\n                            oldSlotId = this.componentHandlerService.getId(this.highlightedSlot.original);\r\n                            if (oldSlotId !== slotId) {\r\n                                this.clearHighlightedSlot();\r\n                            }\r\n                        }\r\n                        if (!(!this.highlightedSlot || this.highlightedSlot.isAllowed === undefined)) return [3 /*break*/, 3];\r\n                        this.highlightedSlot = this.cachedSlots[slotId];\r\n                        dragInfo = __assign({}, this.dragInfo);\r\n                        // if component is dragged from component-menu, there is no slotOperationRelated(Id/Type) available.\r\n                        dragInfo.componentId =\r\n                            this.dragInfo.slotOperationRelatedId || this.dragInfo.componentId;\r\n                        dragInfo.componentType =\r\n                            this.dragInfo.slotOperationRelatedType || this.dragInfo.componentType;\r\n                        if (dragInfo.cloneOnDrop) {\r\n                            delete dragInfo.componentId;\r\n                        }\r\n                        return [4 /*yield*/, this.slotRestrictionsService.isComponentAllowedInSlot(this.highlightedSlot, dragInfo)];\r\n                    case 1:\r\n                        isComponentAllowed = _a.sent();\r\n                        return [4 /*yield*/, this.slotRestrictionsService.isSlotEditable(slotId)];\r\n                    case 2:\r\n                        isSlotEditable = _a.sent();\r\n                        // The highlighted slot might have changed while waiting for the promise to be resolved.\r\n                        if (this.highlightedSlot && this.highlightedSlot.id === slotId) {\r\n                            isAllowed = isComponentAllowed === COMPONENT_IN_SLOT_STATUS.ALLOWED && isSlotEditable;\r\n                            mayBeAllowed = isComponentAllowed === COMPONENT_IN_SLOT_STATUS.MAYBEALLOWED && isSlotEditable;\r\n                            /* Basically the component could be allowed to drop in the slot if the isComponentAllowed status is either ALLOWED or MAYBEALLOWED.\r\n                             * But in order to differentiate between ALLOWED and MAYBEALLOWED, we store it in highlightedSlot.isAllowed and highlightedSlot.mayBeAllowed respectively.\r\n                             */\r\n                            this.highlightedSlot.isAllowed = isAllowed || mayBeAllowed;\r\n                            this.highlightedSlot.mayBeAllowed = mayBeAllowed;\r\n                            if (this.highlightedSlot.isAllowed) {\r\n                                slot.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.SLOT_ALLOWED);\r\n                                if (mayBeAllowed) {\r\n                                    slot.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.SLOT_MAY_BE_ALLOWED);\r\n                                }\r\n                            }\r\n                            else {\r\n                                slot.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.SLOT_NOT_ALLOWED);\r\n                            }\r\n                            if (event.type === 'dragenter' && (!oldSlotId || oldSlotId !== slotId)) {\r\n                                if (this.highlightedSlot && this.highlightedSlot.id === slotId) {\r\n                                    this.systemEventService.publish(slotId + '_SHOW_SLOT_MENU');\r\n                                    this.systemEventService.publish(DRAG_AND_DROP_EVENTS.DRAG_OVER, slotId); // can be used to perform any actions on encountering a drag over event.\r\n                                }\r\n                            }\r\n                        }\r\n                        _a.label = 3;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ CmsDragAndDropService.prototype.addUIHelpers = function () {\r\n        var overlay = this.componentHandlerService.getOverlay();\r\n        // First remove all dropzones.\r\n        overlay.find('.' + /* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.UI_HELPER_OVERLAY).remove();\r\n        var vm = this;\r\n        overlay.find(/* @ngInject */ CmsDragAndDropService_1.SLOT_SELECTOR).each(function (i, overlayElement) {\r\n            var slot = vm.yjQuery(overlayElement);\r\n            var slotHeight = slot[0].offsetHeight;\r\n            var slotWidth = slot[0].offsetWidth;\r\n            var components = slot.find(/* @ngInject */ CmsDragAndDropService_1.COMPONENT_SELECTOR);\r\n            if (components.length === 0) {\r\n                var uiHelperOverlay = vm.yjQuery('<div></div>');\r\n                uiHelperOverlay.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.UI_HELPER_OVERLAY);\r\n                var uiHelper = vm.yjQuery('<div></div>');\r\n                uiHelper.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.DROPZONE);\r\n                uiHelper.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.DROPZONE_FULL);\r\n                uiHelperOverlay.height(slotHeight);\r\n                uiHelperOverlay.width(slotWidth);\r\n                uiHelperOverlay.append(uiHelper);\r\n                slot.append(uiHelperOverlay);\r\n            }\r\n            else {\r\n                components.each(function (j, componentElement) {\r\n                    var component = vm.yjQuery(componentElement);\r\n                    var componentHeight = component[0].offsetHeight;\r\n                    var componentWidth = component[0].offsetWidth;\r\n                    var uiHelperOverlay = vm.yjQuery('<div></div>');\r\n                    uiHelperOverlay.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.UI_HELPER_OVERLAY);\r\n                    uiHelperOverlay.height(componentHeight);\r\n                    uiHelperOverlay.width(componentWidth);\r\n                    var firstHelper = vm.yjQuery('<div></div>');\r\n                    var secondHelper = vm.yjQuery('<div></div>');\r\n                    firstHelper.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.DROPZONE);\r\n                    secondHelper.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.DROPZONE);\r\n                    if (componentWidth === slotWidth) {\r\n                        firstHelper.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.DROPZONE_TOP);\r\n                        secondHelper.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.DROPZONE_BOTTOM);\r\n                    }\r\n                    else {\r\n                        firstHelper.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.DROPZONE_LEFT);\r\n                        secondHelper.addClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.DROPZONE_RIGHT);\r\n                    }\r\n                    uiHelperOverlay.append(firstHelper);\r\n                    uiHelperOverlay.append(secondHelper);\r\n                    component.append(uiHelperOverlay);\r\n                });\r\n            }\r\n        });\r\n    };\r\n    /* @ngInject */ CmsDragAndDropService.prototype.cacheElements = function () {\r\n        var _this = this;\r\n        var overlay = this.componentHandlerService.getOverlay();\r\n        if (!overlay) {\r\n            return;\r\n        }\r\n        var scrollY = this.getWindowScrolling();\r\n        overlay.find(/* @ngInject */ CmsDragAndDropService_1.SLOT_SELECTOR).each(function (si, slotElement) {\r\n            var slot = _this.yjQuery(slotElement);\r\n            var slotId = _this.componentHandlerService.getId(slot);\r\n            var slotUuid = _this.componentHandlerService.getUuid(slot);\r\n            // Fetch all components (visible or not) in each slot to get proper position values.\r\n            // The componentHandlerService.getComponentPositionInSlot method is not used here, because it's only based on visible components in the DOM.\r\n            _this.pageContentSlotsComponentsRestService\r\n                .getComponentsForSlot(slotId)\r\n                .then(function (componentsForSlot) {\r\n                var cachedSlot = {\r\n                    id: slotId,\r\n                    uuid: slotUuid,\r\n                    original: slot,\r\n                    components: [],\r\n                    rect: _this.getElementRects(slot, scrollY),\r\n                    hint: null\r\n                };\r\n                var components = slot.children(/* @ngInject */ CmsDragAndDropService_1.COMPONENT_SELECTOR);\r\n                if (components.length === 0) {\r\n                    var hint = slot.find(/* @ngInject */ CmsDragAndDropService_1.HINT_SELECTOR);\r\n                    cachedSlot.hint =\r\n                        hint.length > 0\r\n                            ? {\r\n                                original: hint,\r\n                                rect: _this.getElementRects(hint, scrollY)\r\n                            }\r\n                            : null;\r\n                }\r\n                else {\r\n                    components.each(function (ci, componentElement) {\r\n                        var component = _this.yjQuery(componentElement);\r\n                        var positionInSlot = componentsForSlot.findIndex(function (componentInSlot) {\r\n                            return componentInSlot.uuid ===\r\n                                _this.componentHandlerService.getUuid(component);\r\n                        });\r\n                        if (positionInSlot === -1) {\r\n                            positionInSlot = ci;\r\n                        }\r\n                        var cachedComponent = {\r\n                            id: _this.componentHandlerService.getSlotOperationRelatedId(component),\r\n                            type: _this.componentHandlerService.getSlotOperationRelatedType(component),\r\n                            original: component,\r\n                            position: positionInSlot,\r\n                            hints: [],\r\n                            rect: _this.getElementRects(component, scrollY)\r\n                        };\r\n                        var positionInComponent = positionInSlot++;\r\n                        component\r\n                            .find(/* @ngInject */ CmsDragAndDropService_1.HINT_SELECTOR)\r\n                            .each(function (hi, hintElement) {\r\n                            var hint = _this.yjQuery(hintElement);\r\n                            var cachedHint = {\r\n                                original: hint,\r\n                                position: positionInComponent++,\r\n                                rect: _this.getElementRects(hint, scrollY)\r\n                            };\r\n                            cachedComponent.hints.push(cachedHint);\r\n                        });\r\n                        cachedSlot.components.push(cachedComponent);\r\n                    });\r\n                }\r\n                _this.cachedSlots[cachedSlot.id] = cachedSlot;\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ CmsDragAndDropService.prototype.clearHighlightedHint = function () {\r\n        if (this.highlightedHint) {\r\n            this.highlightedHint.original.removeClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.DROPZONE_HOVERED);\r\n            this.highlightedHint.original.removeClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.DROPZONE_MAY_BE_ALLOWED);\r\n            this.highlightedHint = null;\r\n        }\r\n    };\r\n    /* @ngInject */ CmsDragAndDropService.prototype.clearHighlightedComponent = function () {\r\n        this.clearHighlightedHint();\r\n        if (this.highlightedComponent) {\r\n            this.highlightedComponent.original.removeClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.COMPONENT_DRAGGED_HOVERED);\r\n            this.highlightedComponent = null;\r\n        }\r\n    };\r\n    /* @ngInject */ CmsDragAndDropService.prototype.clearHighlightedSlot = function () {\r\n        this.clearHighlightedComponent();\r\n        if (this.highlightedSlot) {\r\n            this.highlightedSlot.original.removeClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.SLOT_ALLOWED);\r\n            this.highlightedSlot.original.removeClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.SLOT_NOT_ALLOWED);\r\n            this.highlightedSlot.original.removeClass(/* @ngInject */ CmsDragAndDropService_1.CSS_CLASSES.SLOT_MAY_BE_ALLOWED);\r\n            this.systemEventService.publish('HIDE_SLOT_MENU');\r\n            this.systemEventService.publish(DRAG_AND_DROP_EVENTS.DRAG_LEAVE); // can be used to perform any actions on encountering a drag leave event.\r\n        }\r\n        this.highlightedSlot = null;\r\n    };\r\n    /* @ngInject */ CmsDragAndDropService.prototype.isMouseInRegion = function (event, element) {\r\n        var boundingRect = element.rect;\r\n        return (event.pageX >= boundingRect.left &&\r\n            event.pageX <= boundingRect.right &&\r\n            event.pageY >= boundingRect.top &&\r\n            event.pageY <= boundingRect.bottom);\r\n    };\r\n    /* @ngInject */ CmsDragAndDropService.prototype.getElementRects = function (element, scrollY) {\r\n        var baseRect = element[0].getBoundingClientRect();\r\n        return {\r\n            left: baseRect.left,\r\n            right: baseRect.right,\r\n            bottom: baseRect.bottom + scrollY,\r\n            top: baseRect.top + scrollY\r\n        };\r\n    };\r\n    /* @ngInject */ CmsDragAndDropService.prototype.getWindowScrolling = function () {\r\n        return this._window.pageYOffset;\r\n    };\r\n    /* @ngInject */ CmsDragAndDropService.prototype.scrollToModifiedSlot = function (componentId) {\r\n        var component = this.componentHandlerService.getComponentInOverlay(componentId, CONTENT_SLOT_TYPE);\r\n        if (component && component.length > 0) {\r\n            component[0].scrollIntoView();\r\n        }\r\n    };\r\n    /* @ngInject */ CmsDragAndDropService.prototype.getSelector = function (selector) {\r\n        return this.yjQuery(selector);\r\n    };\r\n    /**\r\n     * When a PROCESS_COMPONENTS is occuring, it could remove the currently dragged component if this one is not in the viewport.\r\n     * To avoid having the dragged component and it's slot removed we mark then as \"KEEP_VISIBLE\" when the drag and drop start.\r\n     * On drag end, an event is sent to call a RESTART_PROCESS to add or remove the components according to their viewport visibility and the component and slot are marked as \"PROCESS\".\r\n     * Using yjQuery.each() here because of MiniCart component (among other slots/compoents) that have multiple occurences in DOM.\r\n     */\r\n    /* @ngInject */ CmsDragAndDropService.prototype.toggleKeepVisibleComponentAndSlot = function (keepVisible) {\r\n        if (this.dragInfo) {\r\n            var status_1 = keepVisible\r\n                ? CONTRACT_CHANGE_LISTENER_COMPONENT_PROCESS_STATUS.KEEP_VISIBLE\r\n                : CONTRACT_CHANGE_LISTENER_COMPONENT_PROCESS_STATUS.PROCESS;\r\n            this.yjQuery.each(this.componentHandlerService.getComponentUnderSlot(this.dragInfo.componentId, this.dragInfo.componentType, this.dragInfo.slotId), function (i, element) {\r\n                element.dataset[SMARTEDIT_COMPONENT_PROCESS_STATUS] = status_1;\r\n            });\r\n            this.yjQuery.each(this.componentHandlerService.getComponent(this.dragInfo.slotId, CONTENT_SLOT_TYPE), function (i, element) {\r\n                element.dataset[SMARTEDIT_COMPONENT_PROCESS_STATUS] = status_1;\r\n            });\r\n        }\r\n    };\r\n    var /* @ngInject */ CmsDragAndDropService_1;\r\n    /* @ngInject */ CmsDragAndDropService.CMS_DRAG_AND_DROP_ID = 'se.cms.dragAndDrop';\r\n    /* @ngInject */ CmsDragAndDropService.TARGET_SELECTOR = \"#smarteditoverlay .smartEditComponentX[data-smartedit-component-type='ContentSlot']\";\r\n    /* @ngInject */ CmsDragAndDropService.SOURCE_SELECTOR = \"#smarteditoverlay .smartEditComponentX[data-smartedit-component-type!='ContentSlot'] .movebutton\";\r\n    /* @ngInject */ CmsDragAndDropService.MORE_MENU_SOURCE_SELECTOR = '.movebutton';\r\n    /* @ngInject */ CmsDragAndDropService.SLOT_SELECTOR = \".smartEditComponentX[data-smartedit-component-type='ContentSlot']\";\r\n    /* @ngInject */ CmsDragAndDropService.COMPONENT_SELECTOR = \".smartEditComponentX[data-smartedit-component-type!='ContentSlot']\";\r\n    /* @ngInject */ CmsDragAndDropService.HINT_SELECTOR = '.overlayDropzone';\r\n    /* @ngInject */ CmsDragAndDropService.CSS_CLASSES = {\r\n        UI_HELPER_OVERLAY: 'overlayDnd',\r\n        DROPZONE: 'overlayDropzone',\r\n        DROPZONE_FULL: 'overlayDropzone--full',\r\n        DROPZONE_TOP: 'overlayDropzone--top',\r\n        DROPZONE_BOTTOM: 'overlayDropzone--bottom',\r\n        DROPZONE_LEFT: 'overlayDropzone--left',\r\n        DROPZONE_RIGHT: 'overlayDropzone--right',\r\n        DROPZONE_HOVERED: 'overlayDropzone--hovered',\r\n        DROPZONE_MAY_BE_ALLOWED: 'overlayDropzone--mayBeAllowed',\r\n        OVERLAY_IN_DRAG_DROP: 'smarteditoverlay_dndRendering',\r\n        COMPONENT_DRAGGED: 'component_dragged',\r\n        COMPONENT_DRAGGED_HOVERED: 'component_dragged_hovered',\r\n        SLOTS_MARKED: 'slot-marked',\r\n        SLOT_ALLOWED: 'over-slot-enabled',\r\n        SLOT_NOT_ALLOWED: 'over-slot-disabled',\r\n        SLOT_MAY_BE_ALLOWED: 'over-slot-maybeenabled'\r\n    };\r\n    /* @ngInject */ CmsDragAndDropService.DEFAULT_DRAG_IMG = '/images/contextualmenu_move_on.png';\r\n    /* @ngInject */ CmsDragAndDropService = /* @ngInject */ CmsDragAndDropService_1 = __decorate([\r\n        SeDowngradeService(),\r\n        __param(12, Inject(YJQUERY_TOKEN)),\r\n        __param(13, Inject(DOMAIN_TOKEN)),\r\n        __metadata(\"design:paramtypes\", [IAlertService,\r\n            AssetsService,\r\n            IBrowserService,\r\n            ComponentEditingFacade,\r\n            ComponentHandlerService,\r\n            DragAndDropService,\r\n            GatewayFactory,\r\n            TranslateService,\r\n            IPageContentSlotsComponentsRestService,\r\n            ISlotRestrictionsService,\r\n            SystemEventService,\r\n            IWaitDialogService, Function, String])\r\n    ], /* @ngInject */ CmsDragAndDropService);\r\n    return /* @ngInject */ CmsDragAndDropService;\r\n}());\r\nexport { /* @ngInject */ CmsDragAndDropService };\r\n//# sourceMappingURL=CmsDragAndDropServiceInner.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@ngx-translate/core@11.0.1_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@ngx-translate/core/ngx-translate-core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit/src/services/dragAndDrop/ComponentEditingFacade.ts"],"map":"{\"version\":3,\"file\":\"CmsDragAndDropServiceInner.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/dragAndDrop/CmsDragAndDropServiceInner.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit/services/dragAndDrop/CmsDragAndDropServiceInner.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"angular\" />\r\n/// <reference types=\"jquery\" />\r\n/// <reference types=\"eonasdan-bootstrap-datetimepicker\" />\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AssetsService, IPageContentSlotsComponentsRestService, ISlotRestrictionsService } from 'cmscommons';\r\nimport { ComponentHandlerService } from 'smartedit';\r\nimport { DragAndDropService, GatewayFactory, IAlertService, IBrowserService, IWaitDialogService, Payload, SystemEventService, TypedMap } from 'smarteditcommons';\r\nimport { ComponentEditingFacade } from './ComponentEditingFacade';\r\nexport interface CmsDragAndDropCachedComponentHint {\r\n    original: JQuery<HTMLElement>;\r\n    position: number;\r\n    rect: TypedMap<number>;\r\n}\r\nexport interface CmsDragAndDropCachedComponent {\r\n    id: string;\r\n    type: string;\r\n    original: JQuery<HTMLElement>;\r\n    position: number;\r\n    rect: TypedMap<number>;\r\n    hints: CmsDragAndDropCachedComponentHint[];\r\n}\r\nexport interface CmsDragAndDropCachedSlot {\r\n    id: string;\r\n    uuid: string;\r\n    original: JQuery<HTMLElement>;\r\n    /**\r\n     * The list of components contained in the slot, they must contain an \"id\" property\r\n     */\r\n    components: CmsDragAndDropCachedComponent[];\r\n    hint: {\r\n        original: JQuery<HTMLElement>;\r\n        rect: TypedMap<number>;\r\n    };\r\n    rect: TypedMap<number>;\r\n    isAllowed?: boolean;\r\n    mayBeAllowed?: boolean;\r\n}\r\nexport interface CmsDragAndDropDragInfo extends Payload {\r\n    /**\r\n     * The smartedit id of the component.\r\n     */\r\n    componentId: string;\r\n    componentUuid: string;\r\n    componentType: string;\r\n    slotUuid: string;\r\n    /**\r\n     * The smartedit id of the slot from which the component originates.\r\n     */\r\n    slotId: string;\r\n    slotOperationRelatedId: string;\r\n    slotOperationRelatedType: string;\r\n    /**\r\n     * The boolean that determines if the component should be cloned or not.\r\n     */\r\n    cloneOnDrop?: boolean;\r\n}\r\n/**\r\n * This service provides a rich drag and drop experience tailored for CMS operations.\r\n */\r\nexport declare class CmsDragAndDropService {\r\n    private alertService;\r\n    private assetsService;\r\n    private browserService;\r\n    private componentEditingFacade;\r\n    private componentHandlerService;\r\n    private dragAndDropService;\r\n    private gatewayFactory;\r\n    private translateService;\r\n    private pageContentSlotsComponentsRestService;\r\n    private slotRestrictionsService;\r\n    private systemEventService;\r\n    private waitDialogService;\r\n    private yjQuery;\r\n    private domain;\r\n    private static readonly CMS_DRAG_AND_DROP_ID;\r\n    private static readonly TARGET_SELECTOR;\r\n    private static readonly SOURCE_SELECTOR;\r\n    private static readonly MORE_MENU_SOURCE_SELECTOR;\r\n    private static readonly SLOT_SELECTOR;\r\n    private static readonly COMPONENT_SELECTOR;\r\n    private static readonly HINT_SELECTOR;\r\n    private static readonly CSS_CLASSES;\r\n    private static readonly DEFAULT_DRAG_IMG;\r\n    private cachedSlots;\r\n    private highlightedSlot;\r\n    private highlightedComponent;\r\n    private highlightedHint;\r\n    private dragInfo;\r\n    private overlayRenderedUnSubscribeFn;\r\n    private componentRemovedUnSubscribeFn;\r\n    private gateway;\r\n    private _window;\r\n    constructor(alertService: IAlertService, assetsService: AssetsService, browserService: IBrowserService, componentEditingFacade: ComponentEditingFacade, componentHandlerService: ComponentHandlerService, dragAndDropService: DragAndDropService, gatewayFactory: GatewayFactory, translateService: TranslateService, pageContentSlotsComponentsRestService: IPageContentSlotsComponentsRestService, slotRestrictionsService: ISlotRestrictionsService, systemEventService: SystemEventService, waitDialogService: IWaitDialogService, yjQuery: JQueryStatic, domain: string);\r\n    /**\r\n     * This method registers this drag and drop instance in SmartEdit.\r\n     */\r\n    register(): void;\r\n    /**\r\n     * This method unregisters this drag and drop instance from SmartEdit.\r\n     */\r\n    unregister(): void;\r\n    /**\r\n     * This method applies this drag and drop instance in the current page. After this method is executed,\r\n     * the user can start a drag and drop operation.\r\n     */\r\n    apply(): void;\r\n    /**\r\n     * This method updates this drag and drop instance in the current page. It is important to execute\r\n     * this method every time a draggable or droppable element is added or removed from the page DOM.\r\n     */\r\n    update(): void;\r\n    private onOverlayUpdate;\r\n    private onStart;\r\n    private onDragEnter;\r\n    private onDragOver;\r\n    private selectMouseOverElement;\r\n    private onDrop;\r\n    private getComponentPositionFromCachedSlot;\r\n    private onDragLeave;\r\n    private onStop;\r\n    /**\r\n     * This function returns the source of the image used as drag image. Currently, the\r\n     * image is only returned for Safari; all the other browsers display default images\r\n     * properly.\r\n     */\r\n    private getDragImageSrc;\r\n    private initializeDragOperation;\r\n    private cleanDragOperation;\r\n    private highlightSlot;\r\n    private addUIHelpers;\r\n    private cacheElements;\r\n    private clearHighlightedHint;\r\n    private clearHighlightedComponent;\r\n    private clearHighlightedSlot;\r\n    private isMouseInRegion;\r\n    private getElementRects;\r\n    private getWindowScrolling;\r\n    private scrollToModifiedSlot;\r\n    private getSelector;\r\n    /**\r\n     * When a PROCESS_COMPONENTS is occuring, it could remove the currently dragged component if this one is not in the viewport.\r\n     * To avoid having the dragged component and it's slot removed we mark then as \"KEEP_VISIBLE\" when the drag and drop start.\r\n     * On drag end, an event is sent to call a RESTART_PROCESS to add or remove the components according to their viewport visibility and the component and slot are marked as \"PROCESS\".\r\n     * Using yjQuery.each() here because of MiniCart component (among other slots/compoents) that have multiple occurences in DOM.\r\n     */\r\n    private toggleKeepVisibleComponentAndSlot;\r\n}\r\n"}}

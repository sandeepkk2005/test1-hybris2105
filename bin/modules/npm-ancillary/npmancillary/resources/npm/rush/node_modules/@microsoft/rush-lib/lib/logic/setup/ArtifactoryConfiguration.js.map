{"version":3,"file":"ArtifactoryConfiguration.js","sourceRoot":"","sources":["../../../src/logic/setup/ArtifactoryConfiguration.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;;;;;;;;;;;;;;;;;;;;AAE3D,2CAA6B;AAC7B,oEAAgF;AA0BhF;;;GAGG;AACH,MAAa,wBAAwB;IAQnC;;OAEG;IACH,YAAmB,YAAoB;QACrC,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;QAElC,IAAI,CAAC,UAAU,GAAG;YAChB,eAAe,EAAE;gBACf,OAAO,EAAE,KAAK;gBACd,WAAW,EAAE,EAAE;gBACf,qBAAqB,EAAE,EAAE;aAC1B;SACF,CAAC;QAEF,IAAI,8BAAU,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;YACzC,IAAI,CAAC,UAAU,GAAG,4BAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,EAAE,wBAAwB,CAAC,WAAW,CAAC,CAAC;SACtG;IACH,CAAC;IAED;;OAEG;IACH,IAAW,aAAa;QACtB,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;;AAhCH,4DAiCC;AAhCgB,oCAAW,GAAe,8BAAU,CAAC,QAAQ,CAC1D,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,yBAAyB,CAAC,CAC1E,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as path from 'path';\r\nimport { JsonFile, JsonSchema, FileSystem } from '@rushstack/node-core-library';\r\n\r\nexport interface IArtifactoryPackageRegistryJson {\r\n  enabled: boolean;\r\n  userNpmrcLinesToAdd?: string[];\r\n\r\n  registryUrl: string;\r\n  artifactoryWebsiteUrl: string;\r\n\r\n  messageOverrides?: {\r\n    introduction?: string;\r\n    obtainAnAccount?: string;\r\n    visitWebsite?: string;\r\n    locateUserName?: string;\r\n    locateApiKey?: string;\r\n  };\r\n}\r\n\r\n/**\r\n * This interface represents the raw artifactory.json file.\r\n * @beta\r\n */\r\nexport interface IArtifactoryJson {\r\n  packageRegistry: IArtifactoryPackageRegistryJson;\r\n}\r\n\r\n/**\r\n * Use this class to load the \"common/config/rush/artifactory.json\" config file.\r\n * It configures the \"rush setup\" command.\r\n */\r\nexport class ArtifactoryConfiguration {\r\n  private static _jsonSchema: JsonSchema = JsonSchema.fromFile(\r\n    path.resolve(__dirname, '..', '..', 'schemas', 'artifactory.schema.json')\r\n  );\r\n\r\n  private _setupJson: IArtifactoryJson;\r\n  private _jsonFileName: string;\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  public constructor(jsonFileName: string) {\r\n    this._jsonFileName = jsonFileName;\r\n\r\n    this._setupJson = {\r\n      packageRegistry: {\r\n        enabled: false,\r\n        registryUrl: '',\r\n        artifactoryWebsiteUrl: ''\r\n      }\r\n    };\r\n\r\n    if (FileSystem.exists(this._jsonFileName)) {\r\n      this._setupJson = JsonFile.loadAndValidate(this._jsonFileName, ArtifactoryConfiguration._jsonSchema);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the experiments configuration.\r\n   */\r\n  public get configuration(): Readonly<IArtifactoryJson> {\r\n    return this._setupJson;\r\n  }\r\n}\r\n"]}
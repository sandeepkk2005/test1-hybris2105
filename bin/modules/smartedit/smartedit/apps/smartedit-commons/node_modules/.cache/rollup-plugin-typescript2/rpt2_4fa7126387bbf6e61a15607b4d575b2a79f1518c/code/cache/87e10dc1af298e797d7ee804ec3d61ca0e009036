{"code":"//# sourceMappingURL=IProxiedService.js.map","references":[],"map":"{\"version\":3,\"file\":\"IProxiedService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/gateway/IProxiedService.ts\"],\"names\":[],\"mappings\":\"\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/services/gateway/IProxiedService.d.ts","writeByteOrderMark":false,"text":"/**\r\n * The IProxiedService interface represents a service that has one or more methods proxied over the\r\n * {@link GatewayProxy}.\r\n *\r\n */\r\nexport interface IProxiedService {\r\n    /**\r\n     * It is a unique string used to create the gateway communications channel between the smartedit and\r\n     * smarteditContainer applications. This value should be unique to the application.\r\n     *\r\n     * A typical implementation would look as follows:\r\n     *\r\n     * Note: We use abstract class as a pseudo-interface for proxied services, due to technical constraints.\r\n     *\r\n     * ### Example\r\n     *\r\n     *      // commons/.../IMyService.ts\r\n     *      abstract class IMyService implements IProxiedService {\r\n     *\r\n     *          get gatewayId(): string {\r\n     *              return 'IMyService';\r\n     *      };\r\n     *\r\n     *      myMethod(): string {\r\n     *          'proxyFunction';\r\n     *          return null;\r\n     *      }\r\n     *\r\n     */\r\n    readonly gatewayId?: string;\r\n    [index: string]: any;\r\n}\r\n"}}

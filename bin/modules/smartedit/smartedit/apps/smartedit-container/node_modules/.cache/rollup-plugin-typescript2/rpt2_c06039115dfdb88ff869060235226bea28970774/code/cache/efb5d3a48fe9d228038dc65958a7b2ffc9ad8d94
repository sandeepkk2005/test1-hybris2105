{"code":"import { __decorate, __extends, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport * as lodash from 'lodash';\r\nimport { catalogEvictionTag, pageChangeEvictionTag, rarelyChangingContent, Cached, ContentCatalogRestService, CONTEXT_CATALOG, CONTEXT_CATALOG_VERSION, CONTEXT_SITE_ID, GatewayProxied, ICatalogService, ISharedDataService, IUrlService, LogService, ProductCatalogRestService, SeDowngradeService, IStorageService, EXPERIENCE_STORAGE_KEY } from 'smarteditcommons';\r\nimport { SiteService } from './SiteService';\r\n/** @internal */\r\nvar /* @ngInject */ CatalogService = /** @class */ (function (_super) {\r\n    __extends(/* @ngInject */ CatalogService, _super);\r\n    function /* @ngInject */ CatalogService(logService, sharedDataService, siteService, urlService, contentCatalogRestService, productCatalogRestService, storageService) {\r\n        var _this = _super.call(this) || this;\r\n        _this.logService = logService;\r\n        _this.sharedDataService = sharedDataService;\r\n        _this.siteService = siteService;\r\n        _this.urlService = urlService;\r\n        _this.contentCatalogRestService = contentCatalogRestService;\r\n        _this.productCatalogRestService = productCatalogRestService;\r\n        _this.storageService = storageService;\r\n        _this.SELECTED_SITE_COOKIE_NAME = 'seselectedsite';\r\n        return _this;\r\n    }\r\n    /* @ngInject */ CatalogService.prototype.getContentCatalogsForSite = function (siteUID) {\r\n        return this.contentCatalogRestService\r\n            .get({\r\n            siteUID: siteUID\r\n        })\r\n            .then(function (catalogs) { return catalogs.catalogs; });\r\n    };\r\n    /* @ngInject */ CatalogService.prototype.getCatalogByVersion = function (siteUID, catalogVersionName) {\r\n        return this.getContentCatalogsForSite(siteUID).then(function (catalogs) {\r\n            return catalogs.filter(function (catalog) {\r\n                return catalog.versions.some(function (currentCatalogVersion) {\r\n                    return currentCatalogVersion.version === catalogVersionName;\r\n                });\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ CatalogService.prototype.isContentCatalogVersionNonActive = function (_uriContext) {\r\n        var _this = this;\r\n        return this._getContext(_uriContext).then(function (uriContext) {\r\n            return _this.getContentCatalogsForSite(uriContext[CONTEXT_SITE_ID]).then(function (catalogs) {\r\n                var currentCatalog = catalogs.find(function (catalog) { return catalog.catalogId === uriContext[CONTEXT_CATALOG]; });\r\n                var currentCatalogVersion = currentCatalog\r\n                    ? currentCatalog.versions.find(function (catalogVersion) {\r\n                        return catalogVersion.version === uriContext[CONTEXT_CATALOG_VERSION];\r\n                    })\r\n                    : null;\r\n                if (!currentCatalogVersion) {\r\n                    throw new Error(\"Invalid uriContext \" + uriContext + \", cannot find catalog version.\");\r\n                }\r\n                return !currentCatalogVersion.active;\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ CatalogService.prototype.getContentCatalogActiveVersion = function (_uriContext) {\r\n        var _this = this;\r\n        return this._getContext(_uriContext).then(function (uriContext) {\r\n            return _this.getContentCatalogsForSite(uriContext[CONTEXT_SITE_ID]).then(function (catalogs) {\r\n                var currentCatalog = catalogs.find(function (catalog) { return catalog.catalogId === uriContext[CONTEXT_CATALOG]; });\r\n                var activeCatalogVersion = currentCatalog\r\n                    ? currentCatalog.versions.find(function (catalogVersion) { return catalogVersion.active; })\r\n                    : null;\r\n                if (!activeCatalogVersion) {\r\n                    throw new Error(\"Invalid uriContext \" + uriContext + \", cannot find catalog version.\");\r\n                }\r\n                return activeCatalogVersion.version;\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ CatalogService.prototype.getActiveContentCatalogVersionByCatalogId = function (contentCatalogId) {\r\n        var _this = this;\r\n        return this._getContext().then(function (uriContext) {\r\n            return _this.getContentCatalogsForSite(uriContext[CONTEXT_SITE_ID]).then(function (catalogs) {\r\n                var currentCatalog = catalogs.find(function (catalog) { return catalog.catalogId === contentCatalogId; });\r\n                var currentCatalogVersion = currentCatalog\r\n                    ? currentCatalog.versions.find(function (catalogVersion) { return catalogVersion.active; })\r\n                    : null;\r\n                if (!currentCatalogVersion) {\r\n                    throw new Error(\"Invalid content catalog \" + contentCatalogId + \", cannot find any active catalog version.\");\r\n                }\r\n                return currentCatalogVersion.version;\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ CatalogService.prototype.getContentCatalogVersion = function (_uriContext) {\r\n        var _this = this;\r\n        return this._getContext(_uriContext).then(function (uriContext) {\r\n            return _this.getContentCatalogsForSite(uriContext[CONTEXT_SITE_ID]).then(function (catalogs) {\r\n                var catalog = catalogs.find(function (c) { return c.catalogId === uriContext[CONTEXT_CATALOG]; });\r\n                if (!catalog) {\r\n                    throw new Error('no catalog ' +\r\n                        uriContext[CONTEXT_CATALOG] +\r\n                        ' found for site ' +\r\n                        uriContext[CONTEXT_SITE_ID]);\r\n                }\r\n                var catalogVersion = catalog.versions.find(function (version) { return version.version === uriContext[CONTEXT_CATALOG_VERSION]; });\r\n                if (!catalogVersion) {\r\n                    throw new Error(\"no catalogVersion \" + uriContext[CONTEXT_CATALOG_VERSION] + \" for catalog \" + uriContext[CONTEXT_CATALOG] + \" and site \" + uriContext[CONTEXT_SITE_ID]);\r\n                }\r\n                catalogVersion.catalogName = catalog.name;\r\n                catalogVersion.catalogId = catalog.catalogId;\r\n                return catalogVersion;\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ CatalogService.prototype.getCurrentSiteID = function () {\r\n        return this.storageService.getValueFromLocalStorage(this.SELECTED_SITE_COOKIE_NAME, false);\r\n    };\r\n    /**\r\n     * Finds the ID of the default site configured for the provided content catalog.\r\n     * @param contentCatalogId The UID of content catalog for which to retrieve its default site ID.\r\n     * @returns The ID of the default site found.\r\n     */\r\n    /* @ngInject */ CatalogService.prototype.getDefaultSiteForContentCatalog = function (contentCatalogId) {\r\n        var _this = this;\r\n        return this.siteService.getSites().then(function (sites) {\r\n            var defaultSitesForCatalog = sites.filter(function (site) {\r\n                // ContentCatalogs in the site object are sorted. The last one is considered\r\n                // the default one for a given site.\r\n                var siteDefaultContentCatalog = lodash.last(site.contentCatalogs);\r\n                return siteDefaultContentCatalog && siteDefaultContentCatalog === contentCatalogId;\r\n            });\r\n            if (defaultSitesForCatalog.length === 0) {\r\n                _this.logService.warn(\"[catalogService] - No default site found for content catalog \" + contentCatalogId);\r\n            }\r\n            else if (defaultSitesForCatalog.length > 1) {\r\n                _this.logService.warn(\"[catalogService] - Many default sites found for content catalog \" + contentCatalogId);\r\n            }\r\n            return defaultSitesForCatalog[0];\r\n        });\r\n    };\r\n    /* @ngInject */ CatalogService.prototype.getCatalogVersionByUuid = function (catalogVersionUuid, siteId) {\r\n        var _this = this;\r\n        return this.getAllContentCatalogsGroupedById().then(function (contentCatalogsGrouped) {\r\n            var catalogs = lodash.reduce(contentCatalogsGrouped, function (allCatalogs, siteCatalogs) { return allCatalogs.concat(siteCatalogs); }, []);\r\n            var catalogVersionFound = lodash\r\n                .flatten(catalogs.map(function (catalog) {\r\n                return lodash.cloneDeep(catalog.versions).map(function (version) {\r\n                    version.catalogName = catalog.name;\r\n                    version.catalogId = catalog.catalogId;\r\n                    return version;\r\n                });\r\n            }))\r\n                .filter(function (version) {\r\n                return catalogVersionUuid === version.uuid &&\r\n                    (!siteId || siteId === version.siteDescriptor.uid);\r\n            })[0];\r\n            if (!catalogVersionFound) {\r\n                var errorMessage = 'Cannot find catalog version with UUID ' +\r\n                    catalogVersionUuid +\r\n                    (siteId ? ' in site ' + siteId : '');\r\n                throw new Error(errorMessage);\r\n            }\r\n            return _this.getCurrentSiteID().then(function (defaultSiteID) {\r\n                catalogVersionFound.siteId = defaultSiteID;\r\n                return catalogVersionFound;\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ CatalogService.prototype.getAllContentCatalogsGroupedById = function () {\r\n        var _this = this;\r\n        return this.siteService.getSites().then(function (sites) {\r\n            var promisesToResolve = sites.map(function (site) {\r\n                return _this.getContentCatalogsForSite(site.uid).then(function (catalogs) {\r\n                    catalogs.forEach(function (catalog) {\r\n                        catalog.versions = catalog.versions.map(function (catalogVersion) {\r\n                            catalogVersion.siteDescriptor = site;\r\n                            return catalogVersion;\r\n                        });\r\n                    });\r\n                    return catalogs;\r\n                });\r\n            });\r\n            return Promise.all(promisesToResolve);\r\n        });\r\n    };\r\n    /* @ngInject */ CatalogService.prototype.getProductCatalogsBySiteKey = function (siteUIDKey) {\r\n        var _this = this;\r\n        return this._getContext().then(function (uriContext) {\r\n            return _this.getProductCatalogsForSite(uriContext[siteUIDKey]);\r\n        });\r\n    };\r\n    /* =====================================================================================================================\r\n      * `getProductCatalogsBySite` is to get product catalogs by site value\r\n      * `siteUIDValue` - is the site value rather than site key\r\n      * if you want to get product catalogs by site key, please refer to function `getProductCatalogsBySiteKey`\r\n       =====================================================================================================================\r\n    */\r\n    // eslint-disable-next-line @typescript-eslint/member-ordering\r\n    /* @ngInject */ CatalogService.prototype.getProductCatalogsForSite = function (siteUIDValue) {\r\n        return this.productCatalogRestService\r\n            .get({\r\n            siteUID: siteUIDValue\r\n        })\r\n            .then(function (catalogs) { return catalogs.catalogs; });\r\n    };\r\n    /* @ngInject */ CatalogService.prototype.getActiveProductCatalogVersionByCatalogId = function (productCatalogId) {\r\n        return this.getProductCatalogsBySiteKey(CONTEXT_SITE_ID).then(function (catalogs) {\r\n            var currentCatalog = catalogs.find(function (catalog) { return catalog.catalogId === productCatalogId; });\r\n            var currentCatalogVersion = currentCatalog\r\n                ? currentCatalog.versions.find(function (catalogVersion) { return catalogVersion.active; })\r\n                : null;\r\n            if (!currentCatalogVersion) {\r\n                throw new Error(\"Invalid product catalog \" + productCatalogId + \", cannot find any active catalog version.\");\r\n            }\r\n            return currentCatalogVersion.version;\r\n        });\r\n    };\r\n    // =====================================================================================================================\r\n    //  Helper Methods\r\n    // =====================================================================================================================\r\n    /* @ngInject */ CatalogService.prototype.getCatalogVersionUUid = function (_uriContext) {\r\n        return this.getContentCatalogVersion(_uriContext).then(function (catalogVersion) { return catalogVersion.uuid; });\r\n    };\r\n    /* @ngInject */ CatalogService.prototype.retrieveUriContext = function (_uriContext) {\r\n        return this._getContext(_uriContext);\r\n    };\r\n    /* @ngInject */ CatalogService.prototype.returnActiveCatalogVersionUIDs = function (catalogs) {\r\n        return catalogs.reduce(function (accumulator, catalog) {\r\n            accumulator.push(catalog.versions.find(function (version) { return version.active; }).uuid);\r\n            return accumulator;\r\n        }, []);\r\n    };\r\n    // eslint-disable-next-line @typescript-eslint/member-ordering\r\n    /* @ngInject */ CatalogService.prototype.isCurrentCatalogMultiCountry = function () {\r\n        var _this = this;\r\n        return this.sharedDataService.get(EXPERIENCE_STORAGE_KEY).then(function (experience) {\r\n            if (experience && experience.siteDescriptor && experience.catalogDescriptor) {\r\n                var siteId = experience.siteDescriptor.uid;\r\n                var catalogId_1 = experience.catalogDescriptor.catalogId;\r\n                return _this.getContentCatalogsForSite(siteId).then(function (catalogs) {\r\n                    var catalog = catalogs.find(function (obj) { return obj.catalogId === catalogId_1; });\r\n                    return Promise.resolve(catalog && catalog.parents && catalog.parents.length ? true : false);\r\n                });\r\n            }\r\n            return false;\r\n        });\r\n    };\r\n    /* @ngInject */ CatalogService.prototype._getContext = function (_uriContext) {\r\n        var _this = this;\r\n        // TODO: once refactored by Nick, use definition of experience\r\n        return _uriContext\r\n            ? Promise.resolve(_uriContext)\r\n            : this.sharedDataService.get(EXPERIENCE_STORAGE_KEY).then(function (experience) {\r\n                if (!experience) {\r\n                    throw new Error('catalogService was not provided with a uriContext and could not retrive an experience from sharedDataService');\r\n                }\r\n                return _this.urlService.buildUriContext(experience.siteDescriptor.uid, experience.catalogDescriptor.catalogId, experience.catalogDescriptor.catalogVersion);\r\n            });\r\n    };\r\n    __decorate([\r\n        Cached({ actions: [rarelyChangingContent], tags: [catalogEvictionTag] }),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], /* @ngInject */ CatalogService.prototype, \"getProductCatalogsForSite\", null);\r\n    __decorate([\r\n        Cached({ actions: [rarelyChangingContent], tags: [pageChangeEvictionTag] }),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", []),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], /* @ngInject */ CatalogService.prototype, \"isCurrentCatalogMultiCountry\", null);\r\n    /* @ngInject */ CatalogService = __decorate([\r\n        SeDowngradeService(ICatalogService),\r\n        GatewayProxied(),\r\n        __metadata(\"design:paramtypes\", [LogService,\r\n            ISharedDataService,\r\n            SiteService,\r\n            IUrlService,\r\n            ContentCatalogRestService,\r\n            ProductCatalogRestService,\r\n            IStorageService])\r\n    ], /* @ngInject */ CatalogService);\r\n    return /* @ngInject */ CatalogService;\r\n}(ICatalogService));\r\nexport { /* @ngInject */ CatalogService };\r\n//# sourceMappingURL=CatalogServiceOuter.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types/lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/src/services/SiteService.ts"],"map":"{\"version\":3,\"file\":\"CatalogServiceOuter.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/services/CatalogServiceOuter.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/services/CatalogServiceOuter.d.ts","writeByteOrderMark":false,"text":"import { ContentCatalogRestService, IBaseCatalog, IBaseCatalogVersion, ICatalog, ICatalogService, ICatalogVersion, ISharedDataService, ISite, IUriContext, IUrlService, LogService, ProductCatalogRestService, IStorageService } from 'smarteditcommons';\r\nimport { SiteService } from './SiteService';\r\n/** @internal */\r\nexport declare class CatalogService extends ICatalogService {\r\n    private logService;\r\n    private sharedDataService;\r\n    private siteService;\r\n    private urlService;\r\n    private contentCatalogRestService;\r\n    private productCatalogRestService;\r\n    private storageService;\r\n    private SELECTED_SITE_COOKIE_NAME;\r\n    constructor(logService: LogService, sharedDataService: ISharedDataService, siteService: SiteService, urlService: IUrlService, contentCatalogRestService: ContentCatalogRestService, productCatalogRestService: ProductCatalogRestService, storageService: IStorageService);\r\n    getContentCatalogsForSite(siteUID: string): Promise<IBaseCatalog[]>;\r\n    getCatalogByVersion(siteUID: string, catalogVersionName: string): Promise<IBaseCatalog[]>;\r\n    isContentCatalogVersionNonActive(_uriContext?: IUriContext): Promise<boolean>;\r\n    getContentCatalogActiveVersion(_uriContext?: IUriContext): Promise<string>;\r\n    getActiveContentCatalogVersionByCatalogId(contentCatalogId: string): Promise<string>;\r\n    getContentCatalogVersion(_uriContext?: IUriContext): Promise<IBaseCatalogVersion>;\r\n    getCurrentSiteID(): Promise<string>;\r\n    /**\r\n     * Finds the ID of the default site configured for the provided content catalog.\r\n     * @param contentCatalogId The UID of content catalog for which to retrieve its default site ID.\r\n     * @returns The ID of the default site found.\r\n     */\r\n    getDefaultSiteForContentCatalog(contentCatalogId: string): Promise<ISite>;\r\n    getCatalogVersionByUuid(catalogVersionUuid: string, siteId?: string): Promise<ICatalogVersion>;\r\n    getAllContentCatalogsGroupedById(): Promise<ICatalog[][]>;\r\n    getProductCatalogsBySiteKey(siteUIDKey: string): Promise<IBaseCatalog[]>;\r\n    getProductCatalogsForSite(siteUIDValue: string): Promise<IBaseCatalog[]>;\r\n    getActiveProductCatalogVersionByCatalogId(productCatalogId: string): Promise<string>;\r\n    getCatalogVersionUUid(_uriContext?: IUriContext): Promise<string>;\r\n    retrieveUriContext(_uriContext?: IUriContext): Promise<IUriContext>;\r\n    returnActiveCatalogVersionUIDs(catalogs: ICatalog[]): string[];\r\n    isCurrentCatalogMultiCountry(): Promise<boolean>;\r\n    private _getContext;\r\n}\r\n"}}

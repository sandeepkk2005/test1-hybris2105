{"code":"import { __decorate, __metadata, __param } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, HostListener, Inject, ViewChild } from '@angular/core';\r\nimport { SeDowngradeComponent } from '../../di';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"PreventVerticalOverflowComponent\", {\r\n    selector: 'se-prevent-vertical-overflow',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    template: \"\\n        <div #container [ngStyle]=\\\"containerStyle\\\">\\n            <ng-content></ng-content>\\n        </div>\\n    \"\r\n});\r\n/**\r\n * Component used to detect whether it's children are vertically overflowing the document.\r\n *\r\n * In case of overflow it sets it's max-height to the difference between top position and document bottom, and enables scrolling.\r\n */\r\nvar /* @ngInject */ PreventVerticalOverflowComponent = /** @class */ (function () {\r\n    function /* @ngInject */ PreventVerticalOverflowComponent(document, cdr) {\r\n        this.document = document;\r\n        this.cdr = cdr;\r\n        this.containerStyle = {\r\n            'max-height.px': null,\r\n            overflow: null\r\n        };\r\n    }\r\n    /* @ngInject */ PreventVerticalOverflowComponent.prototype.onWindowResize = function () {\r\n        if (this.containerElement) {\r\n            this.onResize();\r\n        }\r\n    };\r\n    /* @ngInject */ PreventVerticalOverflowComponent.prototype.ngAfterViewInit = function () {\r\n        var _this = this;\r\n        // when user opens popover, it will be called once to check for overflow\r\n        this.observer = new IntersectionObserver(function (_a) {\r\n            var event = _a[0];\r\n            if (event.isIntersecting) {\r\n                _this.onResize();\r\n            }\r\n        }, { root: this.document, threshold: 0 });\r\n        this.observer.observe(this.containerElement.nativeElement);\r\n    };\r\n    /* @ngInject */ PreventVerticalOverflowComponent.prototype.ngOnDestroy = function () {\r\n        this.observer.unobserve(this.containerElement.nativeElement);\r\n    };\r\n    /* @ngInject */ PreventVerticalOverflowComponent.prototype.onResize = function () {\r\n        var _a = this.getContainerBoundingClientRect(), top = _a.top, height = _a.height;\r\n        // popover is not opened\r\n        if (top === 0 && height === 0) {\r\n            return;\r\n        }\r\n        this.preventOverflow(top, height);\r\n    };\r\n    /* @ngInject */ PreventVerticalOverflowComponent.prototype.preventOverflow = function (containerTop, containerHeight) {\r\n        var didPrevent = this.preventIfOverflowing(containerTop, containerHeight);\r\n        // If I zoom out, \"didPrevent\" may return false because it has set overflow and max-height.\r\n        // In such a case, I need either to stop preventing overflow or stretch the container height for better UX.\r\n        // To achieve that, I display it without max-height being set and then I check again whether it is overflowing.\r\n        // If it is, I stretch the container. If it doesn't, remove max-height and overflow styles so it sets the height based on its content.\r\n        if (!didPrevent && this.containerStyle['max-height.px']) {\r\n            this.reset();\r\n            var _a = this.getContainerBoundingClientRect(), top_1 = _a.top, height = _a.height;\r\n            this.preventIfOverflowing(top_1, height);\r\n        }\r\n    };\r\n    /* @ngInject */ PreventVerticalOverflowComponent.prototype.preventIfOverflowing = function (top, height) {\r\n        if (this.isOverflowing(top, height)) {\r\n            this.prevent(top);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /* @ngInject */ PreventVerticalOverflowComponent.prototype.isOverflowing = function (top, height) {\r\n        var documentHeight = this.getDocumentHeight();\r\n        return documentHeight < top + height;\r\n    };\r\n    /* @ngInject */ PreventVerticalOverflowComponent.prototype.prevent = function (elementTop) {\r\n        var documentHeight = this.getDocumentHeight();\r\n        var maxHeight = documentHeight - elementTop;\r\n        this.containerStyle['max-height.px'] = maxHeight;\r\n        this.containerStyle.overflow = 'auto';\r\n        this.cdr.detectChanges();\r\n    };\r\n    /* @ngInject */ PreventVerticalOverflowComponent.prototype.reset = function () {\r\n        this.containerStyle['max-height.px'] = null;\r\n        this.containerStyle.overflow = null;\r\n        this.cdr.detectChanges();\r\n    };\r\n    /* @ngInject */ PreventVerticalOverflowComponent.prototype.getContainerBoundingClientRect = function () {\r\n        return this.containerElement.nativeElement.getBoundingClientRect();\r\n    };\r\n    /* @ngInject */ PreventVerticalOverflowComponent.prototype.getDocumentHeight = function () {\r\n        var height = this.document.documentElement.getBoundingClientRect().height;\r\n        return height;\r\n    };\r\n    __decorate([\r\n        ViewChild('container', { static: false }),\r\n        __metadata(\"design:type\", ElementRef)\r\n    ], /* @ngInject */ PreventVerticalOverflowComponent.prototype, \"containerElement\", void 0);\r\n    __decorate([\r\n        HostListener('window:resize'),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", []),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], /* @ngInject */ PreventVerticalOverflowComponent.prototype, \"onWindowResize\", null);\r\n    /* @ngInject */ PreventVerticalOverflowComponent = __decorate([\r\n        SeDowngradeComponent(),\r\n        Component({\r\n            selector: 'se-prevent-vertical-overflow',\r\n            changeDetection: ChangeDetectionStrategy.OnPush,\r\n            template: \"\\n        <div #container [ngStyle]=\\\"containerStyle\\\">\\n            <ng-content></ng-content>\\n        </div>\\n    \"\r\n        }),\r\n        __param(0, Inject(DOCUMENT)),\r\n        __metadata(\"design:paramtypes\", [Document, ChangeDetectorRef])\r\n    ], /* @ngInject */ PreventVerticalOverflowComponent);\r\n    return /* @ngInject */ PreventVerticalOverflowComponent;\r\n}());\r\nexport { /* @ngInject */ PreventVerticalOverflowComponent };\r\n//# sourceMappingURL=PreventVerticalOverflowComponent.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/common@8.2.14_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@angular/common/common.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/di/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/dtos/index.ts"],"map":"{\"version\":3,\"file\":\"PreventVerticalOverflowComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/preventVerticalOverflow/PreventVerticalOverflowComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/components/preventVerticalOverflow/PreventVerticalOverflowComponent.d.ts","writeByteOrderMark":false,"text":"import { AfterViewInit, ChangeDetectorRef, ElementRef, OnDestroy } from '@angular/core';\r\nimport { Nullable } from '../../dtos';\r\n/**\r\n * Component used to detect whether it's children are vertically overflowing the document.\r\n *\r\n * In case of overflow it sets it's max-height to the difference between top position and document bottom, and enables scrolling.\r\n */\r\nexport declare class PreventVerticalOverflowComponent implements AfterViewInit, OnDestroy {\r\n    private document;\r\n    private cdr;\r\n    containerElement: ElementRef<HTMLDivElement>;\r\n    containerStyle: {\r\n        'max-height.px': Nullable<number>;\r\n        overflow: Nullable<string>;\r\n    };\r\n    private observer;\r\n    constructor(document: Document, cdr: ChangeDetectorRef);\r\n    onWindowResize(): void;\r\n    ngAfterViewInit(): void;\r\n    ngOnDestroy(): void;\r\n    private onResize;\r\n    private preventOverflow;\r\n    private preventIfOverflowing;\r\n    private isOverflowing;\r\n    private prevent;\r\n    private reset;\r\n    private getContainerBoundingClientRect;\r\n    private getDocumentHeight;\r\n}\r\n"}}

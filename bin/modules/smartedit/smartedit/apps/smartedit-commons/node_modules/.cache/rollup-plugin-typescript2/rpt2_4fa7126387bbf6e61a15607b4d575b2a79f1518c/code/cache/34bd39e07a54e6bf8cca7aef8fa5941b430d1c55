{"code":"import { __spreadArrays } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport * as angular from 'angular';\r\nimport { flatten } from 'lodash';\r\nvar SliderPanelZIndexHelper = /** @class */ (function () {\r\n    function SliderPanelZIndexHelper() {\r\n    }\r\n    /** Retrieve a highest value from array of zIndex integers. */\r\n    SliderPanelZIndexHelper.prototype.getHighestZIndex = function (node) {\r\n        var _this = this;\r\n        return Math.max.apply(Math, this.getChildrenNodesFromTreeOrLeaf(node[0])\r\n            .filter(function (elem) { return _this.filterBlacklistedNodes(elem); })\r\n            .map(function (elem) { return _this.mapToZIndexIntegers(elem); }));\r\n    };\r\n    SliderPanelZIndexHelper.prototype.filterBlacklistedNodes = function (elem) {\r\n        return !SliderPanelZIndexHelper.BLACKLISTED_NODE_NAMES.has(elem.nodeName);\r\n    };\r\n    /** Retrieve zIndex integer value from node, fallback with 0 value in case of NaN. */\r\n    SliderPanelZIndexHelper.prototype.mapToZIndexIntegers = function (elem) {\r\n        return parseInt(angular.element(elem).css('z-index'), 10) || 0;\r\n    };\r\n    /** Return recurring flat array of node and it's children. */\r\n    SliderPanelZIndexHelper.prototype.getChildrenNodesFromTreeOrLeaf = function (node) {\r\n        var _this = this;\r\n        return __spreadArrays([\r\n            node\r\n        ], flatten(Array.from(node.children).map(function (child) {\r\n            return _this.getChildrenNodesFromTreeOrLeaf(child);\r\n        })));\r\n    };\r\n    SliderPanelZIndexHelper.BLACKLISTED_NODE_NAMES = new Set(['SCRIPT', 'LINK', 'BASE']);\r\n    return SliderPanelZIndexHelper;\r\n}());\r\nexport { SliderPanelZIndexHelper };\r\n//# sourceMappingURL=SliderPanelZIndexHelper.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types/angular@1.7.3/node_modules/@types/angular/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types/lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts"],"map":"{\"version\":3,\"file\":\"SliderPanelZIndexHelper.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/sliderPanel/SliderPanelZIndexHelper.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,KAAK,OAAO,MAAM,SAAS,CAAC;AACnC,OAAO,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAC;AAEjC;IAAA;IAgCA,CAAC;IA7BG,8DAA8D;IACvD,kDAAgB,GAAvB,UAAwB,IAAyB;QAAjD,iBAMC;QALG,OAAO,IAAI,CAAC,GAAG,OAAR,IAAI,EACJ,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aAC1C,MAAM,CAAC,UAAC,IAAI,IAAK,OAAA,KAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAjC,CAAiC,CAAC;aACnD,GAAG,CAAC,UAAC,IAAiB,IAAK,OAAA,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAA9B,CAA8B,CAAC,EACjE;IACN,CAAC;IAEO,wDAAsB,GAA9B,UAA+B,IAAiB;QAC5C,OAAO,CAAC,uBAAuB,CAAC,sBAAsB,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC9E,CAAC;IAED,qFAAqF;IAC7E,qDAAmB,GAA3B,UAA4B,IAAiB;QACzC,OAAO,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC;IACnE,CAAC;IAED,6DAA6D;IACrD,gEAA8B,GAAtC,UAAuC,IAAiB;QAAxD,iBASC;QARG;YACI,IAAI;WACD,OAAO,CACN,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,UAAC,KAAkB;YAC7C,OAAA,KAAI,CAAC,8BAA8B,CAAC,KAAK,CAAC;QAA1C,CAA0C,CAC7C,CACJ,EACH;IACN,CAAC;IA9BM,8CAAsB,GAAgB,IAAI,GAAG,CAAC,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;IA+BrF,8BAAC;CAAA,AAhCD,IAgCC;SAhCY,uBAAuB\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/components/sliderPanel/SliderPanelZIndexHelper.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"angular\" />\r\n/// <reference types=\"jquery\" />\r\n/// <reference types=\"eonasdan-bootstrap-datetimepicker\" />\r\nexport declare class SliderPanelZIndexHelper {\r\n    static BLACKLISTED_NODE_NAMES: Set<string>;\r\n    /** Retrieve a highest value from array of zIndex integers. */\r\n    getHighestZIndex(node: JQuery<HTMLElement>): number;\r\n    private filterBlacklistedNodes;\r\n    /** Retrieve zIndex integer value from node, fallback with 0 value in case of NaN. */\r\n    private mapToZIndexIntegers;\r\n    /** Return recurring flat array of node and it's children. */\r\n    private getChildrenNodesFromTreeOrLeaf;\r\n}\r\n"}}

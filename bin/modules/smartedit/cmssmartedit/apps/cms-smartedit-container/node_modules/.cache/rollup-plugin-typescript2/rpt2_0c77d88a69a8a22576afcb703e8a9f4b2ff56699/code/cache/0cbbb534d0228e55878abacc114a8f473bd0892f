{"code":"import { __awaiter, __decorate, __generator, __metadata, __spreadArrays } from \"tslib\";\r\nimport { Component, EventEmitter, Input, Output, Type } from '@angular/core';\r\nimport { clone } from 'lodash';\r\nimport { SeDowngradeComponent } from 'smarteditcommons';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"ItemSelectorPanelComponent\", {\r\n    selector: 'se-item-selector-panel',\r\n    template: \"<se-slider-panel [sliderPanelConfiguration]=\\\"panelConfig\\\" [(sliderPanelHide)]=\\\"hidePanel\\\" [(sliderPanelShow)]=\\\"showPanel\\\" class=\\\"se-item-selector-panel\\\"><div class=\\\"se-item-selector-panel__content\\\" *ngIf=\\\"catalogs.length > 0\\\"><div *ngIf=\\\"catalogs.length > 1\\\" class=\\\"se-item-selector-panel__content__item\\\"><label class=\\\"se-control-label\\\" translate=\\\"se.cms.catalogaware.panel.catalogs.label\\\"></label><se-select id=\\\"se-catalog-selector-dropdown\\\" class=\\\"se-item-selector-panel__content__catalogs__yselect\\\" [(model)]=\\\"catalogInfo.catalogId\\\" [fetchStrategy]=\\\"catalogSelectorFetchStrategy\\\" [onChange]=\\\"onCatalogSelectorChange\\\"></se-select><label>{{ catalogInfo.name | seL10n | async }}</label></div><div class=\\\"se-item-selector-panel__content__item\\\"><label class=\\\"se-control-label\\\" translate=\\\"se.cms.catalogaware.panel.catalogsversion.label\\\"></label><se-select id=\\\"se-catalog-version-selector-dropdown\\\" class=\\\"se-item-selector-panel__content__catalog-version__yselect\\\" [(model)]=\\\"catalogInfo.catalogVersion\\\" [fetchStrategy]=\\\"catalogVersionSelectorFetchStrategy\\\" [onChange]=\\\"onCatalogVersionSelectorChange\\\" [searchEnabled]=\\\"false\\\" [(reset)]=\\\"resetCatalogVersionSelector\\\"></se-select></div><div class=\\\"se-item-selector-panel__content__item\\\" *ngIf=\\\"catalogInfo.catalogVersion\\\"><label class=\\\"se-control-label\\\">{{ catalogItemTypeI18nKey }}</label><se-select id=\\\"se-items-selector-dropdown\\\" [multiSelect]=\\\"true\\\" [controls]=\\\"true\\\" [(model)]=\\\"internalItemsSelected\\\" [onChange]=\\\"onItemsSelectorChange\\\" [fetchStrategy]=\\\"itemsSelectorFetchStrategy\\\" [(reset)]=\\\"resetItemsListSelector\\\" [itemComponent]=\\\"itemComponent\\\" [isReadOnly]=\\\"!isItemSelectorEnabled()\\\"></se-select></div></div></se-slider-panel>\"\r\n});\r\nvar /* @ngInject */ ItemSelectorPanelComponent = /** @class */ (function () {\r\n    function /* @ngInject */ ItemSelectorPanelComponent() {\r\n        this.onChange = new EventEmitter();\r\n        this.showPanelChange = new EventEmitter();\r\n        this.maxNumItems = 0;\r\n        this.catalogs = [];\r\n        this.catalogInfo = {};\r\n        this.saveButtonDisabled = true;\r\n        this.internalItemsSelected = [];\r\n        this.initOnCatalogSelectorChange();\r\n        this.initOnCatalogVersionSelectorChange();\r\n        this.initOnItemsSelectorChange();\r\n    }\r\n    /* @ngInject */ ItemSelectorPanelComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.panelConfig = {\r\n            cssSelector: '#y-modal-dialog',\r\n            noGreyedOutOverlay: true,\r\n            modal: {\r\n                title: this.catalogItemTypeI18nKey,\r\n                showDismissButton: false,\r\n                cancel: {\r\n                    onClick: function () { return _this.cancel(); },\r\n                    label: 'se.cms.catalogaware.panel.button.cancel',\r\n                    isDisabledFn: function () { return false; }\r\n                },\r\n                save: {\r\n                    onClick: function () { return _this.saveChanges(); },\r\n                    label: 'se.cms.catalogaware.panel.button.add',\r\n                    isDisabledFn: function () { return _this.isSaveButtonDisabled(); }\r\n                }\r\n            }\r\n        };\r\n        this.showPanelChange.emit(function () { return _this.initAndShowPanel(); });\r\n        return this.initCatalogs();\r\n    };\r\n    /* @ngInject */ ItemSelectorPanelComponent.prototype.isItemSelectorEnabled = function () {\r\n        return (this.catalogInfo && !!this.catalogInfo.catalogId && !!this.catalogInfo.catalogVersion);\r\n    };\r\n    /* @ngInject */ ItemSelectorPanelComponent.prototype.initOnCatalogSelectorChange = function () {\r\n        var _this = this;\r\n        this.onCatalogSelectorChange = function () {\r\n            if (_this.resetCatalogVersionSelector) {\r\n                _this.resetCatalogVersionSelector();\r\n            }\r\n        };\r\n    };\r\n    /* @ngInject */ ItemSelectorPanelComponent.prototype.initOnCatalogVersionSelectorChange = function () {\r\n        var _this = this;\r\n        this.onCatalogVersionSelectorChange = function () {\r\n            if (_this.catalogInfo.catalogId && _this.catalogInfo.catalogVersion) {\r\n                if (_this.resetItemsListSelector) {\r\n                    _this.resetItemsListSelector();\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /* @ngInject */ ItemSelectorPanelComponent.prototype.initOnItemsSelectorChange = function () {\r\n        var _this = this;\r\n        this.onItemsSelectorChange = function () {\r\n            if (_this.isItemSelectorEnabled()) {\r\n                _this.saveButtonDisabled = false;\r\n            }\r\n        };\r\n    };\r\n    /* @ngInject */ ItemSelectorPanelComponent.prototype.initCatalogs = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this;\r\n                        return [4 /*yield*/, this.getCatalogs()];\r\n                    case 1:\r\n                        _a.catalogs = _b.sent();\r\n                        if (this.catalogs.length === 1) {\r\n                            this.catalogInfo.catalogId = this.catalogs[0].id;\r\n                        }\r\n                        this.initCatalogSelector();\r\n                        this.initCatalogVersionSelector();\r\n                        this.initItemsSelector();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ ItemSelectorPanelComponent.prototype.initCatalogSelector = function () {\r\n        var _this = this;\r\n        this.catalogSelectorFetchStrategy = {\r\n            fetchAll: function () { return Promise.resolve(_this.catalogs); }\r\n        };\r\n    };\r\n    /* @ngInject */ ItemSelectorPanelComponent.prototype.initCatalogVersionSelector = function () {\r\n        var _this = this;\r\n        this.catalogVersionSelectorFetchStrategy = {\r\n            fetchAll: function () {\r\n                var versions = [];\r\n                if (_this.catalogInfo.catalogId) {\r\n                    var catalog = _this.catalogs.find(function (_a) {\r\n                        var id = _a.id;\r\n                        return id === _this.catalogInfo.catalogId;\r\n                    });\r\n                    versions = catalog.versions.slice(0);\r\n                }\r\n                return Promise.resolve(versions);\r\n            }\r\n        };\r\n    };\r\n    /* @ngInject */ ItemSelectorPanelComponent.prototype.initItemsSelector = function () {\r\n        var _this = this;\r\n        this.itemsSelectorFetchStrategy = {\r\n            fetchPage: function (mask, pageSize, currentPage) {\r\n                return _this.itemsFetchPageAndFilter(mask, pageSize, currentPage);\r\n            },\r\n            fetchEntity: function (uid) {\r\n                return _this.itemsFetchStrategy.fetchEntity(uid);\r\n            }\r\n        };\r\n    };\r\n    /* @ngInject */ ItemSelectorPanelComponent.prototype.initAndShowPanel = function () {\r\n        this.catalogInfo = {};\r\n        this.initCatalogs();\r\n        this.internalItemsSelected = this.defaultItemsSelected\r\n            ? clone(this.defaultItemsSelected)\r\n            : [];\r\n        this.showPanel();\r\n    };\r\n    /* @ngInject */ ItemSelectorPanelComponent.prototype.itemsFetchPageAndFilter = function (mask, pageSize, currentPage) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var page;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.itemsFetchStrategy.fetchPage(this.catalogInfo, mask, pageSize, currentPage)];\r\n                    case 1:\r\n                        page = _a.sent();\r\n                        return [2 /*return*/, this.limitToNonSelectedItems(page)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ ItemSelectorPanelComponent.prototype.limitToNonSelectedItems = function (page) {\r\n        var itemIndex = page.results.length;\r\n        while (itemIndex--) {\r\n            var item = page.results[itemIndex];\r\n            if (this.internalItemsSelected.includes(item.uid)) {\r\n                page.results.splice(itemIndex, 1);\r\n                page.pagination.count--;\r\n            }\r\n        }\r\n        return page;\r\n    };\r\n    /* @ngInject */ ItemSelectorPanelComponent.prototype.isSaveButtonDisabled = function () {\r\n        return this.saveButtonDisabled;\r\n    };\r\n    /* @ngInject */ ItemSelectorPanelComponent.prototype.cancel = function () {\r\n        this.catalogInfo = {};\r\n        this.hidePanel();\r\n    };\r\n    /* @ngInject */ ItemSelectorPanelComponent.prototype.saveChanges = function () {\r\n        var _a;\r\n        (_a = this.defaultItemsSelected).splice.apply(_a, __spreadArrays([0,\r\n            this.defaultItemsSelected.length], this.internalItemsSelected));\r\n        this.onChange.emit();\r\n        this.hidePanel();\r\n    };\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Array)\r\n    ], /* @ngInject */ ItemSelectorPanelComponent.prototype, \"defaultItemsSelected\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Type)\r\n    ], /* @ngInject */ ItemSelectorPanelComponent.prototype, \"itemComponent\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Function)\r\n    ], /* @ngInject */ ItemSelectorPanelComponent.prototype, \"getCatalogs\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], /* @ngInject */ ItemSelectorPanelComponent.prototype, \"itemsFetchStrategy\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], /* @ngInject */ ItemSelectorPanelComponent.prototype, \"catalogItemTypeI18nKey\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], /* @ngInject */ ItemSelectorPanelComponent.prototype, \"maxNumItems\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], /* @ngInject */ ItemSelectorPanelComponent.prototype, \"onChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], /* @ngInject */ ItemSelectorPanelComponent.prototype, \"showPanelChange\", void 0);\r\n    /* @ngInject */ ItemSelectorPanelComponent = __decorate([\r\n        SeDowngradeComponent(),\r\n        Component({\r\n            selector: 'se-item-selector-panel',\r\n            template: \"<se-slider-panel [sliderPanelConfiguration]=\\\"panelConfig\\\" [(sliderPanelHide)]=\\\"hidePanel\\\" [(sliderPanelShow)]=\\\"showPanel\\\" class=\\\"se-item-selector-panel\\\"><div class=\\\"se-item-selector-panel__content\\\" *ngIf=\\\"catalogs.length > 0\\\"><div *ngIf=\\\"catalogs.length > 1\\\" class=\\\"se-item-selector-panel__content__item\\\"><label class=\\\"se-control-label\\\" translate=\\\"se.cms.catalogaware.panel.catalogs.label\\\"></label><se-select id=\\\"se-catalog-selector-dropdown\\\" class=\\\"se-item-selector-panel__content__catalogs__yselect\\\" [(model)]=\\\"catalogInfo.catalogId\\\" [fetchStrategy]=\\\"catalogSelectorFetchStrategy\\\" [onChange]=\\\"onCatalogSelectorChange\\\"></se-select><label>{{ catalogInfo.name | seL10n | async }}</label></div><div class=\\\"se-item-selector-panel__content__item\\\"><label class=\\\"se-control-label\\\" translate=\\\"se.cms.catalogaware.panel.catalogsversion.label\\\"></label><se-select id=\\\"se-catalog-version-selector-dropdown\\\" class=\\\"se-item-selector-panel__content__catalog-version__yselect\\\" [(model)]=\\\"catalogInfo.catalogVersion\\\" [fetchStrategy]=\\\"catalogVersionSelectorFetchStrategy\\\" [onChange]=\\\"onCatalogVersionSelectorChange\\\" [searchEnabled]=\\\"false\\\" [(reset)]=\\\"resetCatalogVersionSelector\\\"></se-select></div><div class=\\\"se-item-selector-panel__content__item\\\" *ngIf=\\\"catalogInfo.catalogVersion\\\"><label class=\\\"se-control-label\\\">{{ catalogItemTypeI18nKey }}</label><se-select id=\\\"se-items-selector-dropdown\\\" [multiSelect]=\\\"true\\\" [controls]=\\\"true\\\" [(model)]=\\\"internalItemsSelected\\\" [onChange]=\\\"onItemsSelectorChange\\\" [fetchStrategy]=\\\"itemsSelectorFetchStrategy\\\" [(reset)]=\\\"resetItemsListSelector\\\" [itemComponent]=\\\"itemComponent\\\" [isReadOnly]=\\\"!isItemSelectorEnabled()\\\"></se-select></div></div></se-slider-panel>\"\r\n        }),\r\n        __metadata(\"design:paramtypes\", [])\r\n    ], /* @ngInject */ ItemSelectorPanelComponent);\r\n    return /* @ngInject */ ItemSelectorPanelComponent;\r\n}());\r\nexport { /* @ngInject */ ItemSelectorPanelComponent };\r\n//# sourceMappingURL=ItemSelectorPanelComponent.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types/lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/genericEditor/dropdownPopulators/types.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/genericEditor/catalog/services/index.ts"],"map":"{\"version\":3,\"file\":\"ItemSelectorPanelComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../src/components/genericEditor/catalog/components/itemSelectorPanel/ItemSelectorPanelComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/components/genericEditor/catalog/components/itemSelectorPanel/ItemSelectorPanelComponent.d.ts","writeByteOrderMark":false,"text":"import { EventEmitter, OnInit, Type } from '@angular/core';\r\nimport { FetchStrategy, SelectReset, SliderPanelConfiguration } from 'smarteditcommons';\r\nimport { PopulatorItem } from '../../../dropdownPopulators/types';\r\nimport { CatalogFetchStrategy, ProductCatalog } from '../../services';\r\ninterface CatalogInfo {\r\n    catalogId: string;\r\n    catalogVersion: string;\r\n}\r\nexport declare class ItemSelectorPanelComponent implements OnInit {\r\n    defaultItemsSelected: string[];\r\n    itemComponent: Type<any>;\r\n    getCatalogs: () => Promise<ProductCatalog[]>;\r\n    itemsFetchStrategy: CatalogFetchStrategy<PopulatorItem>;\r\n    catalogItemTypeI18nKey: string;\r\n    maxNumItems?: number;\r\n    onChange: EventEmitter<string[]>;\r\n    showPanelChange: EventEmitter<() => void>;\r\n    catalogs: ProductCatalog[];\r\n    catalogInfo: CatalogInfo;\r\n    panelConfig: SliderPanelConfiguration;\r\n    saveButtonDisabled: boolean;\r\n    internalItemsSelected: string[];\r\n    resetCatalogVersionSelector: SelectReset;\r\n    resetItemsListSelector: SelectReset;\r\n    catalogSelectorFetchStrategy: FetchStrategy;\r\n    catalogVersionSelectorFetchStrategy: FetchStrategy;\r\n    itemsSelectorFetchStrategy: FetchStrategy;\r\n    onCatalogSelectorChange: () => void;\r\n    onCatalogVersionSelectorChange: () => void;\r\n    onItemsSelectorChange: () => void;\r\n    hidePanel: () => Promise<void>;\r\n    showPanel: () => Promise<void>;\r\n    constructor();\r\n    ngOnInit(): Promise<void>;\r\n    isItemSelectorEnabled(): boolean;\r\n    private initOnCatalogSelectorChange;\r\n    private initOnCatalogVersionSelectorChange;\r\n    private initOnItemsSelectorChange;\r\n    private initCatalogs;\r\n    private initCatalogSelector;\r\n    private initCatalogVersionSelector;\r\n    private initItemsSelector;\r\n    private initAndShowPanel;\r\n    private itemsFetchPageAndFilter;\r\n    private limitToNonSelectedItems;\r\n    private isSaveButtonDisabled;\r\n    private cancel;\r\n    private saveChanges;\r\n}\r\nexport {};\r\n"}}

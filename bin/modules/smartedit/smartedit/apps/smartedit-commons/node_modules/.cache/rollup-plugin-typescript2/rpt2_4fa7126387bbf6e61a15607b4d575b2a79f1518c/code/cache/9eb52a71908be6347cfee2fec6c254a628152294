{"code":"import { __decorate, __metadata } from \"tslib\";\r\nimport { Injectable } from '@angular/core';\r\nimport { GenericEditorStackService } from '../../../components/genericEditor/services/GenericEditorStackService';\r\nimport { IAlertService } from '../../interfaces/IAlertService';\r\n/**\r\n * Used for HTTP error code 400. It removes all errors of type 'ValidationError' and displays alert messages for non-validation errors.\r\n */\r\nvar /* @ngInject */ NonValidationErrorInterceptor = /** @class */ (function () {\r\n    function /* @ngInject */ NonValidationErrorInterceptor(alertService, genericEditorStackService) {\r\n        this.alertService = alertService;\r\n        this.genericEditorStackService = genericEditorStackService;\r\n    }\r\n    /* @ngInject */ NonValidationErrorInterceptor.prototype.predicate = function (request, response) {\r\n        return response.status === 400;\r\n    };\r\n    /* @ngInject */ NonValidationErrorInterceptor.prototype.responseError = function (request, response) {\r\n        var _this = this;\r\n        if (response.error && response.error.errors) {\r\n            response.error.errors\r\n                .filter(function (error) {\r\n                var isValidationError = error.type === 'ValidationError';\r\n                return (!isValidationError ||\r\n                    (isValidationError &&\r\n                        !_this.genericEditorStackService.isAnyGenericEditorOpened()));\r\n            })\r\n                .forEach(function (error) {\r\n                _this.alertService.showDanger({\r\n                    message: error.message || 'se.unknown.request.error',\r\n                    timeout: 10000\r\n                });\r\n            });\r\n        }\r\n        return Promise.reject(response);\r\n    };\r\n    /* @ngInject */ NonValidationErrorInterceptor = __decorate([\r\n        Injectable(),\r\n        __metadata(\"design:paramtypes\", [IAlertService,\r\n            GenericEditorStackService])\r\n    ], /* @ngInject */ NonValidationErrorInterceptor);\r\n    return /* @ngInject */ NonValidationErrorInterceptor;\r\n}());\r\nexport { /* @ngInject */ NonValidationErrorInterceptor };\r\n//# sourceMappingURL=NonValidationErrorInterceptor.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/common@8.2.14_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@angular/common/http.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/genericEditor/services/GenericEditorStackService.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/interfaces/IAlertService.ts"],"map":"{\"version\":3,\"file\":\"NonValidationErrorInterceptor.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/services/interceptors/errors/NonValidationErrorInterceptor.ts\"],\"names\":[],\"mappings\":\";AAIA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C,OAAO,EAAE,yBAAyB,EAAE,MAAM,sEAAsE,CAAC;AACjH,OAAO,EAAE,aAAa,EAAE,MAAM,gCAAgC,CAAC;AAE/D;;GAEG;AAEH;IACI,uDACY,YAA2B,EAC3B,yBAAoD;QADpD,iBAAY,GAAZ,YAAY,CAAe;QAC3B,8BAAyB,GAAzB,yBAAyB,CAA2B;IAC7D,CAAC;IAEJ,iEAAS,GAAT,UAAU,OAAuB,EAAE,QAA2B;QAC1D,OAAO,QAAQ,CAAC,MAAM,KAAK,GAAG,CAAC;IACnC,CAAC;IAED,qEAAa,GAAb,UAAc,OAAuB,EAAE,QAA2B;QAAlE,iBAmBC;QAlBG,IAAI,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE;YACzC,QAAQ,CAAC,KAAK,CAAC,MAAM;iBAChB,MAAM,CAAC,UAAC,KAAmB;gBACxB,IAAM,iBAAiB,GAAG,KAAK,CAAC,IAAI,KAAK,iBAAiB,CAAC;gBAC3D,OAAO,CACH,CAAC,iBAAiB;oBAClB,CAAC,iBAAiB;wBACd,CAAC,KAAI,CAAC,yBAAyB,CAAC,wBAAwB,EAAE,CAAC,CAClE,CAAC;YACN,CAAC,CAAC;iBACD,OAAO,CAAC,UAAC,KAAmB;gBACzB,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC;oBACzB,OAAO,EAAE,KAAK,CAAC,OAAO,IAAI,0BAA0B;oBACpD,OAAO,EAAE,KAAK;iBACjB,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;SACV;QACD,OAAO,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACpC,CAAC;IA7BL;QADC,UAAU,EAAE;yCAGiB,aAAa;YACA,yBAAyB;qDA2BnE;IAAD,oDAAC;CAAA,AA9BD,IA8BC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/services/interceptors/errors/NonValidationErrorInterceptor.d.ts","writeByteOrderMark":false,"text":"import { HttpErrorResponse, HttpRequest } from '@angular/common/http';\r\nimport { IHttpErrorInterceptor } from '@smart/utils';\r\nimport { GenericEditorStackService } from '../../../components/genericEditor/services/GenericEditorStackService';\r\nimport { IAlertService } from '../../interfaces/IAlertService';\r\n/**\r\n * Used for HTTP error code 400. It removes all errors of type 'ValidationError' and displays alert messages for non-validation errors.\r\n */\r\nexport declare class NonValidationErrorInterceptor<T = any> implements IHttpErrorInterceptor<T> {\r\n    private alertService;\r\n    private genericEditorStackService;\r\n    constructor(alertService: IAlertService, genericEditorStackService: GenericEditorStackService);\r\n    predicate(request: HttpRequest<T>, response: HttpErrorResponse): boolean;\r\n    responseError(request: HttpRequest<T>, response: HttpErrorResponse): Promise<never>;\r\n}\r\n"}}

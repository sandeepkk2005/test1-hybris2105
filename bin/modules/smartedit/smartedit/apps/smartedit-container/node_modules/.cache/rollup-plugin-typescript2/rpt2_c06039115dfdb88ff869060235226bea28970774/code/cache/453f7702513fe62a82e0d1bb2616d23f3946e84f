{"code":"import { __awaiter, __decorate, __generator, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { rarelyChangingContent, userEvictionTag, Cached, LanguageService, PRODUCT_LIST_RESOURCE_API, PRODUCT_RESOURCE_API, RestServiceFactory, SeDowngradeService } from 'smarteditcommons';\r\n/**\r\n * The ProductService provides is used to access products from the product catalog\r\n */\r\nvar /* @ngInject */ ProductService = /** @class */ (function () {\r\n    function /* @ngInject */ ProductService(restServiceFactory, languageService) {\r\n        this.restServiceFactory = restServiceFactory;\r\n        this.languageService = languageService;\r\n        this.productService = this.restServiceFactory.get(PRODUCT_RESOURCE_API);\r\n        this.productListService = this.restServiceFactory.get(PRODUCT_LIST_RESOURCE_API);\r\n    }\r\n    /**\r\n     * Returns a list of Products from the catalog that match the given mask\r\n     */\r\n    /* @ngInject */ ProductService.prototype.findProducts = function (productSearch, pageable) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var langIsoCode, list;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this._validateProductCatalogInfo(productSearch);\r\n                        return [4 /*yield*/, this.languageService.getResolveLocale()];\r\n                    case 1:\r\n                        langIsoCode = _a.sent();\r\n                        return [4 /*yield*/, this.productListService.get({\r\n                                catalogId: productSearch.catalogId,\r\n                                catalogVersion: productSearch.catalogVersion,\r\n                                text: pageable.mask,\r\n                                pageSize: pageable.pageSize,\r\n                                currentPage: pageable.currentPage,\r\n                                langIsoCode: langIsoCode\r\n                            })];\r\n                    case 2:\r\n                        list = _a.sent();\r\n                        return [2 /*return*/, list];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns a Product that matches the given siteUID and productUID\r\n     */\r\n    /* @ngInject */ ProductService.prototype.getProductById = function (siteUID, productUID) {\r\n        return this.productService.get({\r\n            siteUID: siteUID,\r\n            productUID: productUID\r\n        });\r\n    };\r\n    /* @ngInject */ ProductService.prototype._validateProductCatalogInfo = function (productSearch) {\r\n        if (!productSearch.catalogId) {\r\n            throw new Error('[productService] - catalog ID missing.');\r\n        }\r\n        if (!productSearch.catalogVersion) {\r\n            throw new Error('[productService] - catalog version missing.');\r\n        }\r\n    };\r\n    __decorate([\r\n        Cached({ actions: [rarelyChangingContent], tags: [userEvictionTag] }),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Object, Object]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], /* @ngInject */ ProductService.prototype, \"findProducts\", null);\r\n    /* @ngInject */ ProductService = __decorate([\r\n        SeDowngradeService(),\r\n        __metadata(\"design:paramtypes\", [RestServiceFactory,\r\n            LanguageService])\r\n    ], /* @ngInject */ ProductService);\r\n    return /* @ngInject */ ProductService;\r\n}());\r\nexport { /* @ngInject */ ProductService };\r\n//# sourceMappingURL=ProductService.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"ProductService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/services/ProductService.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EACH,qBAAqB,EACrB,eAAe,EACf,MAAM,EAGN,eAAe,EAGf,yBAAyB,EACzB,oBAAoB,EACpB,kBAAkB,EAClB,kBAAkB,EACrB,MAAM,kBAAkB,CAAC;AAqB1B;;GAEG;AAEH;IAII,wCACY,kBAAsC,EACtC,eAAgC;QADhC,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,oBAAe,GAAf,eAAe,CAAiB;QAExC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QACxE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;IACrF,CAAC;IAED;;OAEG;IAEU,qDAAY,GAAzB,UACI,aAA6B,EAC7B,QAAkB;;;;;;wBAElB,IAAI,CAAC,2BAA2B,CAAC,aAAa,CAAC,CAAC;wBAC5B,qBAAM,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,EAAA;;wBAA3D,WAAW,GAAG,SAA6C;wBACpD,qBAAM,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC;gCAC3C,SAAS,EAAE,aAAa,CAAC,SAAS;gCAClC,cAAc,EAAE,aAAa,CAAC,cAAc;gCAC5C,IAAI,EAAE,QAAQ,CAAC,IAAI;gCACnB,QAAQ,EAAE,QAAQ,CAAC,QAAQ;gCAC3B,WAAW,EAAE,QAAQ,CAAC,WAAW;gCACjC,WAAW,aAAA;6BACd,CAAC,EAAA;;wBAPI,IAAI,GAAG,SAOX;wBAEF,sBAAO,IAAI,EAAC;;;;KACf;IAED;;OAEG;IACI,uDAAc,GAArB,UAAsB,OAAe,EAAE,UAAkB;QACrD,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC;YAC3B,OAAO,SAAA;YACP,UAAU,YAAA;SACb,CAAC,CAAC;IACP,CAAC;IAEO,oEAA2B,GAAnC,UAAoC,aAA6B;QAC7D,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE;YAC1B,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;SAC7D;QACD,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE;YAC/B,MAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC,CAAC;SAClE;IACL,CAAC;IAnCD;QADC,MAAM,CAAC,EAAE,OAAO,EAAE,CAAC,qBAAqB,CAAC,EAAE,IAAI,EAAE,CAAC,eAAe,CAAC,EAAE,CAAC;;;;sEAiBrE;IAhCL;QADC,kBAAkB,EAAE;yCAMe,kBAAkB;YACrB,eAAe;sCA8C/C;IAAD,qCAAC;CAAA,AApDD,IAoDC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/services/ProductService.d.ts","writeByteOrderMark":false,"text":"import { IProduct, LanguageService, Page, Pageable, RestServiceFactory } from 'smarteditcommons';\r\n/**\r\n * Interface used by ProductService for product search\r\n */\r\nexport interface IProductSearch {\r\n    /**\r\n     * id of the catalog\r\n     */\r\n    catalogId: string;\r\n    /**\r\n     * version of the catalog\r\n     */\r\n    catalogVersion: string;\r\n    siteUID?: string;\r\n}\r\nexport interface ProductPage extends Page<IProduct> {\r\n    products: IProduct[];\r\n}\r\n/**\r\n * The ProductService provides is used to access products from the product catalog\r\n */\r\nexport declare class ProductService {\r\n    private restServiceFactory;\r\n    private languageService;\r\n    private readonly productService;\r\n    private readonly productListService;\r\n    constructor(restServiceFactory: RestServiceFactory, languageService: LanguageService);\r\n    /**\r\n     * Returns a list of Products from the catalog that match the given mask\r\n     */\r\n    findProducts(productSearch: IProductSearch, pageable: Pageable): Promise<ProductPage>;\r\n    /**\r\n     * Returns a Product that matches the given siteUID and productUID\r\n     */\r\n    getProductById(siteUID: string, productUID: string): Promise<IProduct>;\r\n    private _validateProductCatalogInfo;\r\n}\r\n"}}

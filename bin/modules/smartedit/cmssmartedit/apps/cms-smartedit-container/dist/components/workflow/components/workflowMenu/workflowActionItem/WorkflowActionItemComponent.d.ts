import { ChangeDetectorRef, OnDestroy, OnInit } from '@angular/core';
import { CMSTimeService } from 'cmscommons';
import { CollapsibleContainerApi, FetchPageStrategy, Nullable, SystemEventService } from 'smarteditcommons';
import { Workflow, WorkflowAction, WorkflowActionComment, WorkflowDecision } from '../../../dtos';
import { WorkflowFacade } from '../../../services';
export declare class WorkflowActionItemComponent implements OnInit, OnDestroy {
    private workflowFacade;
    private cMSTimeService;
    private systemEventService;
    private cdr;
    workflow: Workflow;
    workflowAction: WorkflowAction;
    canMakeDecisions: boolean;
    isMenuOpen: boolean;
    hasComments: boolean;
    pageSize: number;
    workflowActionComments: WorkflowActionComment[];
    private collapsibleContainerApi;
    private unRegWorkflowMenuOpenedEvent;
    constructor(workflowFacade: WorkflowFacade, cMSTimeService: CMSTimeService, systemEventService: SystemEventService, cdr: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnDestroy(): void;
    fetchPageOfComments: FetchPageStrategy<WorkflowActionComment>;
    onCommentsLoaded(comments: WorkflowActionComment[]): void;
    setCollapsibleContainerApi($api: CollapsibleContainerApi): void;
    getWorkflowActionStatusClass(): Nullable<string>;
    getReadableStatus(): string;
    getActiveSince(): Nullable<string>;
    canShowDecisionButtons(): boolean;
    canShowComments(): boolean;
    onMainButtonClick($event: MouseEvent, decision: WorkflowDecision): void;
    onSplitButtonClick($event: MouseEvent): void;
    onMenuHide(): void;
    trackByIndex(index: number): number;
    private loadCommentsAndSetHasCommentsFlag;
    private loadComments;
    private makeDecision;
    private onOtherMenuOpening;
}

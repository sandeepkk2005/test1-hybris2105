{"code":"import { __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport * as moment from 'moment';\r\nimport { SeDowngradeService } from 'smarteditcommons';\r\n/**\r\n * Service for time management functionality.\r\n */\r\nvar /* @ngInject */ CMSTimeService = /** @class */ (function () {\r\n    function /* @ngInject */ CMSTimeService(translate) {\r\n        this.translate = translate;\r\n    }\r\n    /**\r\n     * Give a time difference in milliseconds, this method returns a string that determines time in ago.\r\n     *\r\n     * Examples:\r\n     * If the diff is less then 24 hours, the result is in hours eg: 17 hour(s) ago.\r\n     * If the diff is more than a day, the result is in days, eg: 2 day(s) ago.\r\n     *\r\n     * @param timeDiff The time difference in milliseconds.\r\n     */\r\n    /* @ngInject */ CMSTimeService.prototype.getTimeAgo = function (timeDiff) {\r\n        var timeAgoInDays = Math.floor(moment.duration(timeDiff).asDays());\r\n        var timeAgoInHours = Math.floor(moment.duration(timeDiff).asHours());\r\n        if (timeAgoInDays >= 1) {\r\n            return (timeAgoInDays +\r\n                ' ' +\r\n                this.translate.instant('se.cms.actionitem.page.workflow.action.started.days.ago'));\r\n        }\r\n        else if (timeAgoInHours >= 1) {\r\n            return (timeAgoInHours +\r\n                ' ' +\r\n                this.translate.instant('se.cms.actionitem.page.workflow.action.started.hours.ago'));\r\n        }\r\n        return ('<1 ' +\r\n            this.translate.instant('se.cms.actionitem.page.workflow.action.started.hours.ago'));\r\n    };\r\n    /* @ngInject */ CMSTimeService = __decorate([\r\n        SeDowngradeService(),\r\n        __metadata(\"design:paramtypes\", [TranslateService])\r\n    ], /* @ngInject */ CMSTimeService);\r\n    return /* @ngInject */ CMSTimeService;\r\n}());\r\nexport { /* @ngInject */ CMSTimeService };\r\n//# sourceMappingURL=CMSTimeService.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@ngx-translate/core@11.0.1_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@ngx-translate/core/ngx-translate-core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/moment@2.24.0/node_modules/moment/moment.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"CMSTimeService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/services/CMSTimeService.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;AACvD,OAAO,KAAK,MAAM,MAAM,QAAQ,CAAC;AACjC,OAAO,EAAE,kBAAkB,EAAE,MAAM,kBAAkB,CAAC;AAEtD;;GAEG;AAGH;IACI,wCAAoB,SAA2B;QAA3B,cAAS,GAAT,SAAS,CAAkB;IAAG,CAAC;IAEnD;;;;;;;;OAQG;IACI,mDAAU,GAAjB,UAAkB,QAAgB;QAC9B,IAAM,aAAa,GAAW,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;QAC7E,IAAM,cAAc,GAAW,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;QAE/E,IAAI,aAAa,IAAI,CAAC,EAAE;YACpB,OAAO,CACH,aAAa;gBACb,GAAG;gBACH,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,yDAAyD,CAAC,CACpF,CAAC;SACL;aAAM,IAAI,cAAc,IAAI,CAAC,EAAE;YAC5B,OAAO,CACH,cAAc;gBACd,GAAG;gBACH,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,0DAA0D,CAAC,CACrF,CAAC;SACL;QACD,OAAO,CACH,KAAK;YACL,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,0DAA0D,CAAC,CACrF,CAAC;IACN,CAAC;IAjCL;QADC,kBAAkB,EAAE;yCAEc,gBAAgB;sCAiClD;IAAD,qCAAC;CAAA,AAlCD,IAkCC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/services/CMSTimeService.d.ts","writeByteOrderMark":false,"text":"import { TranslateService } from '@ngx-translate/core';\r\n/**\r\n * Service for time management functionality.\r\n */\r\nexport declare class CMSTimeService {\r\n    private translate;\r\n    constructor(translate: TranslateService);\r\n    /**\r\n     * Give a time difference in milliseconds, this method returns a string that determines time in ago.\r\n     *\r\n     * Examples:\r\n     * If the diff is less then 24 hours, the result is in hours eg: 17 hour(s) ago.\r\n     * If the diff is more than a day, the result is in days, eg: 2 day(s) ago.\r\n     *\r\n     * @param timeDiff The time difference in milliseconds.\r\n     */\r\n    getTimeAgo(timeDiff: number): string;\r\n}\r\n"}}

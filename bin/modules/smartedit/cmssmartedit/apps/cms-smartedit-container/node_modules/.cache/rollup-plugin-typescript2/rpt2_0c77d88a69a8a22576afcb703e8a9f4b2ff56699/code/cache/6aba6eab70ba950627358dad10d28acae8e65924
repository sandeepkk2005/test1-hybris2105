{"code":"import { __awaiter, __decorate, __generator, __metadata } from \"tslib\";\r\nimport { Component, Input, EventEmitter, Output } from '@angular/core';\r\nimport { IPageService } from 'cmscommons';\r\nimport { DisplayConditionsFacade } from 'cmssmarteditcontainer/facades';\r\nimport { SeDowngradeComponent } from 'smarteditcommons';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"DisplayConditionsPrimaryPageComponent\", {\r\n    selector: 'se-display-conditions-primary-page',\r\n    template: \"<div class=\\\"form-group form-group__inline\\\"><label class=\\\"se-control-label control-label__margin\\\" translate=\\\"se.cms.display.conditions.primary.page.label\\\"></label><div *ngIf=\\\"readOnly\\\" class=\\\"dc-associated-primary-page form-readonly-text form-readonly-text__tight\\\">{{ associatedPrimaryPage?.name }}</div><div *ngIf=\\\"!readOnly\\\"><se-select id=\\\"display-conditions-primary-association-selector\\\" [model]=\\\"associatedPrimaryPageUid\\\" (modelChange)=\\\"associatedPrimaryPageUidOnChange($event)\\\" [fetchStrategy]=\\\"fetchStrategy\\\"></se-select><span *ngIf=\\\"associatedPrimaryPage?.name\\\" class=\\\"se-form-help-message\\\"><span>{{ 'se.cms.page.label.label' | translate }}: {{ associatedPrimaryPage.label }}</span></span></div></div>\"\r\n});\r\nvar /* @ngInject */ DisplayConditionsPrimaryPageComponent = /** @class */ (function () {\r\n    function /* @ngInject */ DisplayConditionsPrimaryPageComponent(pageService, displayConditionsFacade) {\r\n        var _this = this;\r\n        this.pageService = pageService;\r\n        this.displayConditionsFacade = displayConditionsFacade;\r\n        this.associatedPrimaryPageUid = null;\r\n        this.onPrimaryPageSelect = new EventEmitter();\r\n        this.fetchStrategy = {\r\n            fetchEntity: function () {\r\n                return Promise.resolve({\r\n                    id: _this.associatedPrimaryPage.uid,\r\n                    label: _this.associatedPrimaryPage.name\r\n                });\r\n            },\r\n            fetchPage: function (search, pageSize, currentPage) {\r\n                return _this.displayConditionsFacade.getPrimaryPagesForPageType(_this.pageType, null, {\r\n                    search: search,\r\n                    pageSize: pageSize,\r\n                    currentPage: currentPage\r\n                });\r\n            }\r\n        };\r\n    }\r\n    /* @ngInject */ DisplayConditionsPrimaryPageComponent.prototype.ngOnChanges = function (changes) {\r\n        var associatedPrimaryPageChange = changes.associatedPrimaryPage;\r\n        if (associatedPrimaryPageChange && !!associatedPrimaryPageChange.currentValue) {\r\n            this.setAssociatedPrimaryPageSelected(associatedPrimaryPageChange.currentValue);\r\n        }\r\n    };\r\n    /* @ngInject */ DisplayConditionsPrimaryPageComponent.prototype.associatedPrimaryPageUidOnChange = function (uid) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var page;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.pageService.getPageById(uid)];\r\n                    case 1:\r\n                        page = _a.sent();\r\n                        this.setAssociatedPrimaryPageSelected(page);\r\n                        this.onPrimaryPageSelect.emit(this.associatedPrimaryPage);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ DisplayConditionsPrimaryPageComponent.prototype.setAssociatedPrimaryPageSelected = function (page) {\r\n        this.associatedPrimaryPage = page;\r\n        this.associatedPrimaryPageUid = page.uid;\r\n    };\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], /* @ngInject */ DisplayConditionsPrimaryPageComponent.prototype, \"readOnly\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], /* @ngInject */ DisplayConditionsPrimaryPageComponent.prototype, \"associatedPrimaryPage\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], /* @ngInject */ DisplayConditionsPrimaryPageComponent.prototype, \"pageType\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], /* @ngInject */ DisplayConditionsPrimaryPageComponent.prototype, \"onPrimaryPageSelect\", void 0);\r\n    /* @ngInject */ DisplayConditionsPrimaryPageComponent = __decorate([\r\n        SeDowngradeComponent(),\r\n        Component({\r\n            selector: 'se-display-conditions-primary-page',\r\n            template: \"<div class=\\\"form-group form-group__inline\\\"><label class=\\\"se-control-label control-label__margin\\\" translate=\\\"se.cms.display.conditions.primary.page.label\\\"></label><div *ngIf=\\\"readOnly\\\" class=\\\"dc-associated-primary-page form-readonly-text form-readonly-text__tight\\\">{{ associatedPrimaryPage?.name }}</div><div *ngIf=\\\"!readOnly\\\"><se-select id=\\\"display-conditions-primary-association-selector\\\" [model]=\\\"associatedPrimaryPageUid\\\" (modelChange)=\\\"associatedPrimaryPageUidOnChange($event)\\\" [fetchStrategy]=\\\"fetchStrategy\\\"></se-select><span *ngIf=\\\"associatedPrimaryPage?.name\\\" class=\\\"se-form-help-message\\\"><span>{{ 'se.cms.page.label.label' | translate }}: {{ associatedPrimaryPage.label }}</span></span></div></div>\"\r\n        }),\r\n        __metadata(\"design:paramtypes\", [IPageService,\r\n            DisplayConditionsFacade])\r\n    ], /* @ngInject */ DisplayConditionsPrimaryPageComponent);\r\n    return /* @ngInject */ DisplayConditionsPrimaryPageComponent;\r\n}());\r\nexport { /* @ngInject */ DisplayConditionsPrimaryPageComponent };\r\n//# sourceMappingURL=DisplayConditionsPrimaryPageComponent.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/facades/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"DisplayConditionsPrimaryPageComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/components/pages/displayConditions/displayConditionsPrimaryPage/DisplayConditionsPrimaryPageComponent.ts\"],\"names\":[],\"mappings\":\";AAEA,OAAO,EAAE,SAAS,EAA4B,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACjG,OAAO,EAAE,YAAY,EAAY,MAAM,YAAY,CAAC;AACpD,OAAO,EAAE,uBAAuB,EAAE,MAAM,+BAA+B,CAAC;AACxE,OAAO,EACH,oBAAoB,EAKvB,MAAM,kBAAkB,CAAC;+FAGf;IACP,QAAQ,EAAE,oCAAoC;IAC9C,QAAQ,EAAE,6tBAAqsB;CACltB;AACD;IASI,+DACY,WAAyB,EACzB,uBAAgD;QAF5D,iBAwBC;QAvBW,gBAAW,GAAX,WAAW,CAAc;QACzB,4BAAuB,GAAvB,uBAAuB,CAAyB;QAExD,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;QACrC,IAAI,CAAC,mBAAmB,GAAG,IAAI,YAAY,EAAE,CAAC;QAE9C,IAAI,CAAC,aAAa,GAAG;YACjB,WAAW,EAAE;gBACT,OAAA,OAAO,CAAC,OAAO,CAAC;oBACZ,EAAE,EAAE,KAAI,CAAC,qBAAqB,CAAC,GAAG;oBAClC,KAAK,EAAE,KAAI,CAAC,qBAAqB,CAAC,IAAI;iBACzC,CAAC;YAHF,CAGE;YACN,SAAS,EAAE,UACP,MAAc,EACd,QAAgB,EAChB,WAAmB;gBAEnB,OAAA,KAAI,CAAC,uBAAuB,CAAC,0BAA0B,CAAC,KAAI,CAAC,QAAQ,EAAE,IAAI,EAAE;oBACzE,MAAM,QAAA;oBACN,QAAQ,UAAA;oBACR,WAAW,aAAA;iBACd,CAAC;YAJF,CAIE;SACT,CAAC;IACN,CAAC;IAED,2EAAW,GAAX,UAAY,OAAsB;QAC9B,IAAM,2BAA2B,GAAG,OAAO,CAAC,qBAAqB,CAAC;QAClE,IAAI,2BAA2B,IAAI,CAAC,CAAC,2BAA2B,CAAC,YAAY,EAAE;YAC3E,IAAI,CAAC,gCAAgC,CAAC,2BAA2B,CAAC,YAAY,CAAC,CAAC;SACnF;IACL,CAAC;IAEY,gGAAgC,GAA7C,UAA8C,GAAW;;;;;4BACxC,qBAAM,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC,EAAA;;wBAA9C,IAAI,GAAG,SAAuC;wBACpD,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,CAAC;wBAC5C,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;;;;;KAC7D;IAEO,gGAAgC,GAAxC,UAAyC,IAAc;QACnD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,GAAG,CAAC;IAC7C,CAAC;IAlDQ;QAAR,KAAK,EAAE;;2FAAmB;IAClB;QAAR,KAAK,EAAE;;wGAAiC;IAChC;QAAR,KAAK,EAAE;;2FAAkB;IAChB;QAAT,MAAM,EAAE;kCAAsB,YAAY;sGAAW;IAJ1D;QALC,oBAAoB,EAAE;QACtB,SAAS,CAAC;YACP,QAAQ,EAAE,oCAAoC;YAC9C,QAAQ,EAAE,6tBAAqsB;SACltB,CAAC;yCAW2B,YAAY;YACA,uBAAuB;6DAyC/D;IAAD,4DAAC;CAAA,AApDD,IAoDC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/components/pages/displayConditions/displayConditionsPrimaryPage/DisplayConditionsPrimaryPageComponent.d.ts","writeByteOrderMark":false,"text":"import { OnChanges, SimpleChanges, EventEmitter } from '@angular/core';\r\nimport { IPageService, ICMSPage } from 'cmscommons';\r\nimport { DisplayConditionsFacade } from 'cmssmarteditcontainer/facades';\r\nimport { FetchStrategy } from 'smarteditcommons';\r\nexport declare class DisplayConditionsPrimaryPageComponent implements OnChanges {\r\n    private pageService;\r\n    private displayConditionsFacade;\r\n    readOnly: boolean;\r\n    associatedPrimaryPage: ICMSPage;\r\n    pageType: string;\r\n    onPrimaryPageSelect: EventEmitter<ICMSPage>;\r\n    associatedPrimaryPageUid: string;\r\n    fetchStrategy: FetchStrategy;\r\n    constructor(pageService: IPageService, displayConditionsFacade: DisplayConditionsFacade);\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    associatedPrimaryPageUidOnChange(uid: string): Promise<void>;\r\n    private setAssociatedPrimaryPageSelected;\r\n}\r\n"}}

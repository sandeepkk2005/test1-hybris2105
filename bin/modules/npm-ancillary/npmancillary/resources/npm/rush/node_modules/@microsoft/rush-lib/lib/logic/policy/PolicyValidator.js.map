{"version":3,"file":"PolicyValidator.js","sourceRoot":"","sources":["../../../src/logic/policy/PolicyValidator.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAG3D,qDAAkD;AAClD,iEAA8D;AAQ9D,MAAa,eAAe;IACnB,MAAM,CAAC,cAAc,CAAC,iBAAoC,EAAE,OAAgC;QACjG,IAAI,OAAO,CAAC,YAAY,EAAE;YACxB,OAAO;SACR;QAED,+BAAc,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;QAC3C,IAAI,CAAC,OAAO,CAAC,sBAAsB,EAAE;YACnC,iFAAiF;YACjF,sGAAsG;YACtG,2CAAoB,CAAC,QAAQ,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;SAC3D;IACH,CAAC;CACF;AAbD,0CAaC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { RushConfiguration } from '../../api/RushConfiguration';\r\nimport { GitEmailPolicy } from './GitEmailPolicy';\r\nimport { ShrinkwrapFilePolicy } from './ShrinkwrapFilePolicy';\r\n\r\nexport interface IPolicyValidatorOptions {\r\n  bypassPolicy?: boolean;\r\n  allowShrinkwrapUpdates?: boolean;\r\n  shrinkwrapVariant?: string;\r\n}\r\n\r\nexport class PolicyValidator {\r\n  public static validatePolicy(rushConfiguration: RushConfiguration, options: IPolicyValidatorOptions): void {\r\n    if (options.bypassPolicy) {\r\n      return;\r\n    }\r\n\r\n    GitEmailPolicy.validate(rushConfiguration);\r\n    if (!options.allowShrinkwrapUpdates) {\r\n      // Don't validate the shrinkwrap if updates are allowed, as it's likely to change\r\n      // It also may have merge conflict markers, which PNPM can gracefully handle, but the validator cannot\r\n      ShrinkwrapFilePolicy.validate(rushConfiguration, options);\r\n    }\r\n  }\r\n}\r\n"]}
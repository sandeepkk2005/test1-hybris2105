{"code":"import { __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { Directive, HostBinding, HostListener, Input } from '@angular/core';\r\nimport { ContentManager } from './ContentManager';\r\n/**\r\n * Applied on a DOM element, this Directive will trigger a submit of the data stored in\r\n * the parent {@link ContentManager} upon cliking.\r\n *\r\n * ### Example\r\n *\r\n *      <form [contentManager]=\"{onSave: editor.someSubmit}\">\r\n *          <button [seSubmitBtn]=\"editor.isSubmitDisabled\">Submit </button>\r\n *      </form>\r\n *\r\n * @param seSubmitBtn The optional callback returning a boolean to add more cases for disablement\r\n */\r\nvar SubmitBtnDirective = /** @class */ (function () {\r\n    function SubmitBtnDirective(cm) {\r\n        this.cm = cm;\r\n    }\r\n    Object.defineProperty(SubmitBtnDirective.prototype, \"disabled\", {\r\n        /**\r\n         * Modifies the disabled attribute to be disabled when saving.\r\n         */\r\n        get: function () {\r\n            return this.cm.submitting || (this.isDisabled && this.isDisabled());\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * When the element is clicked the save operation is called in the content manager direcitve.\r\n     */\r\n    SubmitBtnDirective.prototype.save = function ($event) {\r\n        $event.preventDefault();\r\n        this.cm.save().subscribe();\r\n    };\r\n    __decorate([\r\n        Input('seSubmitBtn'),\r\n        __metadata(\"design:type\", Function)\r\n    ], SubmitBtnDirective.prototype, \"isDisabled\", void 0);\r\n    __decorate([\r\n        HostBinding('disabled'),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [])\r\n    ], SubmitBtnDirective.prototype, \"disabled\", null);\r\n    __decorate([\r\n        HostListener('click', ['$event']),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Event]),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], SubmitBtnDirective.prototype, \"save\", null);\r\n    SubmitBtnDirective = __decorate([\r\n        Directive({\r\n            selector: '[seSubmitBtn]'\r\n        }),\r\n        __metadata(\"design:paramtypes\", [ContentManager])\r\n    ], SubmitBtnDirective);\r\n    return SubmitBtnDirective;\r\n}());\r\nexport { SubmitBtnDirective };\r\n//# sourceMappingURL=SubmitButtonDirective.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/genericEditor/components/ContentManager.ts"],"map":"{\"version\":3,\"file\":\"SubmitButtonDirective.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/components/genericEditor/components/SubmitButtonDirective.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAC5E,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAElD;;;;;;;;;;;GAWG;AAIH;IAII,4BAAoB,EAAuB;QAAvB,OAAE,GAAF,EAAE,CAAqB;IAAG,CAAC;IAM/C,sBAAI,wCAAQ;QAJZ;;WAEG;aAEH;YACI,OAAO,IAAI,CAAC,EAAE,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;QACxE,CAAC;;;OAAA;IAED;;OAEG;IAEH,iCAAI,GAAJ,UAAK,MAAa;QACd,MAAM,CAAC,cAAc,EAAE,CAAC;QACxB,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC;IAC/B,CAAC;IAnBD;QADC,KAAK,CAAC,aAAa,CAAC;;0DACY;IAQjC;QADC,WAAW,CAAC,UAAU,CAAC;;;sDAGvB;IAMD;QADC,YAAY,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;;yCACrB,KAAK;;kDAGjB;IArBQ,kBAAkB;QAH9B,SAAS,CAAC;YACP,QAAQ,EAAE,eAAe;SAC5B,CAAC;yCAK0B,cAAc;OAJ7B,kBAAkB,CAsB9B;IAAD,yBAAC;CAAA,AAtBD,IAsBC;SAtBY,kBAAkB\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/components/genericEditor/components/SubmitButtonDirective.d.ts","writeByteOrderMark":false,"text":"import { ContentManager } from './ContentManager';\r\n/**\r\n * Applied on a DOM element, this Directive will trigger a submit of the data stored in\r\n * the parent {@link ContentManager} upon cliking.\r\n *\r\n * ### Example\r\n *\r\n *      <form [contentManager]=\"{onSave: editor.someSubmit}\">\r\n *          <button [seSubmitBtn]=\"editor.isSubmitDisabled\">Submit </button>\r\n *      </form>\r\n *\r\n * @param seSubmitBtn The optional callback returning a boolean to add more cases for disablement\r\n */\r\nexport declare class SubmitBtnDirective {\r\n    private cm;\r\n    isDisabled: () => boolean;\r\n    constructor(cm: ContentManager<any>);\r\n    /**\r\n     * Modifies the disabled attribute to be disabled when saving.\r\n     */\r\n    get disabled(): boolean;\r\n    /**\r\n     * When the element is clicked the save operation is called in the content manager direcitve.\r\n     */\r\n    save($event: Event): void;\r\n}\r\n"}}

{"code":"import { __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { DRAG_AND_DROP_EVENTS } from 'cmscommons';\r\nimport { CLOSE_CTX_MENU, CTX_MENU_DROPDOWN_IS_OPEN, SeDowngradeService, SystemEventService } from 'smarteditcommons';\r\n/**\r\n * ContextualMenuDropdownService is an internal service that provides methods for interaction between\r\n * Drag and Drop Service and the Contextual Menu.\r\n *\r\n * Note: The contextualMenuDropdownService functions are as a glue between the Drag and Drop Service and the Contextual Menu.\r\n *  The service was created to solve the issue of closing any contextual menu that is open whenever a drag operation is started.\r\n *  It does so while keeping the DnD and Contextual Menu services decoupled.\r\n */\r\nvar /* @ngInject */ ContextualMenuDropdownService = /** @class */ (function () {\r\n    function /* @ngInject */ ContextualMenuDropdownService(systemEventService) {\r\n        this.systemEventService = systemEventService;\r\n    }\r\n    /* @ngInject */ ContextualMenuDropdownService.prototype.registerIsOpenEvent = function () {\r\n        var _this = this;\r\n        this.systemEventService.subscribe(CTX_MENU_DROPDOWN_IS_OPEN, function () {\r\n            _this.registerDragStarted();\r\n        });\r\n    };\r\n    /* @ngInject */ ContextualMenuDropdownService.prototype.registerDragStarted = function () {\r\n        var _this = this;\r\n        this.unsubscribeFn = this.systemEventService.subscribe(DRAG_AND_DROP_EVENTS.DRAG_STARTED, function () {\r\n            _this.triggerCloseOperation();\r\n        });\r\n    };\r\n    /* @ngInject */ ContextualMenuDropdownService.prototype.triggerCloseOperation = function () {\r\n        this.systemEventService.publishAsync(CLOSE_CTX_MENU);\r\n        if (this.unsubscribeFn) {\r\n            this.unsubscribeFn();\r\n        }\r\n    };\r\n    /* @ngInject */ ContextualMenuDropdownService = __decorate([\r\n        SeDowngradeService(),\r\n        __metadata(\"design:paramtypes\", [SystemEventService])\r\n    ], /* @ngInject */ ContextualMenuDropdownService);\r\n    return /* @ngInject */ ContextualMenuDropdownService;\r\n}());\r\nexport { /* @ngInject */ ContextualMenuDropdownService };\r\n//# sourceMappingURL=ContextualMenuDropdownService.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"ContextualMenuDropdownService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/services/ContextualMenuDropdownService.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAAE,oBAAoB,EAAE,MAAM,YAAY,CAAC;AAClD,OAAO,EACH,cAAc,EACd,yBAAyB,EACzB,kBAAkB,EAClB,kBAAkB,EACrB,MAAM,kBAAkB,CAAC;AAE1B;;;;;;;GAOG;AAEH;IAEI,uDAAoB,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;IAAG,CAAC;IAEvD,2EAAmB,GAA1B;QAAA,iBAIC;QAHG,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,yBAAyB,EAAE;YACzD,KAAI,CAAC,mBAAmB,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,2EAAmB,GAA3B;QAAA,iBAOC;QANG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAClD,oBAAoB,CAAC,YAAY,EACjC;YACI,KAAI,CAAC,qBAAqB,EAAE,CAAC;QACjC,CAAC,CACJ,CAAC;IACN,CAAC;IAEO,6EAAqB,GAA7B;QACI,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;QACrD,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,IAAI,CAAC,aAAa,EAAE,CAAC;SACxB;IACL,CAAC;IAxBL;QADC,kBAAkB,EAAE;yCAGuB,kBAAkB;qDAuB7D;IAAD,oDAAC;CAAA,AAzBD,IAyBC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit/services/ContextualMenuDropdownService.d.ts","writeByteOrderMark":false,"text":"import { SystemEventService } from 'smarteditcommons';\r\n/**\r\n * ContextualMenuDropdownService is an internal service that provides methods for interaction between\r\n * Drag and Drop Service and the Contextual Menu.\r\n *\r\n * Note: The contextualMenuDropdownService functions are as a glue between the Drag and Drop Service and the Contextual Menu.\r\n *  The service was created to solve the issue of closing any contextual menu that is open whenever a drag operation is started.\r\n *  It does so while keeping the DnD and Contextual Menu services decoupled.\r\n */\r\nexport declare class ContextualMenuDropdownService {\r\n    private systemEventService;\r\n    private unsubscribeFn;\r\n    constructor(systemEventService: SystemEventService);\r\n    registerIsOpenEvent(): void;\r\n    private registerDragStarted;\r\n    private triggerCloseOperation;\r\n}\r\n"}}

{"code":"// eslint-disable-next-line no-redeclare\r\nexport var IDragEventType = {\r\n    DROP: 'drop',\r\n    DRAG_ENTER: 'dragenter',\r\n    DRAG_OVER: 'dragover',\r\n    DRAG_LEAVE: 'dragleave'\r\n};\r\nexport * from './InViewElementObserver';\r\nexport * from './DragAndDropServiceModule';\r\nexport * from './DragAndDropScrollingService';\r\nexport * from './DragAndDropService';\r\n//# sourceMappingURL=index.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/dragAndDrop/InViewElementObserver.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/dragAndDrop/DragAndDropServiceModule.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/dragAndDrop/DragAndDropScrollingService.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/dragAndDrop/DragAndDropService.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/dragAndDrop/index.ts\"],\"names\":[],\"mappings\":\"AA2BA,wCAAwC;AACxC,MAAM,CAAC,IAAM,cAAc,GAAG;IAC1B,IAAI,EAAE,MAAwB;IAC9B,UAAU,EAAE,WAA6B;IACzC,SAAS,EAAE,UAA4B;IACvC,UAAU,EAAE,WAA6B;CAC5C,CAAC;AAEF,cAAc,yBAAyB,CAAC;AACxC,cAAc,4BAA4B,CAAC;AAC3C,cAAc,+BAA+B,CAAC;AAC9C,cAAc,sBAAsB,CAAC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/services/dragAndDrop/index.d.ts","writeByteOrderMark":false,"text":"import { Payload } from '@smart/utils';\r\nexport interface IDragAndDropEvents {\r\n    TRACK_MOUSE_POSITION: string;\r\n    DROP_ELEMENT: string;\r\n    DRAG_DROP_START: string;\r\n    DRAG_DROP_END: string;\r\n    DRAG_DROP_CROSS_ORIGIN_START: string;\r\n}\r\n/**\r\n * Pointer coordinates.\r\n */\r\nexport interface IMousePosition extends Payload {\r\n    /**\r\n     * Abscissa of the pointer position.\r\n     */\r\n    x: number;\r\n    /**\r\n     * Ordinate of the pointer position\r\n     */\r\n    y: number;\r\n}\r\nexport declare type IDragEventType = 'drop' | 'dragenter' | 'dragover' | 'dragleave';\r\nexport declare const IDragEventType: {\r\n    DROP: IDragEventType;\r\n    DRAG_ENTER: IDragEventType;\r\n    DRAG_OVER: IDragEventType;\r\n    DRAG_LEAVE: IDragEventType;\r\n};\r\nexport * from './InViewElementObserver';\r\nexport * from './DragAndDropServiceModule';\r\nexport * from './DragAndDropScrollingService';\r\nexport * from './DragAndDropService';\r\n"}}

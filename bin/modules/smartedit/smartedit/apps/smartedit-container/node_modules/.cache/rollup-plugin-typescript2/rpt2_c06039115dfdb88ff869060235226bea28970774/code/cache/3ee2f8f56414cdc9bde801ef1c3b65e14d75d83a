{"code":"import { __awaiter, __decorate, __generator, __metadata, __param } from \"tslib\";\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject } from '@angular/core';\r\nimport { cloneDeep } from 'lodash';\r\nimport { GENERIC_EDITOR_WIDGET_DATA, ICatalogService, LINKED_DROPDOWN, SystemEventService } from 'smarteditcommons';\r\nimport './ProductCatalogVersionsSelectorComponent.scss';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"ProductCatalogVersionsSelectorComponent\", {\r\n    selector: 'se-product-catalog-versions-selector',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    host: {\r\n        '[class.se-product-catalog-versions-selector]': 'true'\r\n    },\r\n    template: \"<ng-container *ngIf=\\\"isReady\\\"><se-select *ngIf=\\\"isSingleVersionSelector\\\" [id]=\\\"geData.qualifier\\\" [(model)]=\\\"geData.model.productCatalogVersions[0]\\\" [(reset)]=\\\"reset\\\" [fetchStrategy]=\\\"fetchStrategy\\\"></se-select><se-multi-product-catalog-version-selector *ngIf=\\\"isMultiVersionSelector\\\" [productCatalogs]=\\\"productCatalogs\\\" [(selectedProductCatalogVersions)]=\\\"geData.model[geData.qualifier]\\\"></se-multi-product-catalog-version-selector></ng-container>\"\r\n});\r\nvar ProductCatalogVersionsSelectorComponent = /** @class */ (function () {\r\n    function ProductCatalogVersionsSelectorComponent(geData, catalogService, systemEventService, cdr) {\r\n        this.geData = geData;\r\n        this.catalogService = catalogService;\r\n        this.systemEventService = systemEventService;\r\n        this.cdr = cdr;\r\n    }\r\n    ProductCatalogVersionsSelectorComponent.prototype.ngOnInit = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var eventId;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.contentCatalogVersionId = cloneDeep(this.geData.model.previewCatalog);\r\n                        if (!this.contentCatalogVersionId) return [3 /*break*/, 2];\r\n                        this.isReady = false;\r\n                        this.isSingleVersionSelector = false;\r\n                        this.isMultiVersionSelector = false;\r\n                        eventId = (this.geData.id || '') + LINKED_DROPDOWN;\r\n                        this.$unRegSiteChangeEvent = this.systemEventService.subscribe(eventId, function (id, data) { return _this.resetSelector(id, data); });\r\n                        return [4 /*yield*/, this.setContent()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/, Promise.resolve()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ProductCatalogVersionsSelectorComponent.prototype.ngOnDestroy = function () {\r\n        if (this.$unRegSiteChangeEvent) {\r\n            this.$unRegSiteChangeEvent();\r\n        }\r\n    };\r\n    ProductCatalogVersionsSelectorComponent.prototype.resetSelector = function (_eventId, data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var siteUID, productCatalogs, activeProductCatalogVersions;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!(data.qualifier === 'previewCatalog' &&\r\n                            data.optionObject &&\r\n                            this.contentCatalogVersionId !== data.optionObject.id)) return [3 /*break*/, 3];\r\n                        this.contentCatalogVersionId = data.optionObject.id;\r\n                        siteUID = this.getSiteUIDFromContentCatalogVersionId(this.contentCatalogVersionId);\r\n                        return [4 /*yield*/, this.catalogService.getProductCatalogsForSite(siteUID)];\r\n                    case 1:\r\n                        productCatalogs = _a.sent();\r\n                        return [4 /*yield*/, this.catalogService.returnActiveCatalogVersionUIDs(productCatalogs)];\r\n                    case 2:\r\n                        activeProductCatalogVersions = _a.sent();\r\n                        this.geData.model[this.geData.qualifier] = activeProductCatalogVersions;\r\n                        if (this.isSingleVersionSelector) {\r\n                            this.reset();\r\n                        }\r\n                        this.setContent();\r\n                        _a.label = 3;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ProductCatalogVersionsSelectorComponent.prototype.setContent = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var setContent;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        setContent = function () { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a;\r\n                            var _this = this;\r\n                            return __generator(this, function (_b) {\r\n                                switch (_b.label) {\r\n                                    case 0:\r\n                                        _a = this;\r\n                                        return [4 /*yield*/, this.catalogService.getProductCatalogsForSite(this.getSiteUIDFromContentCatalogVersionId(this.contentCatalogVersionId))];\r\n                                    case 1:\r\n                                        _a.productCatalogs = _b.sent();\r\n                                        if (this.productCatalogs.length === 0) {\r\n                                            return [2 /*return*/];\r\n                                        }\r\n                                        if (this.productCatalogs.length === 1) {\r\n                                            this.fetchStrategy = {\r\n                                                fetchAll: function () {\r\n                                                    var parsedVersions = _this.parseSingleCatalogVersion(_this.productCatalogs[0].versions);\r\n                                                    return Promise.resolve(parsedVersions);\r\n                                                }\r\n                                            };\r\n                                            this.isSingleVersionSelector = true;\r\n                                            this.isMultiVersionSelector = false;\r\n                                            this.isReady = true;\r\n                                            return [2 /*return*/];\r\n                                        }\r\n                                        this.isSingleVersionSelector = false;\r\n                                        this.isMultiVersionSelector = true;\r\n                                        this.isReady = true;\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); };\r\n                        return [4 /*yield*/, setContent()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        this.cdr.detectChanges();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ProductCatalogVersionsSelectorComponent.prototype.getSiteUIDFromContentCatalogVersionId = function (id) {\r\n        return id.split('|')[0];\r\n    };\r\n    ProductCatalogVersionsSelectorComponent.prototype.parseSingleCatalogVersion = function (versions) {\r\n        return versions.map(function (version) { return ({\r\n            id: version.uuid,\r\n            label: version.version\r\n        }); });\r\n    };\r\n    ProductCatalogVersionsSelectorComponent = __decorate([\r\n        Component({\r\n            selector: 'se-product-catalog-versions-selector',\r\n            changeDetection: ChangeDetectionStrategy.OnPush,\r\n            host: {\r\n                '[class.se-product-catalog-versions-selector]': 'true'\r\n            },\r\n            template: \"<ng-container *ngIf=\\\"isReady\\\"><se-select *ngIf=\\\"isSingleVersionSelector\\\" [id]=\\\"geData.qualifier\\\" [(model)]=\\\"geData.model.productCatalogVersions[0]\\\" [(reset)]=\\\"reset\\\" [fetchStrategy]=\\\"fetchStrategy\\\"></se-select><se-multi-product-catalog-version-selector *ngIf=\\\"isMultiVersionSelector\\\" [productCatalogs]=\\\"productCatalogs\\\" [(selectedProductCatalogVersions)]=\\\"geData.model[geData.qualifier]\\\"></se-multi-product-catalog-version-selector></ng-container>\"\r\n        }),\r\n        __param(0, Inject(GENERIC_EDITOR_WIDGET_DATA)),\r\n        __metadata(\"design:paramtypes\", [Object, ICatalogService,\r\n            SystemEventService,\r\n            ChangeDetectorRef])\r\n    ], ProductCatalogVersionsSelectorComponent);\r\n    return ProductCatalogVersionsSelectorComponent;\r\n}());\r\nexport { ProductCatalogVersionsSelectorComponent };\r\n//# sourceMappingURL=ProductCatalogVersionsSelectorComponent.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types/lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"ProductCatalogVersionsSelectorComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/components/productCatalogVersion/productCatalogVersionsSelector/ProductCatalogVersionsSelectorComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/components/productCatalogVersion/productCatalogVersionsSelector/ProductCatalogVersionsSelectorComponent.d.ts","writeByteOrderMark":false,"text":"import { ChangeDetectorRef, OnDestroy, OnInit } from '@angular/core';\r\nimport { FetchStrategy, GenericEditorWidgetData, IBaseCatalog, ICatalogService, SelectReset, SystemEventService, TypedMap } from 'smarteditcommons';\r\nimport './ProductCatalogVersionsSelectorComponent.scss';\r\nexport declare class ProductCatalogVersionsSelectorComponent implements OnInit, OnDestroy {\r\n    geData: GenericEditorWidgetData<TypedMap<any>>;\r\n    private catalogService;\r\n    private systemEventService;\r\n    private cdr;\r\n    contentCatalogVersionId: string;\r\n    isReady: boolean;\r\n    isSingleVersionSelector: boolean;\r\n    isMultiVersionSelector: boolean;\r\n    fetchStrategy: FetchStrategy;\r\n    reset: SelectReset;\r\n    productCatalogs: IBaseCatalog[];\r\n    private $unRegSiteChangeEvent;\r\n    constructor(geData: GenericEditorWidgetData<TypedMap<any>>, catalogService: ICatalogService, systemEventService: SystemEventService, cdr: ChangeDetectorRef);\r\n    ngOnInit(): Promise<void>;\r\n    ngOnDestroy(): void;\r\n    private resetSelector;\r\n    private setContent;\r\n    private getSiteUIDFromContentCatalogVersionId;\r\n    private parseSingleCatalogVersion;\r\n}\r\n"}}

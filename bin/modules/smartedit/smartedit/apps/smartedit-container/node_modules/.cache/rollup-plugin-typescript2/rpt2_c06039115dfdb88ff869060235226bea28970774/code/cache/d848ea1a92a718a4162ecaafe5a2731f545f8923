{"code":"import { __awaiter, __decorate, __generator, __metadata, __param } from \"tslib\";\r\nimport './ExperienceSelectorButtonComponent.scss';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Component, Inject, LOCALE_ID } from '@angular/core';\r\nimport moment from 'moment';\r\nimport { setupL10nFilter, CrossFrameEventService, DATE_CONSTANTS, EVENTS, ISharedDataService, LanguageService, SeDowngradeComponent, SystemEventService, EXPERIENCE_STORAGE_KEY } from 'smarteditcommons';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"ExperienceSelectorButtonComponent\", {\r\n    selector: 'se-experience-selector-button',\r\n    template: \"<fd-popover class=\\\"se-experience-selector\\\" [(isOpen)]=\\\"status.isOpen\\\" (isOpenChange)=\\\"resetExperienceSelector()\\\" [closeOnOutsideClick]=\\\"false\\\" [triggers]=\\\"['click']\\\" [placement]=\\\"'bottom-end'\\\"><fd-popover-control><div class=\\\"se-experience-selector__control\\\"><se-tooltip [placement]=\\\"'bottom'\\\" [triggers]=\\\"['mouseenter', 'mouseleave']\\\" *ngIf=\\\"isCurrentPageFromParent\\\" class=\\\"se-experience-selector__tooltip\\\"><span se-tooltip-trigger class=\\\"se-experience-selector__btn--globe\\\"><span class=\\\"hyicon hyicon-globe se-experience-selector__btn--globe--icon\\\"></span></span><div se-tooltip-body>{{ parentCatalogVersion }}</div></se-tooltip><button class=\\\"se-experience-selector__btn\\\" id=\\\"experience-selector-btn\\\"><span [attr.title]=\\\"buildExperienceText()\\\" class=\\\"se-experience-selector__btn-text se-nowrap-ellipsis\\\">{{ buildExperienceText() }} </span><span class=\\\"se-experience-selector__btn-arrow icon-navigation-down-arrow\\\"></span></button></div></fd-popover-control><fd-popover-body><div class=\\\"se-experience-selector__dropdown fd-modal fd-modal__content\\\" role=\\\"menu\\\"><se-experience-selector [experience]=\\\"experience\\\" [dropdownStatus]=\\\"status\\\" [(resetExperienceSelector)]=\\\"resetExperienceSelector\\\"></se-experience-selector></div></fd-popover-body></fd-popover>\"\r\n});\r\nvar /* @ngInject */ ExperienceSelectorButtonComponent = /** @class */ (function () {\r\n    function /* @ngInject */ ExperienceSelectorButtonComponent(systemEventService, crossFrameEventService, locale, sharedDataService, languageService) {\r\n        this.systemEventService = systemEventService;\r\n        this.crossFrameEventService = crossFrameEventService;\r\n        this.locale = locale;\r\n        this.sharedDataService = sharedDataService;\r\n        this.languageService = languageService;\r\n        this.status = { isOpen: false };\r\n        this.isCurrentPageFromParent = false;\r\n        this.l10nFilter = setupL10nFilter(this.languageService, crossFrameEventService);\r\n    }\r\n    /* @ngInject */ ExperienceSelectorButtonComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.updateExperience();\r\n        this.unregFn = this.systemEventService.subscribe(EVENTS.EXPERIENCE_UPDATE, function () {\r\n            return _this.updateExperience();\r\n        });\r\n        this.unRegNewPageContextEventFn = this.crossFrameEventService.subscribe(EVENTS.PAGE_CHANGE, function (eventId, data) { return _this.setPageFromParent(data); });\r\n    };\r\n    /* @ngInject */ ExperienceSelectorButtonComponent.prototype.ngOnDestroy = function () {\r\n        this.unregFn();\r\n        this.unRegNewPageContextEventFn();\r\n    };\r\n    /* @ngInject */ ExperienceSelectorButtonComponent.prototype.updateExperience = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this;\r\n                        return [4 /*yield*/, this.sharedDataService.get(EXPERIENCE_STORAGE_KEY)];\r\n                    case 1:\r\n                        _a.experience = (_b.sent());\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ ExperienceSelectorButtonComponent.prototype.buildExperienceText = function () {\r\n        if (!this.experience) {\r\n            return '';\r\n        }\r\n        var _a = this.experience, _b = _a.catalogDescriptor, name = _b.name, catalogVersion = _b.catalogVersion, nativeName = _a.languageDescriptor.nativeName, time = _a.time;\r\n        var pipe = new DatePipe(this.locale);\r\n        var transformedTime = time\r\n            ? \"  |  \" + pipe.transform(moment(time).isValid() ? time : moment.now(), DATE_CONSTANTS.ANGULAR_SHORT)\r\n            : '';\r\n        return this.l10nFilter(name) + \" - \" + catalogVersion + \"  |  \" + nativeName + transformedTime + this._returnProductCatalogVersionTextByUuids();\r\n    };\r\n    /* @ngInject */ ExperienceSelectorButtonComponent.prototype.setPageFromParent = function (data) {\r\n        var _a = data.pageContext, catalogName = _a.catalogName, catalogVersion = _a.catalogVersion, pageContextCatalogVersionUuid = _a.catalogVersionUuid, catalogDescriptorCatalogVersionUuid = data.catalogDescriptor.catalogVersionUuid;\r\n        this.parentCatalogVersion = this.l10nFilter(catalogName) + \" (\" + catalogVersion + \")\";\r\n        this.isCurrentPageFromParent =\r\n            catalogDescriptorCatalogVersionUuid !== pageContextCatalogVersionUuid;\r\n    };\r\n    /* @ngInject */ ExperienceSelectorButtonComponent.prototype._returnProductCatalogVersionTextByUuids = function () {\r\n        var _this = this;\r\n        var productCatalogVersions = this.experience.productCatalogVersions;\r\n        return productCatalogVersions.reduce(function (acc, _a) {\r\n            var catalogName = _a.catalogName, catalogVersion = _a.catalogVersion;\r\n            return acc + \" | \" + _this.l10nFilter(catalogName) + \" (\" + catalogVersion + \")\";\r\n        }, '');\r\n    };\r\n    /* @ngInject */ ExperienceSelectorButtonComponent = __decorate([\r\n        SeDowngradeComponent(),\r\n        Component({\r\n            selector: 'se-experience-selector-button',\r\n            template: \"<fd-popover class=\\\"se-experience-selector\\\" [(isOpen)]=\\\"status.isOpen\\\" (isOpenChange)=\\\"resetExperienceSelector()\\\" [closeOnOutsideClick]=\\\"false\\\" [triggers]=\\\"['click']\\\" [placement]=\\\"'bottom-end'\\\"><fd-popover-control><div class=\\\"se-experience-selector__control\\\"><se-tooltip [placement]=\\\"'bottom'\\\" [triggers]=\\\"['mouseenter', 'mouseleave']\\\" *ngIf=\\\"isCurrentPageFromParent\\\" class=\\\"se-experience-selector__tooltip\\\"><span se-tooltip-trigger class=\\\"se-experience-selector__btn--globe\\\"><span class=\\\"hyicon hyicon-globe se-experience-selector__btn--globe--icon\\\"></span></span><div se-tooltip-body>{{ parentCatalogVersion }}</div></se-tooltip><button class=\\\"se-experience-selector__btn\\\" id=\\\"experience-selector-btn\\\"><span [attr.title]=\\\"buildExperienceText()\\\" class=\\\"se-experience-selector__btn-text se-nowrap-ellipsis\\\">{{ buildExperienceText() }} </span><span class=\\\"se-experience-selector__btn-arrow icon-navigation-down-arrow\\\"></span></button></div></fd-popover-control><fd-popover-body><div class=\\\"se-experience-selector__dropdown fd-modal fd-modal__content\\\" role=\\\"menu\\\"><se-experience-selector [experience]=\\\"experience\\\" [dropdownStatus]=\\\"status\\\" [(resetExperienceSelector)]=\\\"resetExperienceSelector\\\"></se-experience-selector></div></fd-popover-body></fd-popover>\"\r\n        }),\r\n        __param(2, Inject(LOCALE_ID)),\r\n        __metadata(\"design:paramtypes\", [SystemEventService,\r\n            CrossFrameEventService, String, ISharedDataService,\r\n            LanguageService])\r\n    ], /* @ngInject */ ExperienceSelectorButtonComponent);\r\n    return /* @ngInject */ ExperienceSelectorButtonComponent;\r\n}());\r\nexport { /* @ngInject */ ExperienceSelectorButtonComponent };\r\n//# sourceMappingURL=ExperienceSelectorButtonComponent.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/common@8.2.14_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@angular/common/common.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/moment@2.24.0/node_modules/moment/moment.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"ExperienceSelectorButtonComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/ExperienceSelectorButtonComponent/ExperienceSelectorButtonComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/services/ExperienceSelectorButtonComponent/ExperienceSelectorButtonComponent.d.ts","writeByteOrderMark":false,"text":"import './ExperienceSelectorButtonComponent.scss';\r\nimport { OnDestroy, OnInit } from '@angular/core';\r\nimport { CrossFrameEventService, IExperience, ISharedDataService, LanguageService, SystemEventService } from 'smarteditcommons';\r\nexport declare class ExperienceSelectorButtonComponent implements OnInit, OnDestroy {\r\n    private systemEventService;\r\n    private crossFrameEventService;\r\n    private locale;\r\n    private sharedDataService;\r\n    private languageService;\r\n    resetExperienceSelector: () => void;\r\n    status: {\r\n        isOpen: boolean;\r\n    };\r\n    isCurrentPageFromParent: boolean;\r\n    parentCatalogVersion: string;\r\n    experience: IExperience;\r\n    private l10nFilter;\r\n    private unregFn;\r\n    private unRegNewPageContextEventFn;\r\n    constructor(systemEventService: SystemEventService, crossFrameEventService: CrossFrameEventService, locale: string, sharedDataService: ISharedDataService, languageService: LanguageService);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    updateExperience(): Promise<void>;\r\n    buildExperienceText(): string;\r\n    setPageFromParent(data: IExperience): void;\r\n    private _returnProductCatalogVersionTextByUuids;\r\n}\r\n"}}

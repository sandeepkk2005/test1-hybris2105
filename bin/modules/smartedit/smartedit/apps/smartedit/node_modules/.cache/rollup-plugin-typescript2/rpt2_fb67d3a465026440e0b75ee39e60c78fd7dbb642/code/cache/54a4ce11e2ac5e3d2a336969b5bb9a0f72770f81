{"code":"import { __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { GatewayProxied, IStorageGateway, IStorageManagerGateway, LogService, SeDowngradeService } from 'smarteditcommons';\r\nimport { StorageProxy } from './StorageProxy';\r\n/** @internal */\r\nvar /* @ngInject */ StorageManagerGateway = /** @class */ (function () {\r\n    function /* @ngInject */ StorageManagerGateway($log, storageGateway) {\r\n        this.$log = $log;\r\n        this.storageGateway = storageGateway;\r\n    }\r\n    /**\r\n     * Disabled for inner app, due not to being able to pass storage controller instances across the gateway\r\n     * @param {IStorageController} controller\r\n     */\r\n    /* @ngInject */ StorageManagerGateway.prototype.registerStorageController = function (controller) {\r\n        throw new Error(\"registerStorageController() is not supported from the smartedit (inner) application, please register controllers from smarteditContainer\");\r\n    };\r\n    /* @ngInject */ StorageManagerGateway.prototype.getStorage = function (storageConfiguration) {\r\n        var _this = this;\r\n        var errMsg = \"Unable to get storage \" + storageConfiguration.storageId;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.getStorageSanitityCheck(storageConfiguration).then(function (createdSuccessfully) {\r\n                if (createdSuccessfully) {\r\n                    resolve(new StorageProxy(storageConfiguration, _this.storageGateway));\r\n                }\r\n                else {\r\n                    _this.$log.error(errMsg);\r\n                    reject(errMsg);\r\n                }\r\n            }, function (result) {\r\n                _this.$log.error(errMsg);\r\n                _this.$log.error(result);\r\n                reject(errMsg);\r\n            });\r\n        });\r\n    };\r\n    // =============================================\r\n    // ============= PROXIED METHODS ===============\r\n    // =============================================\r\n    /* @ngInject */ StorageManagerGateway.prototype.deleteExpiredStorages = function (force) {\r\n        'proxyFunction';\r\n        return undefined;\r\n    };\r\n    /* @ngInject */ StorageManagerGateway.prototype.deleteStorage = function (storageId, force) {\r\n        'proxyFunction';\r\n        return undefined;\r\n    };\r\n    /* @ngInject */ StorageManagerGateway.prototype.getStorageSanitityCheck = function (storageConfiguration) {\r\n        'proxyFunction';\r\n        return undefined;\r\n    };\r\n    /* @ngInject */ StorageManagerGateway.prototype.hasStorage = function (storageId) {\r\n        'proxyFunction';\r\n        return false;\r\n    };\r\n    /* @ngInject */ StorageManagerGateway = __decorate([\r\n        SeDowngradeService(IStorageManagerGateway),\r\n        GatewayProxied('getStorageSanitityCheck', 'deleteExpiredStorages', 'deleteStorage', 'hasStorage'),\r\n        __metadata(\"design:paramtypes\", [LogService, IStorageGateway])\r\n    ], /* @ngInject */ StorageManagerGateway);\r\n    return /* @ngInject */ StorageManagerGateway;\r\n}());\r\nexport { /* @ngInject */ StorageManagerGateway };\r\n//# sourceMappingURL=StorageManagerGatewayInner.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit/src/services/storage/StorageProxy.ts"],"map":"{\"version\":3,\"file\":\"StorageManagerGatewayInner.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/storage/StorageManagerGatewayInner.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAEH,cAAc,EAGd,eAAe,EACf,sBAAsB,EAEtB,UAAU,EACV,kBAAkB,EACrB,MAAM,kBAAkB,CAAC;AAC1B,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAE9C,gBAAgB;AAGhB;IACI,+CAAoB,IAAgB,EAAU,cAA+B;QAAzD,SAAI,GAAJ,IAAI,CAAY;QAAU,mBAAc,GAAd,cAAc,CAAiB;IAAG,CAAC;IAEjF;;;OAGG;IACH,yEAAyB,GAAzB,UAA0B,UAA8B;QACpD,MAAM,IAAI,KAAK,CACX,0IAA0I,CAC7I,CAAC;IACN,CAAC;IAED,0DAAU,GAAV,UAAW,oBAAqC;QAAhD,iBAyBC;QAxBG,IAAM,MAAM,GAAG,2BAAyB,oBAAoB,CAAC,SAAW,CAAC;QAEzE,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,uBAAuB,CAAC,oBAAoB,CAAC,CAAC,IAAI,CACnD,UAAC,mBAA4B;gBACzB,IAAI,mBAAmB,EAAE;oBACrB,OAAO,CACF,IAAI,YAAY,CACb,oBAAoB,EACpB,KAAI,CAAC,cAAc,CACwB,CAClD,CAAC;iBACL;qBAAM;oBACH,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;oBACxB,MAAM,CAAC,MAAM,CAAC,CAAC;iBAClB;YACL,CAAC,EACD,UAAC,MAAW;gBACR,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBACxB,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBACxB,MAAM,CAAC,MAAM,CAAC,CAAC;YACnB,CAAC,CACJ,CAAC;QACN,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gDAAgD;IAChD,gDAAgD;IAChD,gDAAgD;IAEhD,qEAAqB,GAArB,UAAsB,KAAe;QACjC,eAAe,CAAC;QAChB,OAAO,SAAS,CAAC;IACrB,CAAC;IAED,6DAAa,GAAb,UAAc,SAAiB,EAAE,KAAe;QAC5C,eAAe,CAAC;QAChB,OAAO,SAAS,CAAC;IACrB,CAAC;IAED,uEAAuB,GAAvB,UAAwB,oBAAqC;QACzD,eAAe,CAAC;QAChB,OAAO,SAAS,CAAC;IACrB,CAAC;IAED,0DAAU,GAAV,UAAW,SAAiB;QACxB,eAAe,CAAC;QAChB,OAAO,KAAK,CAAC;IACjB,CAAC;IA9DL;QAFC,kBAAkB,CAAC,sBAAsB,CAAC;QAC1C,cAAc,CAAC,yBAAyB,EAAE,uBAAuB,EAAE,eAAe,EAAE,YAAY,CAAC;yCAEpE,UAAU,EAA0B,eAAe;6CA8DhF;IAAD,4CAAC;CAAA,AA/DD,IA+DC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit/services/storage/StorageManagerGatewayInner.d.ts","writeByteOrderMark":false,"text":"import { Cloneable, IStorage, IStorageController, IStorageGateway, IStorageManagerGateway, IStorageOptions, LogService } from 'smarteditcommons';\r\n/** @internal */\r\nexport declare class StorageManagerGateway implements IStorageManagerGateway {\r\n    private $log;\r\n    private storageGateway;\r\n    constructor($log: LogService, storageGateway: IStorageGateway);\r\n    /**\r\n     * Disabled for inner app, due not to being able to pass storage controller instances across the gateway\r\n     * @param {IStorageController} controller\r\n     */\r\n    registerStorageController(controller: IStorageController): void;\r\n    getStorage(storageConfiguration: IStorageOptions): Promise<IStorage<Cloneable, Cloneable>>;\r\n    deleteExpiredStorages(force?: boolean): Promise<boolean>;\r\n    deleteStorage(storageId: string, force?: boolean): Promise<boolean>;\r\n    getStorageSanitityCheck(storageConfiguration: IStorageOptions): Promise<boolean>;\r\n    hasStorage(storageId: string): boolean;\r\n}\r\n"}}

{"code":"import { __decorate, __metadata } from \"tslib\";\r\nimport { Component, EventEmitter, Injector, Input, Output, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { PopoverComponent } from '@fundamental-ngx/core';\r\nimport { SeDowngradeComponent } from '../../di';\r\nimport { windowUtils } from '../../utils';\r\nimport { POPUP_OVERLAY_DATA } from './PopupOverlayConfig';\r\nimport { PopoverTrigger } from './PopupOverlayTrigger';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"PopupOverlayComponent\", {\r\n    selector: 'se-popup-overlay',\r\n    template: \"\\n        <fd-popover\\n            [placement]=\\\"getPlacement()\\\"\\n            [noArrow]=\\\"true\\\"\\n            [appendTo]=\\\"appendTo\\\"\\n            [triggers]=\\\"trigger.length && trigger\\\"\\n            (isOpenChange)=\\\"handleOpenChange($event)\\\"\\n            [additionalClasses]=\\\"['se-popup-overlay-container']\\\"\\n            class=\\\"popup-overlay popover-outer\\\"\\n        >\\n            <fd-popover-control> <ng-content></ng-content> </fd-popover-control>\\n\\n            <fd-popover-body #popoverBody class=\\\"popover-inner popup-overlay__inner\\\">\\n                <ng-container *ngIf=\\\"isOpen\\\">\\n                    <div\\n                        *ngIf=\\\"popupOverlay.template\\\"\\n                        [seCompileHtml]=\\\"popupOverlay.template\\\"\\n                        [scope]=\\\"popupOverlayData\\\"\\n                        [compileHtmlNgController]=\\\"popupOverlay.legacyController\\\"\\n                    ></div>\\n                    <div\\n                        *ngIf=\\\"popupOverlay.templateUrl\\\"\\n                        [ngInclude]=\\\"popupOverlay.templateUrl\\\"\\n                        [scope]=\\\"popupOverlayData\\\"\\n                        [compileHtmlNgController]=\\\"popupOverlay.legacyController\\\"\\n                    ></div>\\n                    <ng-container *ngIf=\\\"popupOverlay.component\\\">\\n                        <ng-container\\n                            *ngComponentOutlet=\\\"\\n                                popupOverlay.component;\\n                                injector: popupOverlayInjector\\n                            \\\"\\n                        ></ng-container>\\n                    </ng-container>\\n                    <ng-content select=\\\"[se-popup-overlay-body]\\\"></ng-content>\\n                </ng-container>\\n            </fd-popover-body>\\n        </fd-popover>\\n    \",\r\n    styles: [\".se-popup-overlay-container{z-index:1060!important}\"],\r\n    encapsulation: ViewEncapsulation.None\r\n});\r\nvar /* @ngInject */ PopupOverlayComponent = /** @class */ (function () {\r\n    function /* @ngInject */ PopupOverlayComponent(injector) {\r\n        this.injector = injector;\r\n        this.popupOverlayOnShow = new EventEmitter();\r\n        this.popupOverlayOnHide = new EventEmitter();\r\n        this.trigger = [];\r\n    }\r\n    /* @ngInject */ PopupOverlayComponent.prototype.ngOnInit = function () {\r\n        this.setTrigger();\r\n        this.createInjector();\r\n        this.appendTo = windowUtils.isIframe()\r\n            ? document.getElementById('smarteditoverlay')\r\n            : document.getElementsByTagName('body')[0];\r\n    };\r\n    /* @ngInject */ PopupOverlayComponent.prototype.ngOnChanges = function (changes) {\r\n        if (changes.popupOverlayTrigger) {\r\n            this.setTrigger();\r\n        }\r\n        if (changes.popupOverlayData) {\r\n            this.createInjector();\r\n        }\r\n    };\r\n    /* @ngInject */ PopupOverlayComponent.prototype.handleOpenChange = function (isOpen) {\r\n        return isOpen ? this.handleOpen() : this.handleClose();\r\n    };\r\n    /* @ngInject */ PopupOverlayComponent.prototype.handleOpen = function () {\r\n        this.isOpen = true;\r\n        this.popupOverlayOnShow.emit();\r\n    };\r\n    /* @ngInject */ PopupOverlayComponent.prototype.handleClose = function () {\r\n        this.isOpen = false;\r\n        this.popupOverlayOnHide.emit();\r\n    };\r\n    /* @ngInject */ PopupOverlayComponent.prototype.getPlacement = function () {\r\n        return (this.popupOverlay.valign || 'bottom') + \"-\" + this.getHorizontalAlign();\r\n    };\r\n    /* @ngInject */ PopupOverlayComponent.prototype.setTrigger = function () {\r\n        if (this.popupOverlayTrigger === PopoverTrigger.Click) {\r\n            this.trigger = [this.popupOverlayTrigger];\r\n        }\r\n        if (this.popupOverlayTrigger === PopoverTrigger.Hover) {\r\n            this.trigger = ['mouseenter', 'mouseleave'];\r\n        }\r\n        if (!this.popover) {\r\n            return;\r\n        }\r\n        if (this.popupOverlayTrigger === 'true' || this.popupOverlayTrigger === true) {\r\n            this.popover.open();\r\n        }\r\n        else {\r\n            this.popover.close();\r\n        }\r\n    };\r\n    /* @ngInject */ PopupOverlayComponent.prototype.getHorizontalAlign = function () {\r\n        if (!this.popupOverlay.halign) {\r\n            return 'start';\r\n        }\r\n        return this.popupOverlay.halign === 'right' ? 'start' : 'end';\r\n    };\r\n    /* @ngInject */ PopupOverlayComponent.prototype.createInjector = function () {\r\n        this.popupOverlayInjector = Injector.create({\r\n            providers: [\r\n                {\r\n                    provide: POPUP_OVERLAY_DATA,\r\n                    useValue: this.popupOverlayData || {}\r\n                }\r\n            ],\r\n            parent: this.injector\r\n        });\r\n    };\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], /* @ngInject */ PopupOverlayComponent.prototype, \"popupOverlay\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], /* @ngInject */ PopupOverlayComponent.prototype, \"popupOverlayTrigger\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], /* @ngInject */ PopupOverlayComponent.prototype, \"popupOverlayData\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], /* @ngInject */ PopupOverlayComponent.prototype, \"popupOverlayOnShow\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], /* @ngInject */ PopupOverlayComponent.prototype, \"popupOverlayOnHide\", void 0);\r\n    __decorate([\r\n        ViewChild(PopoverComponent, { static: false }),\r\n        __metadata(\"design:type\", PopoverComponent)\r\n    ], /* @ngInject */ PopupOverlayComponent.prototype, \"popover\", void 0);\r\n    /* @ngInject */ PopupOverlayComponent = __decorate([\r\n        SeDowngradeComponent(),\r\n        Component({\r\n            selector: 'se-popup-overlay',\r\n            template: \"\\n        <fd-popover\\n            [placement]=\\\"getPlacement()\\\"\\n            [noArrow]=\\\"true\\\"\\n            [appendTo]=\\\"appendTo\\\"\\n            [triggers]=\\\"trigger.length && trigger\\\"\\n            (isOpenChange)=\\\"handleOpenChange($event)\\\"\\n            [additionalClasses]=\\\"['se-popup-overlay-container']\\\"\\n            class=\\\"popup-overlay popover-outer\\\"\\n        >\\n            <fd-popover-control> <ng-content></ng-content> </fd-popover-control>\\n\\n            <fd-popover-body #popoverBody class=\\\"popover-inner popup-overlay__inner\\\">\\n                <ng-container *ngIf=\\\"isOpen\\\">\\n                    <div\\n                        *ngIf=\\\"popupOverlay.template\\\"\\n                        [seCompileHtml]=\\\"popupOverlay.template\\\"\\n                        [scope]=\\\"popupOverlayData\\\"\\n                        [compileHtmlNgController]=\\\"popupOverlay.legacyController\\\"\\n                    ></div>\\n                    <div\\n                        *ngIf=\\\"popupOverlay.templateUrl\\\"\\n                        [ngInclude]=\\\"popupOverlay.templateUrl\\\"\\n                        [scope]=\\\"popupOverlayData\\\"\\n                        [compileHtmlNgController]=\\\"popupOverlay.legacyController\\\"\\n                    ></div>\\n                    <ng-container *ngIf=\\\"popupOverlay.component\\\">\\n                        <ng-container\\n                            *ngComponentOutlet=\\\"\\n                                popupOverlay.component;\\n                                injector: popupOverlayInjector\\n                            \\\"\\n                        ></ng-container>\\n                    </ng-container>\\n                    <ng-content select=\\\"[se-popup-overlay-body]\\\"></ng-content>\\n                </ng-container>\\n            </fd-popover-body>\\n        </fd-popover>\\n    \",\r\n            styles: [\".se-popup-overlay-container{z-index:1060!important}\"],\r\n            encapsulation: ViewEncapsulation.None\r\n        }),\r\n        __metadata(\"design:paramtypes\", [Injector])\r\n    ], /* @ngInject */ PopupOverlayComponent);\r\n    return /* @ngInject */ PopupOverlayComponent;\r\n}());\r\nexport { /* @ngInject */ PopupOverlayComponent };\r\n//# sourceMappingURL=PopupOverlayComponent.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@fundamental-ngx/core@0.13.2_9a9a80bb6ff375d99f90188f858ebbd5/node_modules/@fundamental-ngx/core/fundamental-ngx-core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/popper.js@1.16.1/node_modules/popper.js/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/di/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/utils/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/popupOverlay/PopupOverlayConfig.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/popupOverlay/PopupOverlayTrigger.ts"],"map":"{\"version\":3,\"file\":\"PopupOverlayComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/popupOverlay/PopupOverlayComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/components/popupOverlay/PopupOverlayComponent.d.ts","writeByteOrderMark":false,"text":"import { EventEmitter, Injector, SimpleChanges } from '@angular/core';\r\nimport { PopoverComponent } from '@fundamental-ngx/core';\r\nimport { TypedMap } from '@smart/utils';\r\nimport { Placement } from 'popper.js';\r\nimport { PopupOverlayConfig } from './PopupOverlayConfig';\r\nimport { PopupOverlayTrigger } from './PopupOverlayTrigger';\r\nexport declare class PopupOverlayComponent {\r\n    private injector;\r\n    popupOverlay: PopupOverlayConfig;\r\n    popupOverlayTrigger: PopupOverlayTrigger;\r\n    popupOverlayData: TypedMap<any>;\r\n    popupOverlayOnShow: EventEmitter<any>;\r\n    popupOverlayOnHide: EventEmitter<any>;\r\n    popover: PopoverComponent;\r\n    isOpen: boolean;\r\n    trigger: string[];\r\n    appendTo: HTMLElement;\r\n    popupOverlayInjector: Injector;\r\n    constructor(injector: Injector);\r\n    ngOnInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    handleOpenChange(isOpen: boolean): void;\r\n    handleOpen(): void;\r\n    handleClose(): void;\r\n    getPlacement(): Placement;\r\n    private setTrigger;\r\n    private getHorizontalAlign;\r\n    private createInjector;\r\n}\r\n"}}

{"code":"/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { InjectionToken } from '@angular/core';\r\nexport var ANNOUNCEMENT_DATA = new InjectionToken('ANNOUNCEMENT_DATA');\r\n/**\r\n * Interface for Announcement service\r\n */\r\nvar IAnnouncementService = /** @class */ (function () {\r\n    function IAnnouncementService() {\r\n    }\r\n    /**\r\n     * This method creates a new announcement and displays it.\r\n     *\r\n     * The configuration must contain either a description, template or template URL, but not multiple.\r\n     *\r\n     * @returns Returns a promise with announcement id.\r\n     */\r\n    IAnnouncementService.prototype.showAnnouncement = function (announcementConfig) {\r\n        'proxyFunction';\r\n        return null;\r\n    };\r\n    /**\r\n     * This method is used to close the announcement by given announcement id.\r\n     */\r\n    IAnnouncementService.prototype.closeAnnouncement = function (announcementId) {\r\n        'proxyFunction';\r\n        return null;\r\n    };\r\n    return IAnnouncementService;\r\n}());\r\nexport { IAnnouncementService };\r\n//# sourceMappingURL=IAnnouncementService.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"IAnnouncementService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/interfaces/IAnnouncementService.ts\"],\"names\":[],\"mappings\":\"AAAA;;GAEG;AACH,OAAO,EAAE,cAAc,EAAQ,MAAM,eAAe,CAAC;AAOrD,MAAM,CAAC,IAAM,iBAAiB,GAAG,IAAI,cAAc,CAAmB,mBAAmB,CAAC,CAAC;AA4E3F;;GAEG;AACH;IAAA;IAoBA,CAAC;IAnBG;;;;;;OAMG;IACH,+CAAgB,GAAhB,UAAiB,kBAAuC;QACpD,eAAe,CAAC;QAChB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;OAEG;IACH,gDAAiB,GAAjB,UAAkB,cAAsB;QACpC,eAAe,CAAC;QAChB,OAAO,IAAI,CAAC;IAChB,CAAC;IACL,2BAAC;AAAD,CAAC,AApBD,IAoBC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/services/interfaces/IAnnouncementService.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"angular\" />\r\nimport { InjectionToken, Type } from '@angular/core';\r\nimport { TypedMap } from '@smart/utils';\r\nexport declare type AnnouncementData<T = TypedMap<any>> = T & {\r\n    id: string;\r\n};\r\nexport declare const ANNOUNCEMENT_DATA: InjectionToken<AnnouncementData<TypedMap<any>>>;\r\n/**\r\n * Describes the Announcement configuration for  {@link AnnouncementComponent}.\r\n */\r\nexport interface IAnnouncementConfig {\r\n    /**\r\n     * The announcement's message to display.\r\n     *\r\n     * Either one of message, template or templateUrl must be present to display an announcement.\r\n     */\r\n    message?: string;\r\n    /**\r\n     * Optional title for the announcement's message.\r\n     *\r\n     * This is only used when message is available.\r\n     */\r\n    messageTitle?: string;\r\n    /**\r\n     * **Deprecated since 2005, use [component]{@link IAnnouncementConfig#component}.**\r\n     *\r\n     * The announcement's HTML template to display.\r\n     *\r\n     * Either one of message, template, templateUrl or component must be present to display an announcement.\r\n     *\r\n     * @deprecated\r\n     */\r\n    template?: string;\r\n    /**\r\n     * The announcement's component to display.\r\n     *\r\n     * Either one of message, template, templateUrl or component must be present to display an announcement.\r\n     */\r\n    component?: Type<any>;\r\n    /**\r\n     * Data to pass along to the component through the [token]{@link ANNOUNCEMENT_DATA#token}.\r\n     */\r\n    data?: AnnouncementData;\r\n    /**\r\n     * **Deprecated since 2005, use [component]{@link IAnnouncementConfig#component}.**\r\n     *\r\n     * The announcement's template url to display.\r\n     *\r\n     * Either one of message, template, templateUrl or component must be present to display an announcement.\r\n     *\r\n     * @deprecated\r\n     */\r\n    templateUrl?: string;\r\n    /**\r\n     * **Deprecated since 2005, use [component]{@link IAnnouncementConfig#component}.**\r\n     *\r\n     * The custom controller that defines the given template or templateUrl.\r\n     * The content of the controller in template or templateUrl can be accessed using '$announcementCtrl' alias.\r\n     * @deprecated\r\n     */\r\n    controller?: angular.IControllerConstructor;\r\n    /**\r\n     * The optional boolean that determines if a close button must be displayed or not.\r\n     * The default is true.\r\n     */\r\n    closeable?: boolean;\r\n    /**\r\n     * The optional timeout in milliseconds that determines when to close the announcement.\r\n     * The default is 5000.\r\n     */\r\n    timeout?: number;\r\n}\r\n/**\r\n * Interface for Announcement service\r\n */\r\nexport declare abstract class IAnnouncementService {\r\n    /**\r\n     * This method creates a new announcement and displays it.\r\n     *\r\n     * The configuration must contain either a description, template or template URL, but not multiple.\r\n     *\r\n     * @returns Returns a promise with announcement id.\r\n     */\r\n    showAnnouncement(announcementConfig: IAnnouncementConfig): PromiseLike<string>;\r\n    /**\r\n     * This method is used to close the announcement by given announcement id.\r\n     */\r\n    closeAnnouncement(announcementId: string): PromiseLike<void>;\r\n}\r\n"}}

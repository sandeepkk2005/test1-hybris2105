{"code":"import { __decorate, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { DatePipe } from '@angular/common';\r\nimport { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\r\nimport { NgModel } from '@angular/forms';\r\nimport { DATE_CONSTANTS } from 'smarteditcommons/utils';\r\n/**\r\n * The date formatter is for displaying the date in the desired format.\r\n * You can pass the desired format in the attributes of this directive and it will be shown.\r\n * It is  used with the <input> tag as we cant use date filter with it.\r\n * for eg- <input type='text' dateFormatter formatType=\"short\">\r\n * format-type can be short, medium etc.\r\n * If the format-type is not given in the directive template, by default it uses the short type\r\n */\r\nvar DateFormatterDirective = /** @class */ (function () {\r\n    function DateFormatterDirective(ngModel, element, renderer, datePipe) {\r\n        this.ngModel = ngModel;\r\n        this.element = element;\r\n        this.renderer = renderer;\r\n        this.datePipe = datePipe;\r\n    }\r\n    DateFormatterDirective.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.ngModel.valueChanges.subscribe(function (value) {\r\n            var patchedValue = _this.datePipe.transform(value, _this.formatType || DATE_CONSTANTS.ANGULAR_FORMAT);\r\n            if (patchedValue !== value) {\r\n                _this.renderer.setProperty(_this.element.nativeElement, 'value', patchedValue);\r\n            }\r\n        });\r\n    };\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], DateFormatterDirective.prototype, \"formatType\", void 0);\r\n    DateFormatterDirective = __decorate([\r\n        Directive({\r\n            selector: '[ngModel][dateFormatter]',\r\n            providers: [NgModel, DatePipe]\r\n        }),\r\n        __metadata(\"design:paramtypes\", [NgModel,\r\n            ElementRef,\r\n            Renderer2,\r\n            DatePipe])\r\n    ], DateFormatterDirective);\r\n    return DateFormatterDirective;\r\n}());\r\nexport { DateFormatterDirective };\r\n//# sourceMappingURL=DateFormatterDirective.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/common@8.2.14_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@angular/common/common.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/forms@8.2.14_e9fbe5720e9434eb9ae0f6720f1ca3f4/node_modules/@angular/forms/forms.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/utils/index.ts"],"map":"{\"version\":3,\"file\":\"DateFormatterDirective.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/components/genericEditor/widgets/DateTimePickerComponent/DateFormatterDirective.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EAAE,QAAQ,EAAE,MAAM,iBAAiB,CAAC;AAC3C,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AACxE,OAAO,EAAE,OAAO,EAAE,MAAM,gBAAgB,CAAC;AAEzC,OAAO,EAAE,cAAc,EAAE,MAAM,wBAAwB,CAAC;AAExD;;;;;;;GAOG;AAKH;IAGI,gCACY,OAAgB,EAChB,OAAmB,EACnB,QAAmB,EACnB,QAAkB;QAHlB,YAAO,GAAP,OAAO,CAAS;QAChB,YAAO,GAAP,OAAO,CAAY;QACnB,aAAQ,GAAR,QAAQ,CAAW;QACnB,aAAQ,GAAR,QAAQ,CAAU;IAC3B,CAAC;IAEJ,yCAAQ,GAAR;QAAA,iBAeC;QAdG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,KAAa;YAC9C,IAAM,YAAY,GAAG,KAAI,CAAC,QAAQ,CAAC,SAAS,CACxC,KAAK,EACL,KAAI,CAAC,UAAU,IAAI,cAAc,CAAC,cAAc,CACnD,CAAC;YAEF,IAAI,YAAY,KAAK,KAAK,EAAE;gBACxB,KAAI,CAAC,QAAQ,CAAC,WAAW,CACrB,KAAI,CAAC,OAAO,CAAC,aAAiC,EAC9C,OAAO,EACP,YAAY,CACf,CAAC;aACL;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAxBQ;QAAR,KAAK,EAAE;;8DAAqB;IADpB,sBAAsB;QAJlC,SAAS,CAAC;YACP,QAAQ,EAAE,0BAA0B;YACpC,SAAS,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC;SACjC,CAAC;yCAKuB,OAAO;YACP,UAAU;YACT,SAAS;YACT,QAAQ;OAPrB,sBAAsB,CA0BlC;IAAD,6BAAC;CAAA,AA1BD,IA0BC;SA1BY,sBAAsB\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/components/genericEditor/widgets/DateTimePickerComponent/DateFormatterDirective.d.ts","writeByteOrderMark":false,"text":"import { DatePipe } from '@angular/common';\r\nimport { ElementRef, Renderer2 } from '@angular/core';\r\nimport { NgModel } from '@angular/forms';\r\n/**\r\n * The date formatter is for displaying the date in the desired format.\r\n * You can pass the desired format in the attributes of this directive and it will be shown.\r\n * It is  used with the <input> tag as we cant use date filter with it.\r\n * for eg- <input type='text' dateFormatter formatType=\"short\">\r\n * format-type can be short, medium etc.\r\n * If the format-type is not given in the directive template, by default it uses the short type\r\n */\r\nexport declare class DateFormatterDirective {\r\n    private ngModel;\r\n    private element;\r\n    private renderer;\r\n    private datePipe;\r\n    formatType?: string;\r\n    constructor(ngModel: NgModel, element: ElementRef, renderer: Renderer2, datePipe: DatePipe);\r\n    ngOnInit(): void;\r\n}\r\n"}}

{"code":"import { __awaiter, __decorate, __generator, __metadata } from \"tslib\";\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { TypePermissionsRestService } from 'cmscommons';\r\nimport { SeDowngradeComponent } from 'smarteditcommons';\r\nimport { PageTypeService } from '../../../../../dao/PageTypeService';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"SelectPageTypeComponent\", {\r\n    selector: 'se-select-page-type',\r\n    template: \"<div><div class=\\\"se-add-page__sub-header\\\">{{ 'se.cms.addpagewizard.pagetype.description' | translate }}</div><div class=\\\"se-add-page__list fd-menu\\\" *ngIf=\\\"pageTypes.length > 0\\\"><div class=\\\"se-add-page__item fd-menu__item\\\" *ngFor=\\\"let pageType of pageTypes\\\" [ngClass]=\\\"{ 'is-selected': isSelected(pageType)}\\\" (click)=\\\"selectType(pageType)\\\"><div class=\\\"se-add-page__item-title\\\">{{ pageType.name | seL10n | async }}</div><div class=\\\"se-add-page__item-description\\\">{{ pageType.description | seL10n | async }}</div></div></div></div>\",\r\n    styles: [\".se-add-page__sub-header{padding-bottom:16px;color:#51555a}.se-add-page__sub-header-title{margin-bottom:8px}.se-add-page__list.fd-menu{border-top:1px solid #d9d9d9;padding:0}.se-add-page__item{cursor:pointer}.se-add-page__item--page-template{height:48px;display:flex;flex-direction:row;align-items:center}.se-add-page__item-title{font-weight:700}.se-add-page__item-description{white-space:normal}\"],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n});\r\nvar /* @ngInject */ SelectPageTypeComponent = /** @class */ (function () {\r\n    function /* @ngInject */ SelectPageTypeComponent(pageTypeService, typePermissionsRestService, cdr) {\r\n        this.pageTypeService = pageTypeService;\r\n        this.typePermissionsRestService = typePermissionsRestService;\r\n        this.cdr = cdr;\r\n        this.onTypeSelected = new EventEmitter();\r\n        this.pageTypes = [];\r\n    }\r\n    /* @ngInject */ SelectPageTypeComponent.prototype.ngOnInit = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.loadPageTypes()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        this.cdr.detectChanges();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ SelectPageTypeComponent.prototype.selectType = function (pageType) {\r\n        this.onTypeSelected.emit(pageType);\r\n    };\r\n    /* @ngInject */ SelectPageTypeComponent.prototype.isSelected = function (pageType) {\r\n        return pageType.code === this.pageTypeCode;\r\n    };\r\n    /* @ngInject */ SelectPageTypeComponent.prototype.loadPageTypes = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var pageTypes, allPageTypeCodes, createPermissionResult;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.pageTypeService.getPageTypes()];\r\n                    case 1:\r\n                        pageTypes = _a.sent();\r\n                        allPageTypeCodes = pageTypes.map(function (pageType) { return pageType.code; });\r\n                        return [4 /*yield*/, this.typePermissionsRestService.hasCreatePermissionForTypes(allPageTypeCodes)];\r\n                    case 2:\r\n                        createPermissionResult = _a.sent();\r\n                        this.pageTypes = pageTypes.filter(function (pageType) { return createPermissionResult[pageType.code]; });\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], /* @ngInject */ SelectPageTypeComponent.prototype, \"pageTypeCode\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], /* @ngInject */ SelectPageTypeComponent.prototype, \"onTypeSelected\", void 0);\r\n    /* @ngInject */ SelectPageTypeComponent = __decorate([\r\n        SeDowngradeComponent(),\r\n        Component({\r\n            selector: 'se-select-page-type',\r\n            template: \"<div><div class=\\\"se-add-page__sub-header\\\">{{ 'se.cms.addpagewizard.pagetype.description' | translate }}</div><div class=\\\"se-add-page__list fd-menu\\\" *ngIf=\\\"pageTypes.length > 0\\\"><div class=\\\"se-add-page__item fd-menu__item\\\" *ngFor=\\\"let pageType of pageTypes\\\" [ngClass]=\\\"{ 'is-selected': isSelected(pageType)}\\\" (click)=\\\"selectType(pageType)\\\"><div class=\\\"se-add-page__item-title\\\">{{ pageType.name | seL10n | async }}</div><div class=\\\"se-add-page__item-description\\\">{{ pageType.description | seL10n | async }}</div></div></div></div>\",\r\n            styles: [\".se-add-page__sub-header{padding-bottom:16px;color:#51555a}.se-add-page__sub-header-title{margin-bottom:8px}.se-add-page__list.fd-menu{border-top:1px solid #d9d9d9;padding:0}.se-add-page__item{cursor:pointer}.se-add-page__item--page-template{height:48px;display:flex;flex-direction:row;align-items:center}.se-add-page__item-title{font-weight:700}.se-add-page__item-description{white-space:normal}\"],\r\n            changeDetection: ChangeDetectionStrategy.OnPush\r\n        }),\r\n        __metadata(\"design:paramtypes\", [PageTypeService,\r\n            TypePermissionsRestService,\r\n            ChangeDetectorRef])\r\n    ], /* @ngInject */ SelectPageTypeComponent);\r\n    return /* @ngInject */ SelectPageTypeComponent;\r\n}());\r\nexport { /* @ngInject */ SelectPageTypeComponent };\r\n//# sourceMappingURL=SelectPageTypeComponent.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/dao/PageTypeService.ts"],"map":"{\"version\":3,\"file\":\"SelectPageTypeComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../src/components/pages/addPageWizard/components/selectPageType/SelectPageTypeComponent.ts\"],\"names\":[],\"mappings\":\";AACA,OAAO,EACH,uBAAuB,EACvB,iBAAiB,EACjB,SAAS,EACT,YAAY,EACZ,KAAK,EAEL,MAAM,EACT,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,0BAA0B,EAAE,MAAM,YAAY,CAAC;AACxD,OAAO,EAAE,oBAAoB,EAAE,MAAM,kBAAkB,CAAC;AACxD,OAAO,EAAY,eAAe,EAAE,MAAM,oCAAoC,CAAC;iFAGpE;IACP,QAAQ,EAAE,qBAAqB;IAC/B,QAAQ,EAAE,oiBAAkhB;IAC5hB,MAAM,EAAE,CAAC,8YAA8Y,CAAC;IACxZ,eAAe,EAAE,uBAAuB,CAAC,MAAM;CAClD;AACD;IAMI,iDACY,eAAgC,EAChC,0BAAsD,EACtD,GAAsB;QAFtB,oBAAe,GAAf,eAAe,CAAiB;QAChC,+BAA0B,GAA1B,0BAA0B,CAA4B;QACtD,QAAG,GAAH,GAAG,CAAmB;QAE9B,IAAI,CAAC,cAAc,GAAG,IAAI,YAAY,EAAE,CAAC;QACzC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACxB,CAAC;IAEK,0DAAQ,GAAd;;;;4BACI,qBAAM,IAAI,CAAC,aAAa,EAAE,EAAA;;wBAA1B,SAA0B,CAAC;wBAC3B,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;;;;;KAC5B;IAEM,4DAAU,GAAjB,UAAkB,QAAkB;QAChC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACvC,CAAC;IAEM,4DAAU,GAAjB,UAAkB,QAAkB;QAChC,OAAO,QAAQ,CAAC,IAAI,KAAK,IAAI,CAAC,YAAY,CAAC;IAC/C,CAAC;IAEa,+DAAa,GAA3B;;;;;4BACsB,qBAAM,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,EAAA;;wBAArD,SAAS,GAAG,SAAyC;wBACrD,gBAAgB,GAAG,SAAS,CAAC,GAAG,CAAC,UAAC,QAAQ,IAAK,OAAA,QAAQ,CAAC,IAAI,EAAb,CAAa,CAAC,CAAC;wBACrC,qBAAM,IAAI,CAAC,0BAA0B,CAAC,2BAA2B,CAC5F,gBAAgB,CACnB,EAAA;;wBAFK,sBAAsB,GAAG,SAE9B;wBACD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,UAAC,QAAQ,IAAK,OAAA,sBAAsB,CAAC,QAAQ,CAAC,IAAI,CAAC,EAArC,CAAqC,CAAC,CAAC;;;;;KAC1F;IAlCQ;QAAR,KAAK,EAAE;;iFAAsB;IACpB;QAAT,MAAM,EAAE;kCAAiB,YAAY;mFAAW;IAFrD;QAPC,oBAAoB,EAAE;QACtB,SAAS,CAAC;YACP,QAAQ,EAAE,qBAAqB;YAC/B,QAAQ,EAAE,oiBAAkhB;YAC5hB,MAAM,EAAE,CAAC,8YAA8Y,CAAC;YACxZ,eAAe,EAAE,uBAAuB,CAAC,MAAM;SAClD,CAAC;yCAQ+B,eAAe;YACJ,0BAA0B;YACjD,iBAAiB;+CA2BrC;IAAD,8CAAC;CAAA,AApCD,IAoCC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/components/pages/addPageWizard/components/selectPageType/SelectPageTypeComponent.d.ts","writeByteOrderMark":false,"text":"import { ChangeDetectorRef, EventEmitter, OnInit } from '@angular/core';\r\nimport { TypePermissionsRestService } from 'cmscommons';\r\nimport { PageType, PageTypeService } from '../../../../../dao/PageTypeService';\r\nexport declare class SelectPageTypeComponent implements OnInit {\r\n    private pageTypeService;\r\n    private typePermissionsRestService;\r\n    private cdr;\r\n    pageTypeCode: string;\r\n    onTypeSelected: EventEmitter<PageType>;\r\n    pageTypes: PageType[];\r\n    constructor(pageTypeService: PageTypeService, typePermissionsRestService: TypePermissionsRestService, cdr: ChangeDetectorRef);\r\n    ngOnInit(): Promise<void>;\r\n    selectType(pageType: PageType): void;\r\n    isSelected(pageType: PageType): boolean;\r\n    private loadPageTypes;\r\n}\r\n"}}

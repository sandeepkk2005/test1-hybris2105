{"code":"import { __decorate, __metadata } from \"tslib\";\r\nimport { Cached, InvalidateCache } from '../cache';\r\n/**\r\n * @ngdoc service\r\n * @name @smartutils.service:AbstractCachedRestService\r\n *\r\n * @description\r\n * Base class to implement Cache enabled {@link @smartutils.interfaces:IRestService IRestServices}.\r\n * <br/>Implementing classes just need declare a class level {@link @smartutils.object:@CacheConfig @CacheConfig} annotation\r\n * with at least one {@link @smartutils.object:CacheAction CacheAction} and one {@link @smartutils.object:EvictionTag EvictionTag}.\r\n * <br/>Cache policies called by the set of {@link @smartutils.object:CacheAction CacheActions} will have access to\r\n * REST call response headers being added to the response under \"headers\" property.\r\n * <br/>Those headers are then stripped from the response.\r\n *\r\n * <h2>Usage</h2>\r\n * <pre>\r\n * &#64;CacheConfig({actions: [rarelyChangingContent], tags: [userEvictionTag]})\r\n * &#64;SeInjectable()\r\n * export class ProductCatalogRestService extends AbstractCachedRestService<IBaseCatalogs> {\r\n * \tconstructor(restServiceFactory: IRestServiceFactory) {\r\n * \t\tsuper(restServiceFactory, '/productcatalogs');\r\n * \t}\r\n * }\r\n * </pre>\r\n */\r\nvar AbstractCachedRestService = /** @class */ (function () {\r\n    function AbstractCachedRestService(restServiceFactory, uri, identifier) {\r\n        this.innerRestService = restServiceFactory.get(uri, identifier);\r\n        this.innerRestService.activateMetadata && this.innerRestService.activateMetadata();\r\n    }\r\n    AbstractCachedRestService.prototype.getById = function (identifier, options) {\r\n        return this.innerRestService.getById(identifier, options);\r\n    };\r\n    AbstractCachedRestService.prototype.get = function (searchParams, options) {\r\n        return this.innerRestService.get(searchParams, options);\r\n    };\r\n    AbstractCachedRestService.prototype.query = function (searchParams, options) {\r\n        return this.innerRestService.query(searchParams, options);\r\n    };\r\n    AbstractCachedRestService.prototype.page = function (searchParams, options) {\r\n        return this.innerRestService.page(searchParams, options);\r\n    };\r\n    AbstractCachedRestService.prototype.update = function (payload, options) {\r\n        return this.innerRestService.update(payload, options);\r\n    };\r\n    AbstractCachedRestService.prototype.patch = function (payload, options) {\r\n        return this.innerRestService.patch(payload, options);\r\n    };\r\n    AbstractCachedRestService.prototype.remove = function (payload, options) {\r\n        return this.innerRestService.remove(payload, options);\r\n    };\r\n    AbstractCachedRestService.prototype.save = function (payload, options) {\r\n        return this.innerRestService.save(payload, options);\r\n    };\r\n    AbstractCachedRestService.prototype.queryByPost = function (payload, searchParams, options) {\r\n        return this.innerRestService.queryByPost(payload, searchParams, options);\r\n    };\r\n    __decorate([\r\n        StripResponseHeaders,\r\n        Cached(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [String, Object]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], AbstractCachedRestService.prototype, \"getById\", null);\r\n    __decorate([\r\n        StripResponseHeaders,\r\n        Cached(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Object, Object]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], AbstractCachedRestService.prototype, \"get\", null);\r\n    __decorate([\r\n        StripResponseHeaders,\r\n        Cached(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Object, Object]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], AbstractCachedRestService.prototype, \"query\", null);\r\n    __decorate([\r\n        StripResponseHeaders,\r\n        Cached(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Object, Object]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], AbstractCachedRestService.prototype, \"page\", null);\r\n    __decorate([\r\n        StripResponseHeaders,\r\n        InvalidateCache(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Object, Object]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], AbstractCachedRestService.prototype, \"update\", null);\r\n    __decorate([\r\n        StripResponseHeaders,\r\n        InvalidateCache(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Object, Object]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], AbstractCachedRestService.prototype, \"patch\", null);\r\n    __decorate([\r\n        InvalidateCache(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Object, Object]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], AbstractCachedRestService.prototype, \"remove\", null);\r\n    __decorate([\r\n        StripResponseHeaders,\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Object, Object]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], AbstractCachedRestService.prototype, \"save\", null);\r\n    __decorate([\r\n        StripResponseHeaders,\r\n        Cached(),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Object, Object, Object]),\r\n        __metadata(\"design:returntype\", Promise)\r\n    ], AbstractCachedRestService.prototype, \"queryByPost\", null);\r\n    return AbstractCachedRestService;\r\n}());\r\nexport { AbstractCachedRestService };\r\nexport function StripResponseHeaders(target, propertyName, descriptor) {\r\n    var originalMethod = descriptor.value;\r\n    if (originalMethod) {\r\n        descriptor.value = function () {\r\n            return originalMethod\r\n                .apply(this, Array.prototype.slice.call(arguments))\r\n                .then(function (response) {\r\n                delete response.headers;\r\n                return response;\r\n            });\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=abstract-cached-rest.service.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/dtos/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/services/cache/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/src/services/rest/index.ts"],"map":"{\"version\":3,\"file\":\"abstract-cached-rest.service.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/rest/abstract-cached-rest.service.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/services/rest/abstract-cached-rest.service.d.ts","writeByteOrderMark":false,"text":"/**\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n * @module smartutils\r\n */\r\nimport { Page, Pageable, Payload } from '../../dtos';\r\nimport { IRestOptions, IRestService, IRestServiceFactory, SearchParams } from '.';\r\n/**\r\n * @ngdoc service\r\n * @name @smartutils.service:AbstractCachedRestService\r\n *\r\n * @description\r\n * Base class to implement Cache enabled {@link @smartutils.interfaces:IRestService IRestServices}.\r\n * <br/>Implementing classes just need declare a class level {@link @smartutils.object:@CacheConfig @CacheConfig} annotation\r\n * with at least one {@link @smartutils.object:CacheAction CacheAction} and one {@link @smartutils.object:EvictionTag EvictionTag}.\r\n * <br/>Cache policies called by the set of {@link @smartutils.object:CacheAction CacheActions} will have access to\r\n * REST call response headers being added to the response under \"headers\" property.\r\n * <br/>Those headers are then stripped from the response.\r\n *\r\n * <h2>Usage</h2>\r\n * <pre>\r\n * &#64;CacheConfig({actions: [rarelyChangingContent], tags: [userEvictionTag]})\r\n * &#64;SeInjectable()\r\n * export class ProductCatalogRestService extends AbstractCachedRestService<IBaseCatalogs> {\r\n * \tconstructor(restServiceFactory: IRestServiceFactory) {\r\n * \t\tsuper(restServiceFactory, '/productcatalogs');\r\n * \t}\r\n * }\r\n * </pre>\r\n */\r\nexport declare abstract class AbstractCachedRestService<T> implements IRestService<T> {\r\n    protected innerRestService: IRestService<T>;\r\n    constructor(restServiceFactory: IRestServiceFactory, uri: string, identifier?: string);\r\n    getById<S extends T = T>(identifier: string, options?: IRestOptions): Promise<S | null>;\r\n    get<S extends T = T>(searchParams?: SearchParams, options?: IRestOptions): Promise<S | null>;\r\n    query<S extends T = T>(searchParams: SearchParams, options?: IRestOptions): Promise<S[]>;\r\n    page<S extends Page<T>>(searchParams: Pageable, options?: IRestOptions): Promise<S>;\r\n    update<S extends T = T>(payload: Payload, options?: IRestOptions): Promise<S>;\r\n    patch<S extends T = T>(payload: Payload, options?: IRestOptions): Promise<S>;\r\n    remove<S extends T = T>(payload: Payload, options?: IRestOptions): Promise<void>;\r\n    save<S extends T = T>(payload: Payload, options?: IRestOptions): Promise<S>;\r\n    queryByPost<S extends T = T>(payload: Payload, searchParams?: SearchParams, options?: IRestOptions): Promise<S | null>;\r\n}\r\nexport declare function StripResponseHeaders(target: any, propertyName: string, descriptor: TypedPropertyDescriptor<(...x: any[]) => any>): any;\r\n"}}

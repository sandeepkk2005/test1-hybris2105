{"code":"import { __awaiter, __decorate, __generator, __metadata } from \"tslib\";\r\nimport { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef, ViewEncapsulation } from '@angular/core';\r\nimport { CmsitemsRestService } from 'cmscommons';\r\nimport { NavigationEditorNodeService } from 'cmssmarteditcontainer/components/navigation/navigationEditor/NavigationEditorNodeService';\r\nimport { SeDowngradeComponent } from 'smarteditcommons';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"BreadcrumbComponent\", {\r\n    selector: 'se-breadcrumb',\r\n    template: \"<div class=\\\"se-breadcrumb\\\"><div *ngFor=\\\"let node of breadcrumb; index as idx; last as isLast\\\" class=\\\"se-breadcrumb__node\\\"><div class=\\\"se-breadcrumb__info\\\" [ngClass]=\\\"{'se-breadcrumb__info--last': isLast}\\\"><span class=\\\"se-breadcrumb__info--level\\\">{{ node.formattedLevel | translate: node }}</span> <span class=\\\"se-breadcrumb__info--name\\\">{{ node.name }}</span></div><div class=\\\"se-breadcrumb__divider\\\" *ngIf=\\\"idx < breadcrumb.length - 1\\\"><span class=\\\"sap-icon--navigation-right-arrow\\\"></span></div></div></div>\",\r\n    styles: [\".se-breadcrumb{border-bottom:1px solid #eeeeef;margin-bottom:35px}.se-breadcrumb__divider,.se-breadcrumb__info,.se-breadcrumb__node{display:inline-block}.se-breadcrumb__info--last{border-bottom:3px solid #0a6ed1;padding-top:10px;padding-bottom:10px}.se-breadcrumb__info--level{display:block;text-transform:uppercase;color:#51555a;font-family:\\\"72\\\",web,\\\"Open Sans\\\",sans-serif;font-size:.8571428571rem;line-height:1.3333333333;font-weight:400;font-weight:700}.se-breadcrumb__info--name{display:block;color:#51555a;font-family:\\\"72\\\",web,\\\"Open Sans\\\",sans-serif;font-size:1rem;line-height:1.4285714286;font-weight:400;font-weight:400}.se-breadcrumb__divider{margin-left:15px;margin-right:15px;margin-top:5px;vertical-align:top}.se-breadcrumb__node:last-child .se-breadcrumb__info--level,.se-breadcrumb__node:last-child .se-breadcrumb__info--name{color:#0a6ed1}\"],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None\r\n});\r\nvar /* @ngInject */ BreadcrumbComponent = /** @class */ (function () {\r\n    function /* @ngInject */ BreadcrumbComponent(navigationEditorNodeService, cmsitemsRestService, cdr) {\r\n        this.navigationEditorNodeService = navigationEditorNodeService;\r\n        this.cmsitemsRestService = cmsitemsRestService;\r\n        this.cdr = cdr;\r\n    }\r\n    /* @ngInject */ BreadcrumbComponent.prototype.ngOnInit = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var uid, ancestry;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.nodeUid && !this.nodeUuid) {\r\n                            throw new Error('BreadcrumbComponent requires either nodeUid or nodeUuid');\r\n                        }\r\n                        return [4 /*yield*/, this.getUid()];\r\n                    case 1:\r\n                        uid = _a.sent();\r\n                        return [4 /*yield*/, this.navigationEditorNodeService.getNavigationNodeAncestry(uid, this.uriContext)];\r\n                    case 2:\r\n                        ancestry = _a.sent();\r\n                        this.breadcrumb = ancestry;\r\n                        this.cdr.detectChanges();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ BreadcrumbComponent.prototype.getUid = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var cmsItem;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!!this.nodeUid) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.cmsitemsRestService.getById(this.nodeUuid)];\r\n                    case 1:\r\n                        cmsItem = _a.sent();\r\n                        return [2 /*return*/, cmsItem.uid];\r\n                    case 2: return [2 /*return*/, this.nodeUid];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], /* @ngInject */ BreadcrumbComponent.prototype, \"nodeUid\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], /* @ngInject */ BreadcrumbComponent.prototype, \"nodeUuid\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], /* @ngInject */ BreadcrumbComponent.prototype, \"uriContext\", void 0);\r\n    /* @ngInject */ BreadcrumbComponent = __decorate([\r\n        SeDowngradeComponent(),\r\n        Component({\r\n            selector: 'se-breadcrumb',\r\n            template: \"<div class=\\\"se-breadcrumb\\\"><div *ngFor=\\\"let node of breadcrumb; index as idx; last as isLast\\\" class=\\\"se-breadcrumb__node\\\"><div class=\\\"se-breadcrumb__info\\\" [ngClass]=\\\"{'se-breadcrumb__info--last': isLast}\\\"><span class=\\\"se-breadcrumb__info--level\\\">{{ node.formattedLevel | translate: node }}</span> <span class=\\\"se-breadcrumb__info--name\\\">{{ node.name }}</span></div><div class=\\\"se-breadcrumb__divider\\\" *ngIf=\\\"idx < breadcrumb.length - 1\\\"><span class=\\\"sap-icon--navigation-right-arrow\\\"></span></div></div></div>\",\r\n            styles: [\".se-breadcrumb{border-bottom:1px solid #eeeeef;margin-bottom:35px}.se-breadcrumb__divider,.se-breadcrumb__info,.se-breadcrumb__node{display:inline-block}.se-breadcrumb__info--last{border-bottom:3px solid #0a6ed1;padding-top:10px;padding-bottom:10px}.se-breadcrumb__info--level{display:block;text-transform:uppercase;color:#51555a;font-family:\\\"72\\\",web,\\\"Open Sans\\\",sans-serif;font-size:.8571428571rem;line-height:1.3333333333;font-weight:400;font-weight:700}.se-breadcrumb__info--name{display:block;color:#51555a;font-family:\\\"72\\\",web,\\\"Open Sans\\\",sans-serif;font-size:1rem;line-height:1.4285714286;font-weight:400;font-weight:400}.se-breadcrumb__divider{margin-left:15px;margin-right:15px;margin-top:5px;vertical-align:top}.se-breadcrumb__node:last-child .se-breadcrumb__info--level,.se-breadcrumb__node:last-child .se-breadcrumb__info--name{color:#0a6ed1}\"],\r\n            changeDetection: ChangeDetectionStrategy.OnPush,\r\n            encapsulation: ViewEncapsulation.None\r\n        }),\r\n        __metadata(\"design:paramtypes\", [NavigationEditorNodeService,\r\n            CmsitemsRestService,\r\n            ChangeDetectorRef])\r\n    ], /* @ngInject */ BreadcrumbComponent);\r\n    return /* @ngInject */ BreadcrumbComponent;\r\n}());\r\nexport { /* @ngInject */ BreadcrumbComponent };\r\n//# sourceMappingURL=BreadcrumbComponent.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/navigation/navigationEditor/NavigationEditorNodeService.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"BreadcrumbComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../src/components/legacyGenericEditor/navigationNode/components/breadcrumb/BreadcrumbComponent.ts\"],\"names\":[],\"mappings\":\";AAEA,OAAO,EACH,SAAS,EAET,KAAK,EACL,uBAAuB,EACvB,iBAAiB,EACjB,iBAAiB,EACpB,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,mBAAmB,EAAE,MAAM,YAAY,CAAC;AACjD,OAAO,EAAE,2BAA2B,EAAE,MAAM,0FAA0F,CAAC;AACvI,OAAO,EAAE,oBAAoB,EAAkC,MAAM,kBAAkB,CAAC;6EAG7E;IACP,QAAQ,EAAE,eAAe;IACzB,QAAQ,EAAE,mhBAA+f;IACzgB,MAAM,EAAE,CAAC,+1BAAu1B,CAAC;IACj2B,eAAe,EAAE,uBAAuB,CAAC,MAAM;IAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;CACxC;AAED;IAOI,6CACY,2BAAwD,EACxD,mBAAwC,EACxC,GAAsB;QAFtB,gCAA2B,GAA3B,2BAA2B,CAA6B;QACxD,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,QAAG,GAAH,GAAG,CAAmB;IAC/B,CAAC;IAEE,sDAAQ,GAAd;;;;;;wBACI,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;4BACjC,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAC;yBAC9E;wBAEW,qBAAM,IAAI,CAAC,MAAM,EAAE,EAAA;;wBAAzB,GAAG,GAAG,SAAmB;wBACd,qBAAM,IAAI,CAAC,2BAA2B,CAAC,yBAAyB,CAC7E,GAAG,EACH,IAAI,CAAC,UAAU,CAClB,EAAA;;wBAHK,QAAQ,GAAG,SAGhB;wBAED,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;wBAC3B,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;;;;;KAC5B;IAEa,oDAAM,GAApB;;;;;;6BACQ,CAAC,IAAI,CAAC,OAAO,EAAb,wBAAa;wBACG,qBAAM,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAA;;wBAA/D,OAAO,GAAG,SAAqD;wBAErE,sBAAO,OAAO,CAAC,GAAG,EAAC;4BAGvB,sBAAO,IAAI,CAAC,OAAO,EAAC;;;;KACvB;IAnCQ;QAAR,KAAK,EAAE;;wEAAiB;IAChB;QAAR,KAAK,EAAE;;yEAAkB;IACjB;QAAR,KAAK,EAAE;;2EAAyB;IAHrC;QATC,oBAAoB,EAAE;QACtB,SAAS,CAAC;YACP,QAAQ,EAAE,eAAe;YACzB,QAAQ,EAAE,mhBAA+f;YACzgB,MAAM,EAAE,CAAC,+1BAAu1B,CAAC;YACj2B,eAAe,EAAE,uBAAuB,CAAC,MAAM;YAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;SACxC,CAAC;yCAU2C,2BAA2B;YACnC,mBAAmB;YACnC,iBAAiB;2CA2BrC;IAAD,0CAAC;CAAA,AArCD,IAqCC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/components/legacyGenericEditor/navigationNode/components/breadcrumb/BreadcrumbComponent.d.ts","writeByteOrderMark":false,"text":"import { OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { CmsitemsRestService } from 'cmscommons';\r\nimport { NavigationEditorNodeService } from 'cmssmarteditcontainer/components/navigation/navigationEditor/NavigationEditorNodeService';\r\nimport { IUriContext, TreeNodeWithLevel } from 'smarteditcommons';\r\nexport declare class BreadcrumbComponent implements OnInit {\r\n    private navigationEditorNodeService;\r\n    private cmsitemsRestService;\r\n    private cdr;\r\n    nodeUid: string;\r\n    nodeUuid: string;\r\n    uriContext: IUriContext;\r\n    breadcrumb: TreeNodeWithLevel[];\r\n    constructor(navigationEditorNodeService: NavigationEditorNodeService, cmsitemsRestService: CmsitemsRestService, cdr: ChangeDetectorRef);\r\n    ngOnInit(): Promise<void>;\r\n    private getUid;\r\n}\r\n"}}

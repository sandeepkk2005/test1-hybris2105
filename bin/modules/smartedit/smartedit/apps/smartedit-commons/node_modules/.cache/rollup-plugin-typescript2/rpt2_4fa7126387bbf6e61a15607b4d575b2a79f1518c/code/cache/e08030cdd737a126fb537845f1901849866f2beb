{"code":"import { __decorate, __spreadArrays } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport './rest/resourceLocations';\r\nimport { SeModule } from 'smarteditcommons/di';\r\nimport { ALL_PERSPECTIVE, ELEMENT_UUID_ATTRIBUTE, EVENT_CONTENT_CATALOG_UPDATE, EVENT_SMARTEDIT_COMPONENT_UPDATED, EVENTS, HIDE_TOOLBAR_ITEM_CONTEXT, ID_ATTRIBUTE, NONE_PERSPECTIVE, OPERATION_CONTEXT, PERSPECTIVE_SELECTOR_WIDGET_KEY, REFRESH_CONTEXTUAL_MENU_ITEMS_EVENT, SCROLL_AREA_CLASS, SHOW_TOOLBAR_ITEM_CONTEXT, SMARTEDIT_DRAG_AND_DROP_EVENTS, SMARTEDIT_ELEMENT_HOVERED, SMARTEDIT_IFRAME_DRAG_AREA, SMARTEDIT_IFRAME_WRAPPER_ID, TYPE_ATTRIBUTE, WHO_AM_I_RESOURCE_URI, CTX_MENU_DROPDOWN_IS_OPEN, CLOSE_CTX_MENU } from 'smarteditcommons/utils/smarteditconstants';\r\nimport { moduleUtils, CATALOG_VERSION_UUID_ATTRIBUTE, CONTAINER_TYPE_ATTRIBUTE, CONTENT_SLOT_TYPE, CONTRACT_CHANGE_LISTENER_COMPONENT_PROCESS_STATUS, CONTRACT_CHANGE_LISTENER_PROCESS_EVENTS, DATE_CONSTANTS, EVENT_OUTER_FRAME_CLICKED, EVENT_PERSPECTIVE_ADDED, EVENT_PERSPECTIVE_CHANGED, EVENT_PERSPECTIVE_REFRESHED, EVENT_PERSPECTIVE_UNLOADING, EVENT_PERSPECTIVE_UPDATED, OVERLAY_COMPONENT_CLASS, OVERLAY_ID, OVERLAY_RERENDERED_EVENT, SortDirections, UUID_ATTRIBUTE } from '../utils';\r\n/**\r\n * The seConstantsModule module contains Smartedit's global constants.\r\n */\r\nvar /* @ngInject */ SeConstantsModule = /** @class */ (function () {\r\n    function /* @ngInject */ SeConstantsModule() {\r\n    }\r\n    /* @ngInject */ SeConstantsModule = __decorate([\r\n        SeModule({\r\n            providers: __spreadArrays(moduleUtils.provideValues({\r\n                CTX_MENU_DROPDOWN_IS_OPEN: CTX_MENU_DROPDOWN_IS_OPEN,\r\n                CLOSE_CTX_MENU: CLOSE_CTX_MENU,\r\n                SHOW_SLOT_MENU: '_SHOW_SLOT_MENU',\r\n                HIDE_SLOT_MENU: 'HIDE_SLOT_MENU'\r\n            }), [\r\n                /**\r\n                 * the identifier of the overlay placed in front of the storefront to where all smartEdit component decorated clones are copied.\r\n                 */\r\n                {\r\n                    provide: 'OVERLAY_ID',\r\n                    useValue: OVERLAY_ID\r\n                },\r\n                /**\r\n                 * the css class of the smartEdit components as per contract with the storefront\r\n                 */\r\n                {\r\n                    provide: 'COMPONENT_CLASS',\r\n                    useValue: 'smartEditComponent'\r\n                },\r\n                /**\r\n                 * the css class of the smartEdit component clones copied to the storefront overlay\r\n                 */\r\n                {\r\n                    provide: 'OVERLAY_COMPONENT_CLASS',\r\n                    useValue: OVERLAY_COMPONENT_CLASS\r\n                },\r\n                /**\r\n                 * If the storefront needs to expose more attributes than the minimal contract, these attributes must be prefixed with this constant value\r\n                 */\r\n                {\r\n                    provide: 'SMARTEDIT_ATTRIBUTE_PREFIX',\r\n                    useValue: 'data-smartedit-'\r\n                },\r\n                /**\r\n                 * the id attribute of the smartEdit components as per contract with the storefront\r\n                 */\r\n                {\r\n                    provide: 'ID_ATTRIBUTE',\r\n                    useValue: ID_ATTRIBUTE\r\n                },\r\n                /**\r\n                 * the uuid attribute of the smartEdit components as per contract with the storefront\r\n                 */\r\n                {\r\n                    provide: 'UUID_ATTRIBUTE',\r\n                    useValue: UUID_ATTRIBUTE\r\n                },\r\n                /**\r\n                 * the front-end randomly generated uuid of the smartEdit components and their equivalent in the overlay\r\n                 */\r\n                {\r\n                    provide: 'ELEMENT_UUID_ATTRIBUTE',\r\n                    useValue: ELEMENT_UUID_ATTRIBUTE\r\n                },\r\n                /**\r\n                 * the uuid attribute of the smartEdit components as per contract with the storefront\r\n                 */\r\n                {\r\n                    provide: 'CATALOG_VERSION_UUID_ATTRIBUTE',\r\n                    useValue: CATALOG_VERSION_UUID_ATTRIBUTE\r\n                },\r\n                /**\r\n                 * the type attribute of the smartEdit components as per contract with the storefront\r\n                 */\r\n                {\r\n                    provide: 'TYPE_ATTRIBUTE',\r\n                    useValue: TYPE_ATTRIBUTE\r\n                },\r\n                /**\r\n                 * the id attribute of the smartEdit container, when applicable, as per contract with the storefront\r\n                 */\r\n                {\r\n                    provide: 'CONTAINER_ID_ATTRIBUTE',\r\n                    useValue: 'data-smartedit-container-id'\r\n                },\r\n                /**\r\n                 * the type attribute of the smartEdit container, when applicable, as per contract with the storefront\r\n                 */\r\n                {\r\n                    provide: 'CONTAINER_TYPE_ATTRIBUTE',\r\n                    useValue: CONTAINER_TYPE_ATTRIBUTE\r\n                },\r\n                /**\r\n                 * the type value of the smartEdit slots as per contract with the storefront\r\n                 */\r\n                {\r\n                    provide: 'CONTENT_SLOT_TYPE',\r\n                    useValue: CONTENT_SLOT_TYPE\r\n                },\r\n                {\r\n                    provide: 'SMARTEDIT_IFRAME_WRAPPER_ID',\r\n                    useValue: SMARTEDIT_IFRAME_WRAPPER_ID\r\n                },\r\n                {\r\n                    provide: 'SMARTEDIT_IFRAME_DRAG_AREA',\r\n                    useValue: SMARTEDIT_IFRAME_DRAG_AREA\r\n                },\r\n                {\r\n                    provide: 'EVENT_TOGGLE_SMARTEDIT_IFRAME_DRAG_AREA',\r\n                    useValue: 'EVENT_TOGGLE_SMARTEDIT_IFRAME_DRAG_AREA'\r\n                },\r\n                {\r\n                    provide: 'SCROLL_AREA_CLASS',\r\n                    useValue: SCROLL_AREA_CLASS\r\n                },\r\n                {\r\n                    provide: 'SMARTEDIT_ELEMENT_HOVERED',\r\n                    useValue: SMARTEDIT_ELEMENT_HOVERED\r\n                },\r\n                {\r\n                    provide: 'SMARTEDIT_DRAG_AND_DROP_EVENTS',\r\n                    useValue: SMARTEDIT_DRAG_AND_DROP_EVENTS\r\n                },\r\n                {\r\n                    provide: 'DATE_CONSTANTS',\r\n                    useValue: DATE_CONSTANTS\r\n                },\r\n                /**\r\n                 * The ID of the event that is triggered when the content of a catalog is\r\n                 * updated (by page edit or page deletion).\r\n                 */\r\n                {\r\n                    provide: EVENT_CONTENT_CATALOG_UPDATE,\r\n                    useValue: EVENT_CONTENT_CATALOG_UPDATE\r\n                },\r\n                /**\r\n                 * The ID of the event that is triggered when the perspective (known as mode for users) is changed.\r\n                 */\r\n                {\r\n                    provide: EVENT_PERSPECTIVE_CHANGED,\r\n                    useValue: EVENT_PERSPECTIVE_CHANGED\r\n                },\r\n                /**\r\n                 * The ID of the event that is triggered when a new perspective (known as mode for users) is registered.\r\n                 */\r\n                {\r\n                    provide: EVENT_PERSPECTIVE_ADDED,\r\n                    useValue: EVENT_PERSPECTIVE_ADDED\r\n                },\r\n                /**\r\n                 * The ID of the event that is triggered when a perspective (known as mode for users) is updated.\r\n                 * The perspective is updated when features, permissions or perspectives attributes are changed.\r\n                 */\r\n                {\r\n                    provide: EVENT_PERSPECTIVE_UPDATED,\r\n                    useValue: EVENT_PERSPECTIVE_UPDATED\r\n                },\r\n                /**\r\n                 * The ID of the event that is triggered when a perspective is about to be unloaded.\r\n                 * This event is triggered immediately before the features are disabled.\r\n                 */\r\n                {\r\n                    provide: EVENT_PERSPECTIVE_UNLOADING,\r\n                    useValue: EVENT_PERSPECTIVE_UNLOADING\r\n                },\r\n                /**\r\n                 * The ID of the event that is triggered when the perspective (known as mode for users) is refreshed.\r\n                 */\r\n                {\r\n                    provide: EVENT_PERSPECTIVE_REFRESHED,\r\n                    useValue: EVENT_PERSPECTIVE_REFRESHED\r\n                },\r\n                /**\r\n                 * The key of the default All Perspective.\r\n                 */\r\n                {\r\n                    provide: 'ALL_PERSPECTIVE',\r\n                    useValue: ALL_PERSPECTIVE\r\n                },\r\n                /**\r\n                 * The key of the default None Perspective.\r\n                 */\r\n                {\r\n                    provide: 'NONE_PERSPECTIVE',\r\n                    useValue: NONE_PERSPECTIVE\r\n                },\r\n                {\r\n                    provide: 'PERSPECTIVE_SELECTOR_WIDGET_KEY',\r\n                    useValue: PERSPECTIVE_SELECTOR_WIDGET_KEY\r\n                },\r\n                /**\r\n                 * Validation message types\r\n                 *\r\n                 * **Deprecated since 2105, `import { VALIDATION_MESSAGE_TYPES } from 'smarteditcommons'`.**\r\n                 */\r\n                {\r\n                    provide: 'VALIDATION_MESSAGE_TYPES',\r\n                    useValue: {\r\n                        /**\r\n                         * Validation error type.\r\n                         */\r\n                        VALIDATION_ERROR: 'ValidationError',\r\n                        /**\r\n                         * Validation warning type.\r\n                         */\r\n                        WARNING: 'Warning'\r\n                    }\r\n                },\r\n                {\r\n                    provide: 'CONTRACT_CHANGE_LISTENER_PROCESS_EVENTS',\r\n                    useValue: CONTRACT_CHANGE_LISTENER_PROCESS_EVENTS\r\n                },\r\n                {\r\n                    provide: 'SMARTEDIT_COMPONENT_PROCESS_STATUS',\r\n                    useValue: 'smartEditComponentProcessStatus'\r\n                },\r\n                {\r\n                    provide: 'CONTRACT_CHANGE_LISTENER_COMPONENT_PROCESS_STATUS',\r\n                    useValue: CONTRACT_CHANGE_LISTENER_COMPONENT_PROCESS_STATUS\r\n                },\r\n                /**\r\n                 * Sort directions\r\n                 */\r\n                {\r\n                    provide: 'SORT_DIRECTIONS',\r\n                    useValue: {\r\n                        /**\r\n                         * Sort direction - Ascending\r\n                         */\r\n                        ASC: SortDirections.Ascending,\r\n                        /**\r\n                         * Sort direction - Descending\r\n                         */\r\n                        DESC: SortDirections.Descending\r\n                    }\r\n                },\r\n                /**\r\n                 * The event that triggeres when user clicks on the outer frame.\r\n                 */\r\n                {\r\n                    provide: EVENT_OUTER_FRAME_CLICKED,\r\n                    useValue: EVENT_OUTER_FRAME_CLICKED\r\n                },\r\n                /**\r\n                 * Name of the event triggered whenever SmartEdit decides to update items in contextual menus.\r\n                 */\r\n                {\r\n                    provide: REFRESH_CONTEXTUAL_MENU_ITEMS_EVENT,\r\n                    useValue: REFRESH_CONTEXTUAL_MENU_ITEMS_EVENT\r\n                },\r\n                /**\r\n                 * The event that is used to show the toolbar item context.\r\n                 */\r\n                {\r\n                    provide: 'SHOW_TOOLBAR_ITEM_CONTEXT',\r\n                    useValue: SHOW_TOOLBAR_ITEM_CONTEXT\r\n                },\r\n                /**\r\n                 * The event that is used to hide the toolbar item context.\r\n                 */\r\n                {\r\n                    provide: 'HIDE_TOOLBAR_ITEM_CONTEXT',\r\n                    useValue: HIDE_TOOLBAR_ITEM_CONTEXT\r\n                },\r\n                /**\r\n                 * The ID of the event that is triggered when a notification is pushed or removed.\r\n                 */\r\n                {\r\n                    provide: 'EVENT_NOTIFICATION_CHANGED',\r\n                    useValue: 'EVENT_NOTIFICATION_CHANGED'\r\n                },\r\n                {\r\n                    provide: 'OVERLAY_RERENDERED_EVENT',\r\n                    useValue: OVERLAY_RERENDERED_EVENT\r\n                },\r\n                {\r\n                    provide: 'WHO_AM_I_RESOURCE_URI',\r\n                    useValue: WHO_AM_I_RESOURCE_URI\r\n                },\r\n                /**\r\n                 * **Deprecated since 2005, `import EVENTS from smarteditconstants.ts`.**\r\n                 *\r\n                 * Events that are fired/handled in the SmartEdit application.\r\n                 * @deprecated\r\n                 */\r\n                {\r\n                    provide: 'EVENTS',\r\n                    useValue: EVENTS\r\n                },\r\n                /**\r\n                 * A constant that is used as key to store the selected language in the storageService\r\n                 */\r\n                {\r\n                    provide: 'SELECTED_LANGUAGE',\r\n                    useValue: 'SELECTED_LANGUAGE'\r\n                },\r\n                /**\r\n                 * A constant that is used as key to publish and receive events when a language is changed.\r\n                 */\r\n                {\r\n                    provide: 'SWITCH_LANGUAGE_EVENT',\r\n                    useValue: 'SWITCH_LANGUAGE_EVENT'\r\n                },\r\n                /**\r\n                 * A constant that is used as key to publish and receive events when a component is updated.\r\n                 */\r\n                {\r\n                    provide: 'EVENT_SMARTEDIT_COMPONENT_UPDATED',\r\n                    useValue: EVENT_SMARTEDIT_COMPONENT_UPDATED\r\n                },\r\n                /**\r\n                 * Injectable angular constant<br/>\r\n                 * This object provides an enumeration of operation context for the application.\r\n                 */\r\n                {\r\n                    provide: 'OPERATION_CONTEXT',\r\n                    useValue: OPERATION_CONTEXT\r\n                },\r\n                /**\r\n                 * Array containing files to be loaded in the inner frame before the main smartedit JS file.\r\n                 * Only used for E2E modules, and is ignored in production code\r\n                 */\r\n                {\r\n                    provide: 'SMARTEDIT_INNER_FILES',\r\n                    useValue: 'SMARTEDIT_INNER_FILES'\r\n                },\r\n                /**\r\n                 * Array containing files to be loaded in the inner frame after the main smartedit JS file.\r\n                 * Only used for E2E modules, and is ignored in production code\r\n                 */\r\n                {\r\n                    provide: 'SMARTEDIT_INNER_FILES_POST',\r\n                    useValue: 'SMARTEDIT_INNER_FILES_POST'\r\n                }\r\n            ])\r\n        })\r\n    ], /* @ngInject */ SeConstantsModule);\r\n    return /* @ngInject */ SeConstantsModule;\r\n}());\r\nexport { /* @ngInject */ SeConstantsModule };\r\n//# sourceMappingURL=SeConstantsModule.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/rest/resourceLocations.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/di/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/utils/smarteditconstants.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/utils/index.ts"],"map":"{\"version\":3,\"file\":\"SeConstantsModule.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/services/SeConstantsModule.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/services/SeConstantsModule.d.ts","writeByteOrderMark":false,"text":"import './rest/resourceLocations';\r\n/**\r\n * The seConstantsModule module contains Smartedit's global constants.\r\n */\r\nexport declare class SeConstantsModule {\r\n}\r\n"}}

<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:cng="http://www.hybris.com/cockpitng/spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/util
           http://www.springframework.org/schema/util/spring-util.xsd
           http://www.hybris.com/cockpitng/spring
           http://www.hybris.com/cockpitng/spring/cng-spring.xsd">


    <alias name="defaultEditorAttributesFilteringService" alias="editorAttrFilterService"/>
    <bean id="defaultEditorAttributesFilteringService"
          class="de.hybris.platform.integrationbackoffice.widgets.modeling.utility.DefaultEditorAttributesFilteringService">
        <constructor-arg name="readService" ref="readService"/>
    </bean>

    <alias name="defaultReadService" alias="readService"/>
    <bean id="defaultReadService" class="de.hybris.platform.integrationbackoffice.services.ReadService">
        <property name="flexibleSearchService" ref="flexibleSearchService"/>
        <property name="typeService" ref="typeService"/>
        <property name="ODataDefaultSchemaGenerator" ref="oDataSchemaGenerator"/>
        <property name="readOnlyAttributesConfiguration" ref="defaultIntegrationServicesConfiguration"/>
    </bean>

    <bean id="writeService" class="de.hybris.platform.integrationbackoffice.services.WriteService">
        <property name="readService" ref="readService"/>
        <property name="modelService" ref="modelService"/>
    </bean>

    <alias name="defaultIntegrationObjectImpexGenerator" alias="integrationObjectImpexGenerator"/>
    <bean id="defaultIntegrationObjectImpexGenerator"
          class="de.hybris.platform.integrationbackoffice.widgets.modals.generator.DefaultIntegrationObjectImpexGenerator">
    </bean>

    <alias name="defaultPersistenceIntegrationObjectJsonGenerator" alias="persistenceIntegrationObjectJsonGenerator"/>
    <bean id="defaultPersistenceIntegrationObjectJsonGenerator"
          class="de.hybris.platform.integrationbackoffice.widgets.modals.generator.DefaultPersistenceIntegrationObjectJsonGenerator">
        <constructor-arg name="readService" ref="readService"/>
        <constructor-arg name="configuration" ref="defaultIntegrationServicesConfiguration"/>
    </bean>

    <alias name="defaultOutboundIntegrationObjectJsonGenerator" alias="outboundIntegrationObjectJsonGenerator"/>
    <bean id="defaultOutboundIntegrationObjectJsonGenerator"
          class="de.hybris.platform.integrationbackoffice.widgets.modals.generator.DefaultOutboundIntegrationObjectJsonGenerator"
          parent="persistenceIntegrationObjectJsonGenerator"
    />

    <alias name="defaultAuditReportBuilder" alias="auditReportBuilder"/>
    <bean id="defaultAuditReportBuilder"
          class="de.hybris.platform.integrationbackoffice.widgets.modals.builders.IntegrationObjectAuditReportBuilder">
        <property name="auditViewService" ref="auditViewService"/>
        <property name="rendererService" ref="rendererService"/>
        <property name="commonI18NService" ref="commonI18NService"/>
        <property name="userService" ref="userService"/>
        <property name="reportViewConverterStrategies" ref="reportViewConverterStrategies"/>
        <property name="configName" value="IOReport"/>
        <property name="isDownload" value="false"/>
    </bean>

    <util:list id="adminRolesList" value-type="java.lang.String">
        <value>backofficeadministratorrole</value>
        <value>backofficeintegrationadministratorrole</value>
    </util:list>

    <alias name="defaultEditorAccessRights" alias="editorAccessRights"/>
    <bean id="defaultEditorAccessRights"
          class="de.hybris.platform.integrationbackoffice.widgets.common.utility.EditorAccessRightsImpl">
        <property name="userService" ref="userService"/>
        <property name="adminRoles" ref="adminRolesList"/>
    </bean>

    <alias name="defaultPluralizingEntitySetNameGenerator" alias="pluralizer"/>
    <bean id="defaultPluralizingEntitySetNameGenerator"
          class="de.hybris.platform.odata2services.odata.schema.entity.PluralizingEntitySetNameGenerator"/>

    <bean id="integrationbackofficeLabelLocator" class="com.hybris.cockpitng.util.labels.ResourcesLabelLocator"
          scope="singleton" init-method="init" lazy-init="false">
        <property name="location" value="/integrationbackoffice-backoffice-labels/"/>
        <property name="name" value="labels"/>
    </bean>

    <alias name="defaultClassificationAttributesWithoutLocalizationRenderer"
           alias="classificationAttributesWithoutLocalizationRenderer"/>
    <bean id="defaultClassificationAttributesWithoutLocalizationRenderer"
          class="de.hybris.platform.integrationbackoffice.widgets.modals.utility.ClassificationAttributesWithoutLocalizationRenderer"
          parent="excelClassificationExportRenderer">
        <property name="supportedAttributesPredicate">
            <null/>
        </property>
    </bean>

    <bean id="integrationObjectClassificationClassWizardHandler"
          class="de.hybris.platform.integrationbackoffice.widgets.modeling.handlers.IntegrationObjectClassificationClassWizardHandler">
        <property name="modelService" ref="modelService"/>
    </bean>

    <alias name="defaultClassificationAttributeQualifierProvider" alias="classificationAttributeQualifierProvider"/>
    <bean id="defaultClassificationAttributeQualifierProvider"
          class="de.hybris.platform.integrationbackoffice.widgets.modeling.providers.DefaultClassificationAttributeQualifierProvider"/>

    <alias name="defaultIntegrationServicesConfiguration" alias="itemSearchConfiguration"/>

    <alias name="defaultItemTypeMatchSelector" alias="itemTypeMatchSelector"/>
    <bean id="defaultItemTypeMatchSelector"
          class="de.hybris.platform.integrationbackoffice.utility.DefaultItemTypeMatchSelector">
        <property name="itemSearchConfiguration" ref="itemSearchConfiguration"/>
    </bean>

    <alias name="defaultURLRenderer" alias="URLRenderer"/>
    <bean class="de.hybris.platform.integrationbackoffice.widgets.modeling.utility.DefaultUrlRenderer"
          name="defaultURLRenderer">
    </bean>


    <alias name="defaultDataStructureBuilder" alias="dataStructureBuilder"/>
    <bean id="defaultDataStructureBuilder"
          class="de.hybris.platform.integrationbackoffice.widgets.modeling.builders.DefaultDataStructureBuilder">
        <constructor-arg ref="readService"/>
        <constructor-arg ref="editorAttrFilterService"/>
    </bean>

    <alias name="defaultTreeBuilder" alias="treeBuilder"/>
    <bean id="defaultTreeBuilder"
          class="de.hybris.platform.integrationbackoffice.widgets.modeling.builders.DefaultTreeBuilder"/>

    <alias name="defaultICCCustomDoneHandler" alias="customDoneHandler"/>
    <bean id="defaultICCCustomDoneHandler"
          class="de.hybris.platform.integrationbackoffice.widgets.authentication.handlers.InboundChannelConfigurationWizardHandler">
        <property name="modelService" ref="modelService"/>
        <property name="iccNotificationService" ref="iccNotificationService"/>
        <property name="cockpitEventQueue" ref="cockpitEventQueue"/>
        <property name="registerIntegrationObjectService" ref="registerIntegrationObjectService"/>
     </bean>

    <alias name="iccNotificationService" alias="ICCNotificationService"/>
    <bean id="iccNotificationService"
          class="de.hybris.platform.integrationbackoffice.widgets.authentication.InboundChannelConfigNotificationService">
        <constructor-arg ref="notificationService"/>
    </bean>

    <bean id="integrationBackofficeConfiguration"
          class="de.hybris.platform.integrationbackoffice.config.DefaultIntegrationBackofficeConfiguration">
        <property name="configurationService" ref="configurationService"/>
    </bean>

    <bean id="nameSequenceNumberGenerator" class="de.hybris.platform.integrationbackoffice.widgets.authentication.utility.impl.NameSequenceNumberGenerator">
        <constructor-arg ref="flexibleSearchService"/>
    </bean>

    <alias name="defaultIntegrationEditorPresentation" alias="editorPresentation"/>
    <bean id="defaultIntegrationEditorPresentation"
          class="de.hybris.platform.integrationbackoffice.widgets.modeling.data.IntegrationObjectPresentation"
          scope="session">
        <constructor-arg name="writeService" ref="writeService"/>
        <constructor-arg name="readService" ref="readService"/>
        <constructor-arg name="dataStructureBuilder" ref="dataStructureBuilder"/>
        <constructor-arg name="notificationService" ref="notificationService" />
    </bean>

    <alias name="registerIntegrationObjectDefaultService" alias="registerIntegrationObjectService"/>
    <bean id="registerIntegrationObjectDefaultService"
          class="de.hybris.platform.integrationbackoffice.widgets.authentication.registration.RegisterIntegrationObjectDefaultService">
        <property name="flexibleSearchService" ref="flexibleSearchService"/>
        <property name="nameSequenceNumberGenerator" ref="nameSequenceNumberGenerator"/>
        <property name="modelService" ref="modelService"/>
        <property name="cockpitEventQueue" ref="cockpitEventQueue"/>
        <property name="iccCredentialGenerator" ref="iccCredentialGenerator"/>
    </bean>

    <alias name="defaultIccCredentialGenerator" alias="iccCredentialGenerator"/>
    <bean id="defaultIccCredentialGenerator" class="de.hybris.platform.servicelayer.keygenerator.impl.PersistentKeyGenerator">
        <property name="key" value="${keygen.integrationbackoffice.code.name}"/>
        <property name="digits" value="${keygen.integrationbackoffice.code.digits}"/>
        <property name="start" value="${keygen.integrationbackoffice.code.start}"/>
        <property name="type" value="${keygen.integrationbackoffice.code.type}"/>
        <property name="template" value="${keygen.integrationbackoffice.code.template}"/>
    </bean>

    <alias name="defaultIntegrationObjectExceptionTranslationExtender"
           alias="integrationObjectExceptionTranslationExtender"/>
    <cng:list-extender id="defaultIntegrationObjectExceptionTranslationExtender"
                       property="exceptionHandlers"
                       bean="exceptionTranslationService" sort="true">
        <cng:add value-type="com.hybris.cockpitng.service.ExceptionTranslationHandler">
            <bean class="de.hybris.platform.integrationbackoffice.exceptionhandlers.IntegrationBackofficeExceptionTranslationHandler"/>
            <bean class="de.hybris.platform.integrationbackoffice.exceptionhandlers.InternalExceptionTranslationHandler"/>
        </cng:add>
    </cng:list-extender>

    <!-- Export configuration -->
    <alias name="defaultExportConfigurationEditorPresentation" alias="exportConfigEditorPresentation"/>
    <bean id="defaultExportConfigurationEditorPresentation"
          class="de.hybris.platform.integrationbackoffice.widgets.configuration.data.ExportConfigurationEditorPresentation"
          scope="session">
        <constructor-arg name="notificationService" ref="notificationService"/>
    </bean>

    <alias name="defaultExportConfigurationEditorService" alias="exportConfigEditorService"/>
    <bean id="defaultExportConfigurationEditorService"
          class="de.hybris.platform.integrationbackoffice.services.impl.DefaultExportConfigurationEditorService">
        <constructor-arg name="flexibleSearchService" ref="flexibleSearchService"/>
    </bean>

    <alias name="defaultIntegrationSortingService" alias="integrationSortingService"/>
    <bean id="defaultIntegrationSortingService"
          class="de.hybris.platform.integrationbackoffice.widgets.common.services.impl.DefaultIntegrationSortingService">
    </bean>

    <alias name="defaultIntegrationExportConfigurationGenerator" alias="exportConfigGenerator"/>
    <bean id="defaultIntegrationExportConfigurationGenerator"
          class="de.hybris.platform.integrationbackoffice.widgets.configuration.generators.DefaultExportConfigurationGenerator">
        <constructor-arg name="postmanCollectionGenerator" ref="postmanCollectionGenerator"/>
    </bean>
</beans>

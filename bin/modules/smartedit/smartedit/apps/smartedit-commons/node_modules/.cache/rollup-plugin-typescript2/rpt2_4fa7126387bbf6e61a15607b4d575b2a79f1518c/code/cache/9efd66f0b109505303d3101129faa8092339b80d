{"code":"import { __decorate, __extends, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport './modal.scss';\r\nimport { Injectable } from '@angular/core';\r\nimport { UpgradeModule } from '@angular/upgrade/static';\r\nimport { ModalService as FundamentalModalService } from '@fundamental-ngx/core';\r\nimport { ModalService as BaseModalService } from '@smart/utils';\r\nimport { SeDowngradeService } from '../../di';\r\nimport { modalControllerClassFactory } from './modalControllerClassFactory';\r\nwindow.__smartedit__.addDecoratorPayload(\"Injectable\", \"ModalService\", { providedIn: 'root' });\r\n/**\r\n * Service responsible for opening the modals after providing configuration\r\n */\r\nvar /* @ngInject */ ModalService = /** @class */ (function (_super) {\r\n    __extends(/* @ngInject */ ModalService, _super);\r\n    function /* @ngInject */ ModalService(fundamentalModalService, upgrade) {\r\n        var _this = _super.call(this, fundamentalModalService) || this;\r\n        _this.fundamentalModalService = fundamentalModalService;\r\n        _this.upgrade = upgrade;\r\n        return _this;\r\n    }\r\n    /* @ngInject */ ModalService.prototype.hasOpenModals = function () {\r\n        return !!this.$uibModalStack.getTop() || this.fundamentalModalService.hasOpenModals();\r\n    };\r\n    /**\r\n     * Dismisses all instances of modals both produced by angular bootstrap ui and Fundamental\r\n     */\r\n    /* @ngInject */ ModalService.prototype.dismissAll = function () {\r\n        if (this.$uibModalStack.getTop()) {\r\n            this.$uibModalStack.dismissAll();\r\n        }\r\n        if (this.fundamentalModalService.hasOpenModals()) {\r\n            this.fundamentalModalService.dismissAll();\r\n        }\r\n    };\r\n    /* @ngInject */ ModalService.prototype.open = function (conf) {\r\n        return conf.component\r\n            ? _super.prototype.open.call(this, conf)\r\n            : this.angularJSOpen(conf);\r\n    };\r\n    /* @ngInject */ ModalService.prototype.angularJSOpen = function (conf) {\r\n        var configuration = conf || {};\r\n        if (configuration.templateUrl && configuration.templateInline) {\r\n            throw new Error('modalService.configuration.errors.2.templates.provided');\r\n        }\r\n        return this.$uibModal.open({\r\n            templateUrl: 'modalTemplate.html',\r\n            size: configuration.size || 'lg',\r\n            backdrop: 'static',\r\n            keyboard: false,\r\n            controller: modalControllerClassFactory(configuration),\r\n            controllerAs: 'modalController',\r\n            windowClass: configuration.cssClasses || null,\r\n            animation: !conf.animation && this.$animate.enabled()\r\n        }).result;\r\n    };\r\n    Object.defineProperty(/* @ngInject */ ModalService.prototype, \"$uibModalStack\", {\r\n        get: function () {\r\n            return this.upgrade.$injector.get('$uibModalStack');\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(/* @ngInject */ ModalService.prototype, \"$uibModal\", {\r\n        get: function () {\r\n            return this.upgrade.$injector.get('$uibModal');\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(/* @ngInject */ ModalService.prototype, \"$animate\", {\r\n        get: function () {\r\n            return this.upgrade.$injector.get('$animate');\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /* @ngInject */ ModalService = __decorate([\r\n        SeDowngradeService(),\r\n        Injectable({ providedIn: 'root' }),\r\n        __metadata(\"design:paramtypes\", [FundamentalModalService,\r\n            UpgradeModule])\r\n    ], /* @ngInject */ ModalService);\r\n    return /* @ngInject */ ModalService;\r\n}(BaseModalService));\r\nexport { /* @ngInject */ ModalService };\r\n//# sourceMappingURL=ModalService.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/upgrade@8.2.14_d2ff5303d1bb22207cb4aaa9bb380a83/node_modules/@angular/upgrade/static.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@fundamental-ngx/core@0.13.2_9a9a80bb6ff375d99f90188f858ebbd5/node_modules/@fundamental-ngx/core/fundamental-ngx-core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types/angular@1.7.3/node_modules/@types/angular/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/di/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/interfaces/IAnimateService.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/modal/IModalConfig.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/modal/IUIBootstrapModalService.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/modal/IUIBootstrapModalStackService.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/modal/modalControllerClassFactory.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/modal/index.ts"],"map":"{\"version\":3,\"file\":\"ModalService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/modal/ModalService.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,cAAc,CAAC;AACtB,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,aAAa,EAAE,MAAM,yBAAyB,CAAC;AACxD,OAAO,EAEH,YAAY,IAAI,uBAAuB,EAC1C,MAAM,uBAAuB,CAAC;AAC/B,OAAO,EAAE,YAAY,IAAI,gBAAgB,EAAE,MAAM,cAAc,CAAC;AAEhE,OAAO,EAAE,kBAAkB,EAAE,MAAM,UAAU,CAAC;AAK9C,OAAO,EAAE,2BAA2B,EAAE,MAAM,+BAA+B,CAAC;uEAOhE,EAAE,UAAU,EAAE,MAAM,EAAE;AAJlC;;GAEG;AAGH;IAAkC,gDAAgB;IAC9C,sCACW,uBAAgD,EAC/C,OAAsB;QAFlC,YAII,kBAAM,uBAAuB,CAAC,SACjC;QAJU,6BAAuB,GAAvB,uBAAuB,CAAyB;QAC/C,aAAO,GAAP,OAAO,CAAe;;IAGlC,CAAC;IAEM,oDAAa,GAApB;QACI,OAAO,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,IAAI,CAAC,uBAAuB,CAAC,aAAa,EAAE,CAAC;IAC1F,CAAC;IACD;;OAEG;IACI,iDAAU,GAAjB;QACI,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,EAAE;YAC9B,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC;SACpC;QAED,IAAI,IAAI,CAAC,uBAAuB,CAAC,aAAa,EAAE,EAAE;YAC9C,IAAI,CAAC,uBAAuB,CAAC,UAAU,EAAE,CAAC;SAC7C;IACL,CAAC;IAmBM,2CAAI,GAAX,UACI,IAA+C;QAE/C,OAAQ,IAAmC,CAAC,SAAS;YACjD,CAAC,CAAC,iBAAM,IAAI,YAAC,IAAkC,CAAC;YAChD,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,IAAoB,CAAC,CAAC;IACnD,CAAC;IAEO,oDAAa,GAArB,UAAsB,IAAkB;QACpC,IAAM,aAAa,GAAG,IAAI,IAAK,EAAmB,CAAC;QAEnD,IAAI,aAAa,CAAC,WAAW,IAAI,aAAa,CAAC,cAAc,EAAE;YAC3D,MAAM,IAAI,KAAK,CAAC,wDAAwD,CAAC,CAAC;SAC7E;QAED,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;YACvB,WAAW,EAAE,oBAAoB;YACjC,IAAI,EAAE,aAAa,CAAC,IAAI,IAAI,IAAI;YAChC,QAAQ,EAAE,QAAQ;YAClB,QAAQ,EAAE,KAAK;YACf,UAAU,EAAE,2BAA2B,CAAC,aAAa,CAAC;YACtD,YAAY,EAAE,iBAAiB;YAC/B,WAAW,EAAE,aAAa,CAAC,UAAU,IAAI,IAAI;YAC7C,SAAS,EAAE,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;SACxD,CAAC,CAAC,MAAM,CAAC;IACd,CAAC;IAED,sBAAY,wDAAc;aAA1B;YACI,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QACxD,CAAC;;;OAAA;IAED,sBAAY,mDAAS;aAArB;YACI,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACnD,CAAC;;;OAAA;IAED,sBAAY,kDAAQ;aAApB;YACI,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAClD,CAAC;;;OAAA;IA9EL;QAFC,kBAAkB,EAAE;QACpB,UAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;yCAGK,uBAAuB;YACtC,aAAa;oCA4ErC;IAAD,mCAAC;CAAA,AA/ED,CAAkC,gBAAgB,GA+EjD\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/services/modal/ModalService.d.ts","writeByteOrderMark":false,"text":"import './modal.scss';\r\nimport { UpgradeModule } from '@angular/upgrade/static';\r\nimport { ModalRef as FundamentalModalRef, ModalService as FundamentalModalService } from '@fundamental-ngx/core';\r\nimport { ModalService as BaseModalService } from '@smart/utils';\r\nimport * as angular from 'angular';\r\nimport { IModalConfig } from './IModalConfig';\r\nimport { IFundamentalModalConfig } from './';\r\n/**\r\n * Service responsible for opening the modals after providing configuration\r\n */\r\nexport declare class ModalService extends BaseModalService {\r\n    fundamentalModalService: FundamentalModalService;\r\n    private upgrade;\r\n    constructor(fundamentalModalService: FundamentalModalService, upgrade: UpgradeModule);\r\n    hasOpenModals(): boolean;\r\n    /**\r\n     * Dismisses all instances of modals both produced by angular bootstrap ui and Fundamental\r\n     */\r\n    dismissAll(): void;\r\n    /**\r\n     * Opens a @fundamental-ngx modal.\r\n     */\r\n    open<T>(conf: IFundamentalModalConfig<T>): FundamentalModalRef;\r\n    /**\r\n     * Provides a simple way to open modal windows with custom content, that share a common look and feel.\r\n     *\r\n     * The modal window can be closed multiple ways, through Button Actions,\r\n     * by explicitly calling the [close]{@link ModalManager#close} or [dismiss]{@link ModalManager#dismiss} functions, etc...\r\n     *\r\n     * Depending on how you choose to close a modal, either the modal promise's will be resolved or rejected.\r\n     * You can use the callbacks to return data from the modal content to the caller of this function.\r\n     *\r\n     * @returns Promise that will be either resolved or rejected when the modal window is closed.\r\n     */\r\n    open(conf: IModalConfig): angular.IPromise<any>;\r\n    private angularJSOpen;\r\n    private get $uibModalStack();\r\n    private get $uibModal();\r\n    private get $animate();\r\n}\r\n"}}

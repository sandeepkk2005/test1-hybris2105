{"code":"import { __awaiter, __decorate, __generator, __metadata } from \"tslib\";\r\nimport { Component, EventEmitter, Input, Output, Type } from '@angular/core';\r\nimport { SeDowngradeComponent } from '../../di';\r\nimport { TreeDragAndDropService } from './TreeDragAndDropService';\r\nimport { TreeNodeItemFactory } from './TreeNodeItemFactory';\r\nimport { TreeService } from './TreeService';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"TreeComponent\", {\r\n    selector: 'se-tree',\r\n    providers: [TreeService, TreeDragAndDropService, TreeNodeItemFactory],\r\n    host: {\r\n        class: 'se-tree'\r\n    },\r\n    template: \"<div class=\\\"categoryTable se-tree\\\"><div class=\\\"se-tree__body\\\"><div class=\\\"desktopLayout\\\"><ol class=\\\"se-tree__nodes\\\"><li *ngIf=\\\"(this.treeService.dataSource.get() | async).length === 0\\\" class=\\\"se-tree__nodes--nodata\\\">{{ 'se.ytree.no.nodes.to.display' | translate }}</li><li class=\\\"se-tree__nodes--item\\\"><se-tree-node [source]=\\\"this.treeService.dataSource.get() | async\\\"></se-tree-node></li></ol></div></div></div>\"\r\n});\r\nvar /* @ngInject */ TreeComponent = /** @class */ (function () {\r\n    function /* @ngInject */ TreeComponent(treeService, treeDragAndDropService) {\r\n        this.treeService = treeService;\r\n        this.treeDragAndDropService = treeDragAndDropService;\r\n        this.onTreeUpdated = new EventEmitter();\r\n    }\r\n    /* @ngInject */ TreeComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.setNodeActions();\r\n        this.treeService.init(this.nodeUri, this.rootNodeUid);\r\n        this.treeDragAndDropService.init(this.dragOptions);\r\n        this.fetchData(this.treeService.root);\r\n        this.treeService\r\n            .onTreeUpdated()\r\n            .subscribe(function () { return _this.onTreeUpdated.emit(_this.treeService.root.nodes); });\r\n    };\r\n    /* @ngInject */ TreeComponent.prototype.fetchData = function (nodeData) {\r\n        return this.treeService.fetchChildren(nodeData);\r\n    };\r\n    /* @ngInject */ TreeComponent.prototype.hasChildren = function (node) {\r\n        return node.hasChildren;\r\n    };\r\n    /* @ngInject */ TreeComponent.prototype.collapseAll = function () {\r\n        this.treeService.collapseAll();\r\n    };\r\n    /* @ngInject */ TreeComponent.prototype.expandAll = function () {\r\n        this.treeService.expandAll();\r\n    };\r\n    /* @ngInject */ TreeComponent.prototype.remove = function (node) {\r\n        this.treeService.removeNode(node);\r\n    };\r\n    /* @ngInject */ TreeComponent.prototype.newSibling = function (node) {\r\n        this.treeService.newSibling(node);\r\n    };\r\n    /* @ngInject */ TreeComponent.prototype.refresh = function (node) {\r\n        node.setInitiated(false);\r\n        return this.treeService.fetchChildren(node);\r\n    };\r\n    /* @ngInject */ TreeComponent.prototype.refreshParent = function (node) {\r\n        this.refresh(node.parent);\r\n    };\r\n    /* @ngInject */ TreeComponent.prototype.newChild = function (node) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                this.treeService.newChild(node);\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ TreeComponent.prototype.getNodeById = function (nodeUid, nodeArray) {\r\n        return this.treeService.getNodeById(nodeUid, nodeArray);\r\n    };\r\n    Object.defineProperty(/* @ngInject */ TreeComponent.prototype, \"dragEnabled\", {\r\n        get: function () {\r\n            return this.treeDragAndDropService.isDragEnabled;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /* @ngInject */ TreeComponent.prototype.setNodeActions = function () {\r\n        var _this = this;\r\n        Object.keys(this.nodeActions).forEach(function (functionName) {\r\n            _this[functionName] = _this.nodeActions[functionName].bind(_this, _this.treeService);\r\n            _this.nodeActions[functionName] = _this.nodeActions[functionName].bind(_this, _this.treeService);\r\n        });\r\n    };\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], /* @ngInject */ TreeComponent.prototype, \"nodeTemplateUrl\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Type)\r\n    ], /* @ngInject */ TreeComponent.prototype, \"nodeComponent\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], /* @ngInject */ TreeComponent.prototype, \"nodeUri\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], /* @ngInject */ TreeComponent.prototype, \"nodeActions\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], /* @ngInject */ TreeComponent.prototype, \"rootNodeUid\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], /* @ngInject */ TreeComponent.prototype, \"dragOptions\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], /* @ngInject */ TreeComponent.prototype, \"removeDefaultTemplate\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], /* @ngInject */ TreeComponent.prototype, \"showAsList\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], /* @ngInject */ TreeComponent.prototype, \"onTreeUpdated\", void 0);\r\n    /* @ngInject */ TreeComponent = __decorate([\r\n        SeDowngradeComponent(),\r\n        Component({\r\n            selector: 'se-tree',\r\n            providers: [TreeService, TreeDragAndDropService, TreeNodeItemFactory],\r\n            host: {\r\n                class: 'se-tree'\r\n            },\r\n            template: \"<div class=\\\"categoryTable se-tree\\\"><div class=\\\"se-tree__body\\\"><div class=\\\"desktopLayout\\\"><ol class=\\\"se-tree__nodes\\\"><li *ngIf=\\\"(this.treeService.dataSource.get() | async).length === 0\\\" class=\\\"se-tree__nodes--nodata\\\">{{ 'se.ytree.no.nodes.to.display' | translate }}</li><li class=\\\"se-tree__nodes--item\\\"><se-tree-node [source]=\\\"this.treeService.dataSource.get() | async\\\"></se-tree-node></li></ol></div></div></div>\"\r\n        }),\r\n        __metadata(\"design:paramtypes\", [TreeService,\r\n            TreeDragAndDropService])\r\n    ], /* @ngInject */ TreeComponent);\r\n    return /* @ngInject */ TreeComponent;\r\n}());\r\nexport { /* @ngInject */ TreeComponent };\r\n//# sourceMappingURL=TreeComponent.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/di/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/treeModule/TreeDragAndDropService.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/treeModule/TreeNodeItemFactory.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/treeModule/TreeService.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/treeModule/types.ts"],"map":"{\"version\":3,\"file\":\"TreeComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/treeModule/TreeComponent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/components/treeModule/TreeComponent.d.ts","writeByteOrderMark":false,"text":"import { EventEmitter, Type } from '@angular/core';\r\nimport { TypedMap } from '@smart/utils';\r\nimport { TreeDragAndDropService } from './TreeDragAndDropService';\r\nimport { TreeService } from './TreeService';\r\nimport { ITreeNodeItem, TreeDragAndDropOptions } from './types';\r\nexport declare class TreeComponent<T, D> {\r\n    private treeService;\r\n    private treeDragAndDropService;\r\n    nodeTemplateUrl: string;\r\n    nodeComponent: Type<any>;\r\n    nodeUri: string;\r\n    nodeActions: TypedMap<(...args: any[]) => void>;\r\n    rootNodeUid: string;\r\n    dragOptions: TreeDragAndDropOptions<T>;\r\n    removeDefaultTemplate: string;\r\n    showAsList: boolean;\r\n    onTreeUpdated: EventEmitter<ITreeNodeItem<T>[]>;\r\n    isDropDisabled: boolean;\r\n    constructor(treeService: TreeService<T, D>, treeDragAndDropService: TreeDragAndDropService<T, D>);\r\n    ngOnInit(): void;\r\n    fetchData(nodeData: ITreeNodeItem<T>): Promise<ITreeNodeItem<T>[]>;\r\n    hasChildren(node: ITreeNodeItem<T>): boolean;\r\n    collapseAll(): void;\r\n    expandAll(): void;\r\n    remove(node: ITreeNodeItem<T>): void;\r\n    newSibling(node: ITreeNodeItem<T>): void;\r\n    refresh(node: ITreeNodeItem<T>): Promise<ITreeNodeItem<T>[]>;\r\n    refreshParent(node: ITreeNodeItem<T>): void;\r\n    newChild(node?: ITreeNodeItem<T>): Promise<void>;\r\n    getNodeById(nodeUid: string, nodeArray?: ITreeNodeItem<T>[]): ITreeNodeItem<T>;\r\n    get dragEnabled(): boolean;\r\n    private setNodeActions;\r\n}\r\n"}}

{"code":"import { __awaiter, __decorate, __generator, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { CONTEXT_CATALOG, CONTEXT_CATALOG_VERSION, RestServiceFactory, SeDowngradeService, stringUtils, MEDIA_PATH } from 'smarteditcommons';\r\n/** Service to deal with media related CRUD operations. */\r\nvar /* @ngInject */ MediaService = /** @class */ (function () {\r\n    function /* @ngInject */ MediaService(restServiceFactory) {\r\n        this.restServiceFactory = restServiceFactory;\r\n    }\r\n    /**\r\n     * Fetches paged search results by making a REST call to the appropriate item endpoint.\r\n     *\r\n     * @param mask for filtering the search.\r\n     * @param pageSize number of items in the page.\r\n     * @param currentPage current page number.\r\n     */\r\n    /* @ngInject */ MediaService.prototype.getPage = function (mask, pageSize, currentPage) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var contextParams, subParams, payload, response, page;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        contextParams = {\r\n                            catalogId: CONTEXT_CATALOG,\r\n                            catalogVersion: CONTEXT_CATALOG_VERSION\r\n                        };\r\n                        if (!stringUtils.isBlank(mask)) {\r\n                            contextParams.code = mask;\r\n                        }\r\n                        subParams = this.contextParamsToCommaSeparated(contextParams);\r\n                        payload = {\r\n                            namedQuery: 'namedQueryMediaSearchByCodeCatalogVersion',\r\n                            params: subParams,\r\n                            pageSize: pageSize,\r\n                            currentPage: currentPage\r\n                        };\r\n                        return [4 /*yield*/, this.restServiceFactory\r\n                                .get(MEDIA_PATH)\r\n                                .get(payload)];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        page = {\r\n                            results: [],\r\n                            pagination: undefined\r\n                        };\r\n                        page.results = response.media.map(function (media) { return _this.mediaDTOtoMedia(media); });\r\n                        return [2 /*return*/, page];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method fetches a Media by its UUID.\r\n     * @param uuid uuid of a media (contains catalog information).\r\n     */\r\n    /* @ngInject */ MediaService.prototype.getMedia = function (uuid) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var url, media;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        url = MEDIA_PATH + \"/\" + uuid;\r\n                        return [4 /*yield*/, this.restServiceFactory.get(url).get()];\r\n                    case 1:\r\n                        media = _a.sent();\r\n                        return [2 /*return*/, this.mediaDTOtoMedia(media)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns comma separated params that will be attached to payload.\r\n     *\r\n     * E.g. \"catalogId:CURRENT_CONTEXT_CATALOG,catalogVersion:CURRENT_CONTEXT_CATALOG_VERSION\"\r\n     */\r\n    /* @ngInject */ MediaService.prototype.contextParamsToCommaSeparated = function (params) {\r\n        return Object.keys(params)\r\n            .reduce(function (accumulator, next) {\r\n            accumulator += \",\" + next + \":\" + params[next];\r\n            return accumulator;\r\n        }, '')\r\n            .substring(1);\r\n    };\r\n    /* @ngInject */ MediaService.prototype.mediaDTOtoMedia = function (_a) {\r\n        var uuid = _a.uuid, code = _a.code, description = _a.description, altText = _a.altText, url = _a.url, downloadUrl = _a.downloadUrl;\r\n        return {\r\n            id: uuid,\r\n            code: code,\r\n            description: description,\r\n            altText: altText,\r\n            url: url,\r\n            downloadUrl: downloadUrl\r\n        };\r\n    };\r\n    /* @ngInject */ MediaService = __decorate([\r\n        SeDowngradeService(),\r\n        __metadata(\"design:paramtypes\", [RestServiceFactory])\r\n    ], /* @ngInject */ MediaService);\r\n    return /* @ngInject */ MediaService;\r\n}());\r\nexport { /* @ngInject */ MediaService };\r\n//# sourceMappingURL=MediaService.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"MediaService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/components/genericEditor/media/services/MediaService.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,OAAO,EACH,eAAe,EACf,uBAAuB,EACvB,kBAAkB,EAClB,kBAAkB,EAClB,WAAW,EACX,UAAU,EAEb,MAAM,kBAAkB,CAAC;AA6B1B,0DAA0D;AAE1D;IACI,sCAAoB,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;IAAG,CAAC;IAE9D;;;;;;OAMG;IACU,8CAAO,GAApB,UACI,IAAY,EACZ,QAAgB,EAChB,WAAmB;;;;;;;wBAEb,aAAa,GAAkB;4BACjC,SAAS,EAAE,eAAe;4BAC1B,cAAc,EAAE,uBAAuB;yBAC1C,CAAC;wBACF,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;4BAC5B,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC;yBAC7B;wBAEK,SAAS,GAAG,IAAI,CAAC,6BAA6B,CAAC,aAAa,CAAC,CAAC;wBAE9D,OAAO,GAAG;4BACZ,UAAU,EAAE,2CAA2C;4BACvD,MAAM,EAAE,SAAS;4BACjB,QAAQ,UAAA;4BACR,WAAW,aAAA;yBACd,CAAC;wBACe,qBAAM,IAAI,CAAC,kBAAkB;iCACzC,GAAG,CAAwB,UAAU,CAAC;iCACtC,GAAG,CAAC,OAAO,CAAC,EAAA;;wBAFX,QAAQ,GAAG,SAEA;wBAEX,IAAI,GAAgB;4BACtB,OAAO,EAAE,EAAE;4BACX,UAAU,EAAE,SAAS;yBACxB,CAAC;wBACF,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,UAAC,KAAK,IAAK,OAAA,KAAI,CAAC,eAAe,CAAC,KAAK,CAAC,EAA3B,CAA2B,CAAC,CAAC;wBAE1E,sBAAO,IAAI,EAAC;;;;KACf;IAED;;;OAGG;IACU,+CAAQ,GAArB,UAAsB,IAAY;;;;;;wBAExB,GAAG,GAAM,UAAU,SAAI,IAAM,CAAC;wBACtB,qBAAM,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAW,GAAG,CAAC,CAAC,GAAG,EAAE,EAAA;;wBAA9D,KAAK,GAAG,SAAsD;wBAEpE,sBAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,EAAC;;;;KACtC;IAED;;;;OAIG;IACK,oEAA6B,GAArC,UAAsC,MAAqB;QACvD,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;aACrB,MAAM,CAAC,UAAC,WAAW,EAAE,IAAI;YACtB,WAAW,IAAI,MAAI,IAAI,SAAI,MAAM,CAAC,IAAI,CAAG,CAAC;YAC1C,OAAO,WAAW,CAAC;QACvB,CAAC,EAAE,EAAE,CAAC;aACL,SAAS,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;IAEO,sDAAe,GAAvB,UAAwB,EAOb;YANP,IAAI,UAAA,EACJ,IAAI,UAAA,EACJ,WAAW,iBAAA,EACX,OAAO,aAAA,EACP,GAAG,SAAA,EACH,WAAW,iBAAA;QAEX,OAAO;YACH,EAAE,EAAE,IAAI;YACR,IAAI,MAAA;YACJ,WAAW,aAAA;YACX,OAAO,SAAA;YACP,GAAG,KAAA;YACH,WAAW,aAAA;SACd,CAAC;IACN,CAAC;IAtFL;QADC,kBAAkB,EAAE;yCAEuB,kBAAkB;oCAsF7D;IAAD,mCAAC;CAAA,AAvFD,IAuFC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/components/genericEditor/media/services/MediaService.d.ts","writeByteOrderMark":false,"text":"import { RestServiceFactory, Page } from 'smarteditcommons';\r\nexport interface Media {\r\n    id: string;\r\n    code: string;\r\n    description: string;\r\n    altText: string;\r\n    url: string;\r\n    downloadUrl: string;\r\n}\r\nexport interface MediaDTO {\r\n    altText: string;\r\n    catalogId: string;\r\n    catalogVersion: string;\r\n    code: string;\r\n    description: string;\r\n    downloadUrl: string;\r\n    mime: string;\r\n    url: string;\r\n    uuid: string;\r\n}\r\n/** Service to deal with media related CRUD operations. */\r\nexport declare class MediaService {\r\n    private restServiceFactory;\r\n    constructor(restServiceFactory: RestServiceFactory);\r\n    /**\r\n     * Fetches paged search results by making a REST call to the appropriate item endpoint.\r\n     *\r\n     * @param mask for filtering the search.\r\n     * @param pageSize number of items in the page.\r\n     * @param currentPage current page number.\r\n     */\r\n    getPage(mask: string, pageSize: number, currentPage: number): Promise<Page<Media>>;\r\n    /**\r\n     * This method fetches a Media by its UUID.\r\n     * @param uuid uuid of a media (contains catalog information).\r\n     */\r\n    getMedia(uuid: string): Promise<Media>;\r\n    /**\r\n     * Returns comma separated params that will be attached to payload.\r\n     *\r\n     * E.g. \"catalogId:CURRENT_CONTEXT_CATALOG,catalogVersion:CURRENT_CONTEXT_CATALOG_VERSION\"\r\n     */\r\n    private contextParamsToCommaSeparated;\r\n    private mediaDTOtoMedia;\r\n}\r\n"}}

{"code":"import * as lodash from 'lodash';\r\nexport var HTTP_METHODS_UPDATE = ['PUT', 'POST', 'DELETE', 'PATCH'];\r\nexport var HTTP_METHODS_READ = ['GET', 'OPTIONS', 'HEAD'];\r\nexport function updatePredicate(request, response) {\r\n    return lodash.includes(HTTP_METHODS_UPDATE, request.method);\r\n}\r\nexport function readPredicate(request, response) {\r\n    return lodash.includes(HTTP_METHODS_READ, request.method);\r\n}\r\n//# sourceMappingURL=http-method.predicates.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/common@8.2.14_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@angular/common/http.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types/lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts"],"map":"{\"version\":3,\"file\":\"http-method.predicates.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../src/services/interceptors/errors/retries/predicates/http-method.predicates.ts\"],\"names\":[],\"mappings\":\"AAQA,OAAO,KAAK,MAAM,MAAM,QAAQ,CAAC;AACjC,MAAM,CAAC,IAAM,mBAAmB,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;AACtE,MAAM,CAAC,IAAM,iBAAiB,GAAG,CAAC,KAAK,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;AAE5D,MAAM,UAAU,eAAe,CAAC,OAAyB,EAAE,QAA2B;IAClF,OAAO,MAAM,CAAC,QAAQ,CAAC,mBAAmB,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;AAChE,CAAC;AACD,MAAM,UAAU,aAAa,CAAC,OAAyB,EAAE,QAA2B;IAChF,OAAO,MAAM,CAAC,QAAQ,CAAC,iBAAiB,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;AAC9D,CAAC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/services/interceptors/errors/retries/predicates/http-method.predicates.d.ts","writeByteOrderMark":false,"text":"/**\r\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\r\n * @module smartutils\r\n */\r\nimport { HttpErrorResponse, HttpRequest } from '@angular/common/http';\r\nexport declare const HTTP_METHODS_UPDATE: string[];\r\nexport declare const HTTP_METHODS_READ: string[];\r\nexport declare function updatePredicate(request: HttpRequest<any>, response: HttpErrorResponse): boolean;\r\nexport declare function readPredicate(request: HttpRequest<any>, response: HttpErrorResponse): boolean;\r\n"}}

{"code":"import { __assign, __awaiter, __decorate, __generator, __metadata } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { IPageService } from 'cmscommons';\r\nimport { isNil, cloneDeep, remove, concat } from 'lodash';\r\nimport { LogService, SeDowngradeService } from 'smarteditcommons';\r\nimport { TypeStructureRestService } from '../../../dao/TypeStructureRestService';\r\nimport { DisplayConditionsFacade } from '../../../facades';\r\nimport { PageVersionSelectionService } from '../../versioning';\r\nimport { PageEditorModalService } from './PageEditorModalService';\r\n/**\r\n * This service is used to provide all the information necessary to properly display the Page Info Menu.\r\n */\r\nvar /* @ngInject */ PageInfoMenuService = /** @class */ (function () {\r\n    function /* @ngInject */ PageInfoMenuService(displayConditionsFacade, logService, pageEditorModalService, pageService, pageVersionSelectionService, translateService, typeStructureRestService) {\r\n        this.displayConditionsFacade = displayConditionsFacade;\r\n        this.logService = logService;\r\n        this.pageEditorModalService = pageEditorModalService;\r\n        this.pageService = pageService;\r\n        this.pageVersionSelectionService = pageVersionSelectionService;\r\n        this.translateService = translateService;\r\n        this.typeStructureRestService = typeStructureRestService;\r\n        this.ALL_RESTRICTIONS_CRITERIA_LABEL = 'se.cms.restrictions.criteria.all';\r\n        this.ANY_RESTRICTIONS_CRITERIA_LABEL = 'se.cms.restrictions.criteria.any';\r\n        this.isPageEditorOpened = false;\r\n    }\r\n    /* @ngInject */ PageInfoMenuService.prototype.openPageEditor = function (pageInfo) {\r\n        var _this = this;\r\n        if (isNil(pageInfo)) {\r\n            this.logService.warn(\"[\" + this.constructor.name + \"] - Cannot open page editor. Provided page is empty.\");\r\n            return;\r\n        }\r\n        if (!this.isPageEditorOpened) {\r\n            this.isPageEditorOpened = true;\r\n            this.pageEditorModalService.open(pageInfo).finally(function () {\r\n                _this.isPageEditorOpened = false;\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Retrieves the information for the current page and prepares it to be displayed in the Page Info Menu.\r\n     */\r\n    /* @ngInject */ PageInfoMenuService.prototype.getCurrentPageInfo = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var pageInfo, primaryPageName, pageInfoForViewing, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _b.trys.push([0, 3, , 4]);\r\n                        return [4 /*yield*/, this.pageService.getCurrentPageInfoByVersion(this.getCurrentPageVersionId())];\r\n                    case 1:\r\n                        pageInfo = _b.sent();\r\n                        return [4 /*yield*/, this.getPrimaryPageName(pageInfo)];\r\n                    case 2:\r\n                        primaryPageName = _b.sent();\r\n                        pageInfo.template = pageInfo.masterTemplateId;\r\n                        pageInfoForViewing = cloneDeep(pageInfo);\r\n                        pageInfoForViewing.content = pageInfo;\r\n                        pageInfoForViewing.primaryPage = primaryPageName;\r\n                        pageInfoForViewing.localizedType = pageInfo.typeCode;\r\n                        pageInfoForViewing.displayCondition = this.getPageDisplayCondition(pageInfo);\r\n                        pageInfoForViewing.restrictionsCriteria = this.getPageRestrictionsCriteria(pageInfo);\r\n                        // Note: In the previous implementation of the page info, there was a call to the catalog service to retrieve the URI context\r\n                        // and assign it to the page content. However, that field doesn't seem to be in use anymore, so it was removed.\r\n                        return [2 /*return*/, pageInfoForViewing];\r\n                    case 3:\r\n                        _a = _b.sent();\r\n                        this.logService.warn(\"[\" + this.constructor.name + \"] - Cannot retrieve page info. Please try again later.\");\r\n                        return [3 /*break*/, 4];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Retrieves the page structure and adapts the fields to match the order expected in the Page Info Menu.\r\n     */\r\n    /* @ngInject */ PageInfoMenuService.prototype.getPageStructureForViewing = function (pageTypeCode, isPrimaryPage) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var structureToMap, structure, fieldsInRightOrder, nameField, descriptionFlag, descriptionField, titleFlag, titleField, labelFlag, labelField, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _b.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, this.typeStructureRestService.getStructureByType(pageTypeCode)];\r\n                    case 1:\r\n                        structureToMap = _b.sent();\r\n                        structure = structureToMap.map(function (field) { return (__assign(__assign({}, field), { editable: false })); });\r\n                        // This method needs to ensure that the page structure contains only the fields needed for viewing and in the right order.\r\n                        // The final list of attributes will have our fields in the right order. Any other fields in the structure, will appear at the end.\r\n                        this.removeFieldFromStructure(structure, 'uid');\r\n                        this.removeFieldFromStructure(structure, 'restrictions');\r\n                        fieldsInRightOrder = [];\r\n                        nameField = this.removeFieldFromStructure(structure, 'name');\r\n                        nameField.cmsStructureType = 'InfoPageName';\r\n                        this.addFieldToStructure(fieldsInRightOrder, nameField);\r\n                        this.addFieldToStructure(fieldsInRightOrder, this.buildField('displayCondition'));\r\n                        descriptionFlag = this.structureContainsItemByFieldQualifier(structure, 'description');\r\n                        if (descriptionFlag) {\r\n                            descriptionField = this.removeFieldFromStructure(structure, 'description');\r\n                            descriptionField.cmsStructureType = 'InfoPageName';\r\n                            this.addFieldToStructure(fieldsInRightOrder, descriptionField);\r\n                        }\r\n                        titleFlag = this.structureContainsItemByFieldQualifier(structure, 'title');\r\n                        if (titleFlag) {\r\n                            titleField = this.removeFieldFromStructure(structure, 'title');\r\n                            titleField.cmsStructureType = 'InfoPageName';\r\n                            this.addFieldToStructure(fieldsInRightOrder, titleField);\r\n                        }\r\n                        labelFlag = this.structureContainsItemByFieldQualifier(structure, 'label');\r\n                        if (labelFlag) {\r\n                            labelField = this.removeFieldFromStructure(structure, 'label');\r\n                            labelField.cmsStructureType = 'InfoPageName';\r\n                            this.addFieldToStructure(fieldsInRightOrder, labelField);\r\n                        }\r\n                        this.addFieldToStructure(fieldsInRightOrder, this.buildField('localizedType'));\r\n                        this.addFieldToStructure(fieldsInRightOrder, this.buildField('template'));\r\n                        if (!isPrimaryPage) {\r\n                            this.addFieldToStructure(fieldsInRightOrder, this.buildField('primaryPage'));\r\n                            this.addFieldToStructure(fieldsInRightOrder, this.buildField('restrictions', 'RestrictionsList'));\r\n                        }\r\n                        this.addFieldToStructure(fieldsInRightOrder, this.removeFieldFromStructure(structure, 'creationtime'));\r\n                        this.addFieldToStructure(fieldsInRightOrder, this.removeFieldFromStructure(structure, 'modifiedtime'));\r\n                        return [2 /*return*/, {\r\n                                attributes: concat(fieldsInRightOrder, structure),\r\n                                category: 'PAGE'\r\n                            }];\r\n                    case 2:\r\n                        _a = _b.sent();\r\n                        this.logService.warn(\"[\" + this.constructor.name + \"] - Cannot retrieve page info structure. Please try again later.\");\r\n                        return [3 /*break*/, 3];\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // ------------------------------------------------------------------------\r\n    // Helper Methods\r\n    // ------------------------------------------------------------------------\r\n    /* @ngInject */ PageInfoMenuService.prototype.addFieldToStructure = function (structure, field) {\r\n        if (field) {\r\n            structure.push(field);\r\n        }\r\n    };\r\n    /* @ngInject */ PageInfoMenuService.prototype.buildField = function (qualifier, cmsStructureType) {\r\n        if (cmsStructureType === void 0) { cmsStructureType = 'ShortString'; }\r\n        return {\r\n            cmsStructureType: cmsStructureType,\r\n            qualifier: qualifier,\r\n            i18nKey: 'se.cms.pageinfo.page.' + qualifier.toLocaleLowerCase(),\r\n            editable: false\r\n        };\r\n    };\r\n    /* @ngInject */ PageInfoMenuService.prototype.structureContainsItemByFieldQualifier = function (structure, fieldQualifier) {\r\n        return !!structure.find(function (item) { return item.qualifier === fieldQualifier; });\r\n    };\r\n    /* @ngInject */ PageInfoMenuService.prototype.removeFieldFromStructure = function (structure, fieldQualifier) {\r\n        var removedElements = remove(structure, function (field) { return field.qualifier === fieldQualifier; });\r\n        return removedElements[0];\r\n    };\r\n    /* @ngInject */ PageInfoMenuService.prototype.getPrimaryPageName = function (pageInfo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var name_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.isVariationPage(pageInfo)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.displayConditionsFacade.getPrimaryPageForVariationPage(pageInfo.uid)];\r\n                    case 1:\r\n                        name_1 = (_a.sent()).name;\r\n                        return [2 /*return*/, name_1 || null];\r\n                    case 2: return [2 /*return*/, null];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /* @ngInject */ PageInfoMenuService.prototype.isVariationPage = function (pageInfo) {\r\n        return !pageInfo.defaultPage;\r\n    };\r\n    /* @ngInject */ PageInfoMenuService.prototype.getPageDisplayCondition = function (pageInfo) {\r\n        var conditionTranslKey = this.isVariationPage(pageInfo)\r\n            ? 'page.displaycondition.variation'\r\n            : 'page.displaycondition.primary';\r\n        return this.translateService.instant(conditionTranslKey);\r\n    };\r\n    /* @ngInject */ PageInfoMenuService.prototype.getPageRestrictionsCriteria = function (pageInfo) {\r\n        if (this.isVariationPage(pageInfo) && pageInfo.onlyOneRestrictionMustApply !== undefined) {\r\n            var criteriaTranslKey = pageInfo.onlyOneRestrictionMustApply\r\n                ? this.ANY_RESTRICTIONS_CRITERIA_LABEL\r\n                : this.ALL_RESTRICTIONS_CRITERIA_LABEL;\r\n            return this.translateService.instant(criteriaTranslKey);\r\n        }\r\n        return null;\r\n    };\r\n    /* @ngInject */ PageInfoMenuService.prototype.getCurrentPageVersionId = function () {\r\n        var pageVersion = this.pageVersionSelectionService.getSelectedPageVersion();\r\n        return pageVersion ? pageVersion.uid : null;\r\n    };\r\n    /* @ngInject */ PageInfoMenuService = __decorate([\r\n        SeDowngradeService(),\r\n        __metadata(\"design:paramtypes\", [DisplayConditionsFacade,\r\n            LogService,\r\n            PageEditorModalService,\r\n            IPageService,\r\n            PageVersionSelectionService,\r\n            TranslateService,\r\n            TypeStructureRestService])\r\n    ], /* @ngInject */ PageInfoMenuService);\r\n    return /* @ngInject */ PageInfoMenuService;\r\n}());\r\nexport { /* @ngInject */ PageInfoMenuService };\r\n//# sourceMappingURL=PageInfoMenuService.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@ngx-translate/core@11.0.1_@angular+core@8.2.14+rxjs@6.5.4/node_modules/@ngx-translate/core/ngx-translate-core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@types/lodash@4.14.159/node_modules/@types/lodash/ts3.1/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/dao/TypeStructureRestService.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/facades/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/versioning/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/src/components/pages/services/PageEditorModalService.ts"],"map":"{\"version\":3,\"file\":\"PageInfoMenuService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/components/pages/services/PageInfoMenuService.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-smartedit-container/components/pages/services/PageInfoMenuService.d.ts","writeByteOrderMark":false,"text":"import { TranslateService } from '@ngx-translate/core';\r\nimport { CMSItemStructure, ICMSPage, IPageService } from 'cmscommons';\r\nimport { LogService } from 'smarteditcommons';\r\nimport { TypeStructureRestService } from '../../../dao/TypeStructureRestService';\r\nimport { DisplayConditionsFacade } from '../../../facades';\r\nimport { PageVersionSelectionService } from '../../versioning';\r\nimport { PageEditorModalService } from './PageEditorModalService';\r\nexport interface PageInfoForViewing extends ICMSPage {\r\n    template: string;\r\n    primaryPage: string | null;\r\n    displayCondition: string;\r\n    content: ICMSPage;\r\n    localizedType: string;\r\n    restrictionsCriteria: string | null;\r\n}\r\n/**\r\n * This service is used to provide all the information necessary to properly display the Page Info Menu.\r\n */\r\nexport declare class PageInfoMenuService {\r\n    private displayConditionsFacade;\r\n    private logService;\r\n    private pageEditorModalService;\r\n    private pageService;\r\n    private pageVersionSelectionService;\r\n    private translateService;\r\n    private typeStructureRestService;\r\n    private ALL_RESTRICTIONS_CRITERIA_LABEL;\r\n    private ANY_RESTRICTIONS_CRITERIA_LABEL;\r\n    private isPageEditorOpened;\r\n    constructor(displayConditionsFacade: DisplayConditionsFacade, logService: LogService, pageEditorModalService: PageEditorModalService, pageService: IPageService, pageVersionSelectionService: PageVersionSelectionService, translateService: TranslateService, typeStructureRestService: TypeStructureRestService);\r\n    openPageEditor(pageInfo: ICMSPage): void;\r\n    /**\r\n     * Retrieves the information for the current page and prepares it to be displayed in the Page Info Menu.\r\n     */\r\n    getCurrentPageInfo(): Promise<PageInfoForViewing | void>;\r\n    /**\r\n     * Retrieves the page structure and adapts the fields to match the order expected in the Page Info Menu.\r\n     */\r\n    getPageStructureForViewing(pageTypeCode: string, isPrimaryPage: boolean): Promise<CMSItemStructure | void>;\r\n    private addFieldToStructure;\r\n    private buildField;\r\n    private structureContainsItemByFieldQualifier;\r\n    private removeFieldFromStructure;\r\n    private getPrimaryPageName;\r\n    private isVariationPage;\r\n    private getPageDisplayCondition;\r\n    private getPageRestrictionsCriteria;\r\n    private getCurrentPageVersionId;\r\n}\r\n"}}

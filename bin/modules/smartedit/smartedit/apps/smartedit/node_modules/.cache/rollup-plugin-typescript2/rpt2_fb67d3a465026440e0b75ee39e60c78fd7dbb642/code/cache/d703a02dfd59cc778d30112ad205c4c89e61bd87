{"code":"/** @internal */\r\nvar RestService = /** @class */ (function () {\r\n    function RestService(delegateRestService, uri, identifier) {\r\n        this.delegateRestService = delegateRestService;\r\n        this.uri = uri;\r\n        this.identifier = identifier;\r\n        this.metadataActivated = false;\r\n    }\r\n    RestService.prototype.getById = function (id, options) {\r\n        return this.delegateRestService.delegateForSingleInstance('getById', id, this.uri, this.identifier, this.metadataActivated, options);\r\n    };\r\n    RestService.prototype.get = function (searchParams, options) {\r\n        return this.delegateRestService.delegateForSingleInstance('get', searchParams, this.uri, this.identifier, this.metadataActivated, options);\r\n    };\r\n    RestService.prototype.update = function (payload, options) {\r\n        return this.delegateRestService.delegateForSingleInstance('update', payload, this.uri, this.identifier, this.metadataActivated, options);\r\n    };\r\n    RestService.prototype.patch = function (payload, options) {\r\n        return this.delegateRestService.delegateForSingleInstance('patch', payload, this.uri, this.identifier, this.metadataActivated, options);\r\n    };\r\n    RestService.prototype.save = function (payload, options) {\r\n        return this.delegateRestService.delegateForSingleInstance('save', payload, this.uri, this.identifier, this.metadataActivated, options);\r\n    };\r\n    RestService.prototype.query = function (searchParams, options) {\r\n        return this.delegateRestService.delegateForArray('query', searchParams, this.uri, this.identifier, this.metadataActivated, options);\r\n    };\r\n    RestService.prototype.page = function (pageable, options) {\r\n        return this.delegateRestService.delegateForPage(pageable, this.uri, this.identifier, this.metadataActivated, options);\r\n    };\r\n    RestService.prototype.remove = function (payload, options) {\r\n        return this.delegateRestService.delegateForSingleInstance('remove', payload, this.uri, this.identifier, this.metadataActivated, options);\r\n    };\r\n    RestService.prototype.queryByPost = function (payload, searchParams, options) {\r\n        return this.delegateRestService.delegateForQueryByPost(payload, searchParams, this.uri, this.identifier, this.metadataActivated, options);\r\n    };\r\n    RestService.prototype.activateMetadata = function () {\r\n        // will activate response headers appending\r\n        this.metadataActivated = true;\r\n    };\r\n    return RestService;\r\n}());\r\nexport { RestService };\r\n//# sourceMappingURL=RestService.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit/src/services/DelegateRestServiceInner.ts"],"map":"{\"version\":3,\"file\":\"RestService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/services/RestService.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit/services/RestService.d.ts","writeByteOrderMark":false,"text":"import { IRestOptions, IRestService, Page, Pageable, Payload, SearchParams } from 'smarteditcommons';\r\nimport { DelegateRestService } from './DelegateRestServiceInner';\r\n/** @internal */\r\nexport declare class RestService<T> implements IRestService<T> {\r\n    private delegateRestService;\r\n    private uri;\r\n    private identifier;\r\n    private metadataActivated;\r\n    constructor(delegateRestService: DelegateRestService, uri: string, identifier: string);\r\n    getById<S extends T = T>(id: string, options?: IRestOptions): Promise<S>;\r\n    get<S extends T = T>(searchParams: Payload, options?: IRestOptions): Promise<S>;\r\n    update<S extends T = T>(payload: Payload, options?: IRestOptions): Promise<S>;\r\n    patch<S extends T = T>(payload: Payload, options?: IRestOptions): Promise<S>;\r\n    save<S extends T = T>(payload: Payload, options?: IRestOptions): Promise<S>;\r\n    query<S extends T = T>(searchParams: Payload, options?: IRestOptions): Promise<S[]>;\r\n    page<S extends Page<T>>(pageable: Pageable, options?: IRestOptions): Promise<S>;\r\n    remove(payload: Payload, options?: IRestOptions): Promise<void>;\r\n    queryByPost<S extends T = T>(payload: Payload, searchParams?: SearchParams, options?: IRestOptions): Promise<S>;\r\n    activateMetadata(): void;\r\n}\r\n"}}

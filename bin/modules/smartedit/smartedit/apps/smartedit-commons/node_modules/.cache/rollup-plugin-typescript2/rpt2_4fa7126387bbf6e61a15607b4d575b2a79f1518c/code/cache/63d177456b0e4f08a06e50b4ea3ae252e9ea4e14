{"code":"import { __decorate, __metadata } from \"tslib\";\r\nimport { SeDowngradeService } from '../../di';\r\nimport { IAlertService, IConfirmationModalService } from '../../services/interfaces';\r\nimport { TreeService } from './TreeService';\r\nimport { TreeDragAndDropEvent } from './types';\r\nvar /* @ngInject */ TreeDragAndDropService = /** @class */ (function () {\r\n    function /* @ngInject */ TreeDragAndDropService(confirmationModalService, alertService, treeService) {\r\n        this.confirmationModalService = confirmationModalService;\r\n        this.alertService = alertService;\r\n        this.treeService = treeService;\r\n    }\r\n    /* @ngInject */ TreeDragAndDropService.prototype.init = function (options) {\r\n        this.config = options;\r\n        this.isDragEnabled =\r\n            !!options &&\r\n                (!!options.onDropCallback ||\r\n                    !!options.beforeDropCallback ||\r\n                    !!options.allowDropCallback);\r\n    };\r\n    /* @ngInject */ TreeDragAndDropService.prototype.handleDrop = function (event) {\r\n        var _this = this;\r\n        if (!this.config || !event.isPointerOverContainer) {\r\n            return Promise.resolve();\r\n        }\r\n        if (!this.allowDrop(event)) {\r\n            return Promise.resolve();\r\n        }\r\n        return this.beforeDrop(event).then(function (result) {\r\n            if (result === false) {\r\n                return;\r\n            }\r\n            _this.onDrop(event);\r\n            _this.rearrangeNodes(event);\r\n        });\r\n    };\r\n    /* @ngInject */ TreeDragAndDropService.prototype.rearrangeNodes = function (event) {\r\n        this.treeService.rearrange(event.item.data, event.container.data[0].parent, event.currentIndex);\r\n    };\r\n    /* @ngInject */ TreeDragAndDropService.prototype.onDrop = function (event) {\r\n        if (!this.config.onDropCallback) {\r\n            return;\r\n        }\r\n        var dndEvent = new TreeDragAndDropEvent(event.item.data, event.container.data, event.item.data.parent, event.container.data[0].parent, event.currentIndex);\r\n        return this.config.onDropCallback(dndEvent);\r\n    };\r\n    /* @ngInject */ TreeDragAndDropService.prototype.allowDrop = function (event) {\r\n        if (!this.config.allowDropCallback) {\r\n            return true;\r\n        }\r\n        return this.config.allowDropCallback(new TreeDragAndDropEvent(event.item.data, event.container.data, event.item.data.parent, event.container.data[0].parent, event.currentIndex));\r\n    };\r\n    /* @ngInject */ TreeDragAndDropService.prototype.beforeDrop = function (event) {\r\n        var _this = this;\r\n        if (!this.config.beforeDropCallback) {\r\n            return Promise.resolve();\r\n        }\r\n        var dndEvent = new TreeDragAndDropEvent(event.item.data, event.container.data, event.item.data.parent, event.container.data[0].parent, event.currentIndex);\r\n        return this.config\r\n            .beforeDropCallback(dndEvent)\r\n            .then(function (result) {\r\n            if (typeof result === 'object') {\r\n                if (result.confirmDropI18nKey) {\r\n                    var message = {\r\n                        description: result.confirmDropI18nKey\r\n                    };\r\n                    return _this.confirmationModalService.confirm(message);\r\n                }\r\n                if (result.rejectDropI18nKey) {\r\n                    _this.alertService.showDanger({\r\n                        message: result.rejectDropI18nKey\r\n                    });\r\n                    return false;\r\n                }\r\n                throw new Error('Unexpected return value for beforeDropCallback does not contain confirmDropI18nKey nor rejectDropI18nKey: ' +\r\n                    result);\r\n            }\r\n            return result;\r\n        });\r\n    };\r\n    /* @ngInject */ TreeDragAndDropService = __decorate([\r\n        SeDowngradeService(),\r\n        __metadata(\"design:paramtypes\", [IConfirmationModalService,\r\n            IAlertService,\r\n            TreeService])\r\n    ], /* @ngInject */ TreeDragAndDropService);\r\n    return /* @ngInject */ TreeDragAndDropService;\r\n}());\r\nexport { /* @ngInject */ TreeDragAndDropService };\r\n//# sourceMappingURL=TreeDragAndDropService.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/cdk@8.2.3_ecb0ad61817e3ede6ce462931a5e5041/node_modules/@angular/cdk/drag-drop.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smart-utils/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/di/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/services/interfaces/index.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/treeModule/TreeService.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/src/components/treeModule/types.ts"],"map":"{\"version\":3,\"file\":\"TreeDragAndDropService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/components/treeModule/TreeDragAndDropService.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/components/treeModule/TreeDragAndDropService.d.ts","writeByteOrderMark":false,"text":"import { CdkDragDrop } from '@angular/cdk/drag-drop';\r\nimport { IAlertService, IConfirmationModalService } from '../../services/interfaces';\r\nimport { TreeService } from './TreeService';\r\nimport { ITreeNodeItem, TreeDragAndDropOptions } from './types';\r\nexport declare class TreeDragAndDropService<T, D> {\r\n    private confirmationModalService;\r\n    private alertService;\r\n    private treeService;\r\n    isDragEnabled: boolean;\r\n    private config;\r\n    constructor(confirmationModalService: IConfirmationModalService, alertService: IAlertService, treeService: TreeService<T, D>);\r\n    init(options: TreeDragAndDropOptions<T>): void;\r\n    handleDrop(event: CdkDragDrop<ITreeNodeItem<T>[]>): Promise<void>;\r\n    private rearrangeNodes;\r\n    private onDrop;\r\n    private allowDrop;\r\n    private beforeDrop;\r\n}\r\n"}}

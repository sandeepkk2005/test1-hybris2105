{"code":"import { __decorate } from \"tslib\";\r\n/*\r\n * Copyright (c) 2021 SAP SE or an SAP affiliate company. All rights reserved.\r\n */\r\n// import { SeFilter } from '../../../common/di/SeFilter';\r\nimport { FilterByFieldPipe, SeFilter } from 'smarteditcommons';\r\n/**\r\n * **Deprecated since 2005, use {@link FilterByFieldPipe}**.\r\n *\r\n * @deprecated\r\n */\r\nvar FilterByFieldFilter = /** @class */ (function () {\r\n    function FilterByFieldFilter() {\r\n    }\r\n    FilterByFieldFilter.transform = function () {\r\n        return function (items, query, keys, callbackFcn) { return FilterByFieldPipe.transform(items, query, keys, callbackFcn); };\r\n    };\r\n    FilterByFieldFilter = __decorate([\r\n        SeFilter()\r\n    ], FilterByFieldFilter);\r\n    return FilterByFieldFilter;\r\n}());\r\nexport { FilterByFieldFilter };\r\n//# sourceMappingURL=FilterByFieldFilter.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"FilterByFieldFilter.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/filters/FilterByFieldFilter.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,0DAA0D;AAC1D,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAY,MAAM,kBAAkB,CAAC;AAEzE;;;;GAIG;AAEH;IAAA;IASA,CAAC;IARiB,6BAAS,GAAvB;QACI,OAAO,UACH,KAAyB,EACzB,KAAa,EACb,IAAe,EACf,WAAoD,IAC/B,OAAA,iBAAiB,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,CAAC,EAA5D,CAA4D,CAAC;IAC1F,CAAC;IARQ,mBAAmB;QAD/B,QAAQ,EAAE;OACE,mBAAmB,CAS/B;IAAD,0BAAC;CAAA,AATD,IASC;SATY,mBAAmB\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-container/services/filters/FilterByFieldFilter.d.ts","writeByteOrderMark":false,"text":"import { TypedMap } from 'smarteditcommons';\r\n/**\r\n * **Deprecated since 2005, use {@link FilterByFieldPipe}**.\r\n *\r\n * @deprecated\r\n */\r\nexport declare class FilterByFieldFilter {\r\n    static transform(): (items: TypedMap<string>[], query: string, keys?: string[], callbackFcn?: (filtered: TypedMap<string>[]) => void) => TypedMap<string>[];\r\n}\r\n"}}

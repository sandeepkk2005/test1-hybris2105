{"code":"import { __decorate, __metadata } from \"tslib\";\r\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { SeDowngradeComponent } from 'smarteditcommons';\r\nimport { synchronizationUtils } from '../../SynchronizationUtils';\r\nwindow.__smartedit__.addDecoratorPayload(\"Component\", \"SynchronizationPanelItemComponent\", {\r\n    selector: 'se-synchronization-panel-item',\r\n    template: \"<div class=\\\"se-sync-panel-item-checkbox fd-form__item\\\"><input *ngIf=\\\"!item.isExternal\\\" type=\\\"checkbox\\\" [id]=\\\"'sync-info__checkbox_' + index\\\" class=\\\"se-sync-panel-item-checkbox__field fd-form__control\\\" [(ngModel)]=\\\"item.selected\\\" (ngModelChange)=\\\"onSelectionChange()\\\" [attr.disabled]=\\\"isItemDisabled() ? true : null\\\"/> <label *ngIf=\\\"index === 0\\\" [for]=\\\"'sync-info__checkbox_' + index\\\" class=\\\"se-sync-panel-item-checkbox__label se-sync-panel-item-checkbox__label--select-all fd-form__label\\\" [title]=\\\"getSelectAllLabel() | translate\\\" [translate]=\\\"getSelectAllLabel()\\\"></label> <label *ngIf=\\\"index !== 0 && !item.isExternal\\\" [for]=\\\"'sync-info__checkbox_' + index\\\" class=\\\"se-sync-panel-item-checkbox__label fd-form__label\\\" [title]=\\\"item.name | translate\\\" [translate]=\\\"item.name\\\"></label><se-tooltip *ngIf=\\\"index !== 0 && item.isExternal\\\" [isChevronVisible]=\\\"true\\\" [triggers]=\\\"['mouseenter', 'mouseleave']\\\"><label se-tooltip-trigger [for]=\\\"'sync-info__checkbox_' + index\\\" class=\\\"se-sync-panel-item-checkbox__label fd-form__label\\\" [translate]=\\\"item.name\\\"></label><div se-tooltip-body translate=\\\"se.cms.synchronization.slot.external.component\\\"></div></se-tooltip></div><span *ngIf=\\\"showPopoverOverSyncIcon()\\\"><se-tooltip [isChevronVisible]=\\\"true\\\" [appendTo]=\\\"'body'\\\" [placement]=\\\"'left'\\\" [triggers]=\\\"['mouseenter', 'mouseleave']\\\" [title]=\\\"getInfoTitle()\\\" class=\\\"pull-right se-sync-panel-item-info-icon\\\" [ngClass]=\\\"{ 'se-sync-panel--icon-globe': item.isExternal }\\\"><ng-container *ngIf=\\\"!item.isExternal\\\" se-tooltip-trigger><ng-container *ngTemplateOutlet=\\\"syncInfoIcon\\\"></ng-container></ng-container><span *ngIf=\\\"item.isExternal\\\" class=\\\"sap-icon--globe\\\" se-tooltip-trigger></span><div se-tooltip-body><ng-container *ngIf=\\\"!item.isExternal\\\"><div *ngFor=\\\"let dependentItem of item.dependentItemTypesOutOfSync\\\">{{ dependentItem.i18nKey | translate }}</div></ng-container><div *ngIf=\\\"item.isExternal\\\">{{ item.catalogVersionName | seL10n | async }}</div></div></se-tooltip></span><span *ngIf=\\\"!showPopoverOverSyncIcon()\\\" class=\\\"pull-right se-sync-panel-item-info-icon\\\"><ng-container *ngTemplateOutlet=\\\"syncInfoIcon\\\"></ng-container></span><ng-template #syncInfoIcon><span [attr.status]=\\\"item.status\\\" class=\\\"se-sync-panel-item-info-icon__icon\\\" [ngClass]=\\\"{\\n                'sap-icon--accept': isInSync(),\\n                'sap-icon--message-warning': !isInSync()\\n            }\\\"></span></ng-template>\",\r\n    styles: [\".se-sync-panel-item-checkbox{display:flex;flex-direction:row;align-items:center;margin:0!important}.se-sync-panel-item-checkbox__field{margin:0}.se-sync-panel-item-checkbox__label{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;word-break:break-all;max-width:190px!important;margin:0!important;padding-left:8px;color:#32363a;text-transform:capitalize}.se-sync-panel-item-checkbox__label--select-all{font-weight:700!important}.se-sync-panel-item-info-icon{font-size:1.1428571429rem;line-height:1.25;font-weight:400}.se-sync-panel-item-info-icon__icon.sap-icon--accept{font-size:1.1428571429rem;line-height:1.25;font-weight:400;color:#0a7e3e}.se-sync-panel-item-info-icon__icon.sap-icon--message-warning{font-size:1.1428571429rem;line-height:1.25;font-weight:400;color:#e9730c}\"]\r\n});\r\nvar /* @ngInject */ SynchronizationPanelItemComponent = /** @class */ (function () {\r\n    function /* @ngInject */ SynchronizationPanelItemComponent() {\r\n        this.selectionChange = new EventEmitter();\r\n    }\r\n    /* @ngInject */ SynchronizationPanelItemComponent.prototype.getSelectAllLabel = function () {\r\n        return this.selectAllLabel || 'se.cms.synchronization.page.select.all.slots';\r\n    };\r\n    /* @ngInject */ SynchronizationPanelItemComponent.prototype.isItemDisabled = function () {\r\n        var _a;\r\n        if (this.disableList || (this.disableItem && this.disableItem(this.item))) {\r\n            return true;\r\n        }\r\n        return ((this.item !== this.rootItem && !!((_a = this.rootItem) === null || _a === void 0 ? void 0 : _a.selected)) ||\r\n            synchronizationUtils.isInSync(this.item));\r\n    };\r\n    /* @ngInject */ SynchronizationPanelItemComponent.prototype.showPopoverOverSyncIcon = function () {\r\n        var _a;\r\n        return (((_a = this.item.dependentItemTypesOutOfSync) === null || _a === void 0 ? void 0 : _a.length) > 0 ||\r\n            synchronizationUtils.isExternalItem(this.item));\r\n    };\r\n    /* @ngInject */ SynchronizationPanelItemComponent.prototype.getInfoTitle = function () {\r\n        return !synchronizationUtils.isExternalItem(this.item)\r\n            ? 'se.cms.synchronization.panel.update.title'\r\n            : '';\r\n    };\r\n    /* @ngInject */ SynchronizationPanelItemComponent.prototype.isInSync = function () {\r\n        return synchronizationUtils.isInSync(this.item);\r\n    };\r\n    /* @ngInject */ SynchronizationPanelItemComponent.prototype.onSelectionChange = function () {\r\n        this.selectionChange.emit(this.index);\r\n    };\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Number)\r\n    ], /* @ngInject */ SynchronizationPanelItemComponent.prototype, \"index\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], /* @ngInject */ SynchronizationPanelItemComponent.prototype, \"item\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], /* @ngInject */ SynchronizationPanelItemComponent.prototype, \"rootItem\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String)\r\n    ], /* @ngInject */ SynchronizationPanelItemComponent.prototype, \"selectAllLabel\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean)\r\n    ], /* @ngInject */ SynchronizationPanelItemComponent.prototype, \"disableList\", void 0);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Function)\r\n    ], /* @ngInject */ SynchronizationPanelItemComponent.prototype, \"disableItem\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", Object)\r\n    ], /* @ngInject */ SynchronizationPanelItemComponent.prototype, \"selectionChange\", void 0);\r\n    /* @ngInject */ SynchronizationPanelItemComponent = __decorate([\r\n        SeDowngradeComponent(),\r\n        Component({\r\n            selector: 'se-synchronization-panel-item',\r\n            template: \"<div class=\\\"se-sync-panel-item-checkbox fd-form__item\\\"><input *ngIf=\\\"!item.isExternal\\\" type=\\\"checkbox\\\" [id]=\\\"'sync-info__checkbox_' + index\\\" class=\\\"se-sync-panel-item-checkbox__field fd-form__control\\\" [(ngModel)]=\\\"item.selected\\\" (ngModelChange)=\\\"onSelectionChange()\\\" [attr.disabled]=\\\"isItemDisabled() ? true : null\\\"/> <label *ngIf=\\\"index === 0\\\" [for]=\\\"'sync-info__checkbox_' + index\\\" class=\\\"se-sync-panel-item-checkbox__label se-sync-panel-item-checkbox__label--select-all fd-form__label\\\" [title]=\\\"getSelectAllLabel() | translate\\\" [translate]=\\\"getSelectAllLabel()\\\"></label> <label *ngIf=\\\"index !== 0 && !item.isExternal\\\" [for]=\\\"'sync-info__checkbox_' + index\\\" class=\\\"se-sync-panel-item-checkbox__label fd-form__label\\\" [title]=\\\"item.name | translate\\\" [translate]=\\\"item.name\\\"></label><se-tooltip *ngIf=\\\"index !== 0 && item.isExternal\\\" [isChevronVisible]=\\\"true\\\" [triggers]=\\\"['mouseenter', 'mouseleave']\\\"><label se-tooltip-trigger [for]=\\\"'sync-info__checkbox_' + index\\\" class=\\\"se-sync-panel-item-checkbox__label fd-form__label\\\" [translate]=\\\"item.name\\\"></label><div se-tooltip-body translate=\\\"se.cms.synchronization.slot.external.component\\\"></div></se-tooltip></div><span *ngIf=\\\"showPopoverOverSyncIcon()\\\"><se-tooltip [isChevronVisible]=\\\"true\\\" [appendTo]=\\\"'body'\\\" [placement]=\\\"'left'\\\" [triggers]=\\\"['mouseenter', 'mouseleave']\\\" [title]=\\\"getInfoTitle()\\\" class=\\\"pull-right se-sync-panel-item-info-icon\\\" [ngClass]=\\\"{ 'se-sync-panel--icon-globe': item.isExternal }\\\"><ng-container *ngIf=\\\"!item.isExternal\\\" se-tooltip-trigger><ng-container *ngTemplateOutlet=\\\"syncInfoIcon\\\"></ng-container></ng-container><span *ngIf=\\\"item.isExternal\\\" class=\\\"sap-icon--globe\\\" se-tooltip-trigger></span><div se-tooltip-body><ng-container *ngIf=\\\"!item.isExternal\\\"><div *ngFor=\\\"let dependentItem of item.dependentItemTypesOutOfSync\\\">{{ dependentItem.i18nKey | translate }}</div></ng-container><div *ngIf=\\\"item.isExternal\\\">{{ item.catalogVersionName | seL10n | async }}</div></div></se-tooltip></span><span *ngIf=\\\"!showPopoverOverSyncIcon()\\\" class=\\\"pull-right se-sync-panel-item-info-icon\\\"><ng-container *ngTemplateOutlet=\\\"syncInfoIcon\\\"></ng-container></span><ng-template #syncInfoIcon><span [attr.status]=\\\"item.status\\\" class=\\\"se-sync-panel-item-info-icon__icon\\\" [ngClass]=\\\"{\\n                'sap-icon--accept': isInSync(),\\n                'sap-icon--message-warning': !isInSync()\\n            }\\\"></span></ng-template>\",\r\n            styles: [\".se-sync-panel-item-checkbox{display:flex;flex-direction:row;align-items:center;margin:0!important}.se-sync-panel-item-checkbox__field{margin:0}.se-sync-panel-item-checkbox__label{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;word-break:break-all;max-width:190px!important;margin:0!important;padding-left:8px;color:#32363a;text-transform:capitalize}.se-sync-panel-item-checkbox__label--select-all{font-weight:700!important}.se-sync-panel-item-info-icon{font-size:1.1428571429rem;line-height:1.25;font-weight:400}.se-sync-panel-item-info-icon__icon.sap-icon--accept{font-size:1.1428571429rem;line-height:1.25;font-weight:400;color:#0a7e3e}.se-sync-panel-item-info-icon__icon.sap-icon--message-warning{font-size:1.1428571429rem;line-height:1.25;font-weight:400;color:#e9730c}\"]\r\n        })\r\n    ], /* @ngInject */ SynchronizationPanelItemComponent);\r\n    return /* @ngInject */ SynchronizationPanelItemComponent;\r\n}());\r\nexport { /* @ngInject */ SynchronizationPanelItemComponent };\r\n//# sourceMappingURL=SynchronizationPanelItemComponent.js.map","references":["/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedittools/common/temp/node_modules/.pnpm/@angular/core@8.2.14_rxjs@6.5.4+zone.js@0.9.1/node_modules/@angular/core/core.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/smartedit/apps/smartedit-commons/dist/index.d.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/src/modules/synchronizationPanel/SynchronizationUtils.ts","/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/src/modules/synchronizationPanel/types.ts"],"map":"{\"version\":3,\"file\":\"SynchronizationPanelItemComponent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/modules/synchronizationPanel/components/synchronizationPanelItem/SynchronizationPanelItemComponent.ts\"],\"names\":[],\"mappings\":\";AACA,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvE,OAAO,EAAE,oBAAoB,EAAE,MAAM,kBAAkB,CAAC;AACxD,OAAO,EAAE,oBAAoB,EAAE,MAAM,4BAA4B,CAAC;2FAIvD;IACP,QAAQ,EAAE,+BAA+B;IACzC,QAAQ,EAAE,+6EAGuB;IACjC,MAAM,EAAE,CAAC,mxBAAmxB,CAAC;CAChyB;AACD;IAAA;QAQc,oBAAe,GAAG,IAAI,YAAY,EAAU,CAAC;IAwC3D,CAAC;IAtCU,6EAAiB,GAAxB;QACI,OAAO,IAAI,CAAC,cAAc,IAAI,8CAA8C,CAAC;IACjF,CAAC;IAGM,0EAAc,GAArB;;QACI,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;YACvE,OAAO,IAAI,CAAC;SACf;QAED,OAAO,CACH,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAC,IAAI,CAAC,QAAQ,0CAAE,QAAQ,CAAA,CAAC;YAC1D,oBAAoB,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAC3C,CAAC;IACN,CAAC;IAGM,mFAAuB,GAA9B;;QACI,OAAO,CACH,OAAA,IAAI,CAAC,IAAI,CAAC,2BAA2B,0CAAE,MAAM,IAAG,CAAC;YACjD,oBAAoB,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CACjD,CAAC;IACN,CAAC;IAGM,wEAAY,GAAnB;QACI,OAAO,CAAC,oBAAoB,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC;YAClD,CAAC,CAAC,2CAA2C;YAC7C,CAAC,CAAC,EAAE,CAAC;IACb,CAAC;IAEM,oEAAQ,GAAf;QACI,OAAO,oBAAoB,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpD,CAAC;IAEM,6EAAiB,GAAxB;QACI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IA9CQ;QAAR,KAAK,EAAE;;oFAAe;IACd;QAAR,KAAK,EAAE;;mFAAuB;IACtB;QAAR,KAAK,EAAE;;uFAA2B;IAC1B;QAAR,KAAK,EAAE;;6FAAwB;IACvB;QAAR,KAAK,EAAE;;0FAAsB;IACrB;QAAR,KAAK,EAAE;;0FAA+C;IAE7C;QAAT,MAAM,EAAE;;8FAA8C;IAR3D;QATC,oBAAoB,EAAE;QACtB,SAAS,CAAC;YACP,QAAQ,EAAE,+BAA+B;YACzC,QAAQ,EAAE,+6EAGuB;YACjC,MAAM,EAAE,CAAC,mxBAAmxB,CAAC;SAChyB,CAAC;yDAiDD;IAAD,wDAAC;CAAA,AAhDD,IAgDC\"}","dts":{"name":"/Users/sandeepkalpane/Data/hybris2105/hybris/bin/modules/smartedit/cmssmartedit/apps/cms-commons/modules/synchronizationPanel/components/synchronizationPanelItem/SynchronizationPanelItemComponent.d.ts","writeByteOrderMark":false,"text":"import { EventEmitter } from '@angular/core';\r\nimport { ISyncStatusItem } from '../../types';\r\nexport declare class SynchronizationPanelItemComponent {\r\n    index: number;\r\n    item: ISyncStatusItem;\r\n    rootItem: ISyncStatusItem;\r\n    selectAllLabel: string;\r\n    disableList: boolean;\r\n    disableItem?: (item: ISyncStatusItem) => void;\r\n    selectionChange: EventEmitter<number>;\r\n    getSelectAllLabel(): string;\r\n    isItemDisabled(): boolean;\r\n    showPopoverOverSyncIcon(): boolean;\r\n    getInfoTitle(): string;\r\n    isInSync(): boolean;\r\n    onSelectionChange(): void;\r\n}\r\n"}}
